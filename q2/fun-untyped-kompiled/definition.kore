[topCellInitializer{}(LblinitGeneratedTopCell{}()), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)")]

module BASIC-K
    sort SortK{} []
    sort SortKItem{} []
endmodule
[]
module KSEQ
    import BASIC-K []
    symbol kseq{}(SortKItem{}, SortK{}) : SortK{} [constructor{}(), functional{}(), injective{}()]
    symbol dotk{}() : SortK{} [constructor{}(), functional{}(), injective{}()]
    symbol append{}(SortK{}, SortK{}) : SortK{} [function{}(), functional{}()]
    axiom {R} \implies{R}(
        \and{R}(
            \top{R}(),
            \and{R}(
                \in{SortK{}, R}(X0:SortK{}, dotk{}()),
            \and{R}(
                \in{SortK{}, R}(X1:SortK{}, TAIL:SortK{}),
                \top{R}()
            ))
        ),
        \equals{SortK{}, R}(
            append{}(X0:SortK{}, X1:SortK{}),
            \and{SortK{}}(
                TAIL:SortK{},
                \top{SortK{}}()
            )
        )
    ) []
    axiom {R} \implies{R}(
        \and{R}(
            \top{R}(),
            \and{R}(
                \in{SortK{}, R}(X0:SortK{}, kseq{}(K:SortKItem{}, KS:SortK{})),
            \and{R}(
                \in{SortK{}, R}(X1:SortK{}, TAIL:SortK{}),
                \top{R}()
            ))
        ),
        \equals{SortK{}, R}(
            append{}(X0:SortK{}, X1:SortK{}),
            \and{SortK{}}(
                kseq{}(K:SortKItem{}, append{}(KS:SortK{}, TAIL:SortK{})),
                \top{SortK{}}()
            )
        )
    ) []
endmodule
[]
module INJ
    symbol inj{From, To}(From) : To [sortInjection{}()]
    axiom {S1, S2, S3, R} \equals{S3, R}(inj{S2, S3}(inj{S1, S2}(T:S1)), inj{S1, S3}(T:S1)) [simplification{}()]
endmodule
[]
module K
    import KSEQ []
    import INJ []
    alias weakExistsFinally{A}(A) : A where weakExistsFinally{A}(@X:A) := @X:A []
    alias weakAlwaysFinally{A}(A) : A where weakAlwaysFinally{A}(@X:A) := @X:A []
    alias allPathGlobally{A}(A) : A where allPathGlobally{A}(@X:A) := @X:A []
endmodule
[]

module FUN-UNTYPED

// imports
  import K []

// sorts
  sort SortStoreCellOpt{} []
  sort SortTCellFragment{} []
  sort SortCons{} []
  sort SortBottom{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(14,3,14,16)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)")]
  sort SortStoreCell{} []
  sort SortKCellOpt{} []
  sort SortEnvCell{} []
  sort SortConstructorName{} [hasDomainValues{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(46,3,46,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), token{}()]
  sort SortTypeCase{} []
  sort SortVal{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(10,3,10,13)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)")]
  sort SortNames{} []
  sort SortIOInt{} []
  sort SortVals{} []
  sort SortGeneratedTopCellFragment{} []
  sort SortIOFile{} []
  hooked-sort SortList{} [concat{}(Lbl'Unds'List'Unds'{}()), element{}(LblListItem{}()), hook{}("LIST.List"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(913,3,913,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), unit{}(Lbl'Stop'List{}())]
  sort SortTypes{} []
  sort SortKCell{} []
  sort SortInputCell{} []
  sort SortTypeName{} [hasDomainValues{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(77,3,77,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), token{}()]
  sort SortEnvCellOpt{} []
  sort SortGeneratedTopCell{} []
  sort SortGeneratedCounterCell{} []
  sort SortCase{} []
  sort SortOutputCellOpt{} []
  sort SortTypeCases{} []
  sort SortTypeVar{} [hasDomainValues{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(75,3,75,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), token{}()]
  hooked-sort SortFloat{} [hasDomainValues{}(), hook{}("FLOAT.Float"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1470,3,1470,35)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)")]
  sort SortOutputCell{} []
  sort SortName{} [hasDomainValues{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(5,3,5,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), token{}()]
  sort SortTCellOpt{} []
  hooked-sort SortMap{} [concat{}(Lbl'Unds'Map'Unds'{}()), element{}(Lbl'UndsPipe'-'-GT-Unds'{}()), hook{}("MAP.Map"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(218,3,218,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), unit{}(Lbl'Stop'Map{}())]
  hooked-sort SortString{} [hasDomainValues{}(), hook{}("STRING.String"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1683,3,1683,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)")]
  sort SortIOString{} []
  sort SortId{} [hasDomainValues{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2235,3,2235,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), token{}()]
  sort SortGeneratedCounterCellOpt{} []
  sort SortMatchResult{} []
  sort SortKConfigVar{} [hasDomainValues{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,3,40,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/kast.md)"), token{}()]
  sort SortBinding{} []
  sort SortBottoms{} []
  sort SortExp{} []
  hooked-sort SortInt{} [hasDomainValues{}(), hook{}("INT.Int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1189,3,1189,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)")]
  sort SortIOError{} []
  sort SortInputCellOpt{} []
  hooked-sort SortSet{} [concat{}(Lbl'Unds'Set'Unds'{}()), element{}(LblSetItem{}()), hook{}("SET.Set"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(700,3,700,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), unit{}(Lbl'Stop'Set{}())]
  sort SortCases{} []
  sort SortBindings{} []
  sort SortExps{} []
  sort SortType{} []
  sort SortKResult{} []
  sort SortStream{} []
  sort SortTCell{} []
  hooked-sort SortBool{} [hasDomainValues{}(), hook{}("BOOL.Bool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1068,3,1068,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)")]
  sort SortTypeVars{} []

// symbols
  symbol Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [constructor{}(), format{}("%c!%r %1"), functional{}(), group{}("arith"), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,18,35,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}()), right{}(), strict{}(""), terminals{}("10")]
  symbol Lbl'Hash'E2BIG{}() : SortIOError{} [constructor{}(), format{}("%c#E2BIG%r"), functional{}(), injective{}(), klabel{}("#E2BIG"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2386,22,2386,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EACCES{}() : SortIOError{} [constructor{}(), format{}("%c#EACCES%r"), functional{}(), injective{}(), klabel{}("#EACCES"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2387,22,2387,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EADDRINUSE{}() : SortIOError{} [constructor{}(), format{}("%c#EADDRINUSE%r"), functional{}(), injective{}(), klabel{}("#EADDRINUSE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2436,22,2436,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EADDRNOTAVAIL{}() : SortIOError{} [constructor{}(), format{}("%c#EADDRNOTAVAIL%r"), functional{}(), injective{}(), klabel{}("#EADDRNOTAVAIL"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2437,22,2437,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EAFNOSUPPORT{}() : SortIOError{} [constructor{}(), format{}("%c#EAFNOSUPPORT%r"), functional{}(), injective{}(), klabel{}("#EAFNOSUPPORT"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2435,22,2435,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EAGAIN{}() : SortIOError{} [constructor{}(), format{}("%c#EAGAIN%r"), functional{}(), injective{}(), klabel{}("#EAGAIN"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2388,22,2388,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EALREADY{}() : SortIOError{} [constructor{}(), format{}("%c#EALREADY%r"), functional{}(), injective{}(), klabel{}("#EALREADY"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2425,22,2425,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EBADF{}() : SortIOError{} [constructor{}(), format{}("%c#EBADF%r"), functional{}(), injective{}(), klabel{}("#EBADF"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2389,22,2389,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EBUSY{}() : SortIOError{} [constructor{}(), format{}("%c#EBUSY%r"), functional{}(), injective{}(), klabel{}("#EBUSY"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2390,22,2390,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ECHILD{}() : SortIOError{} [constructor{}(), format{}("%c#ECHILD%r"), functional{}(), injective{}(), klabel{}("#ECHILD"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2391,22,2391,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ECONNABORTED{}() : SortIOError{} [constructor{}(), format{}("%c#ECONNABORTED%r"), functional{}(), injective{}(), klabel{}("#ECONNABORTED"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2441,22,2441,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ECONNREFUSED{}() : SortIOError{} [constructor{}(), format{}("%c#ECONNREFUSED%r"), functional{}(), injective{}(), klabel{}("#ECONNREFUSED"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2449,22,2449,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ECONNRESET{}() : SortIOError{} [constructor{}(), format{}("%c#ECONNRESET%r"), functional{}(), injective{}(), klabel{}("#ECONNRESET"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2442,22,2442,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EDEADLK{}() : SortIOError{} [constructor{}(), format{}("%c#EDEADLK%r"), functional{}(), injective{}(), klabel{}("#EDEADLK"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2392,22,2392,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EDESTADDRREQ{}() : SortIOError{} [constructor{}(), format{}("%c#EDESTADDRREQ%r"), functional{}(), injective{}(), klabel{}("#EDESTADDRREQ"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2427,22,2427,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EDOM{}() : SortIOError{} [constructor{}(), format{}("%c#EDOM%r"), functional{}(), injective{}(), klabel{}("#EDOM"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2393,22,2393,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EEXIST{}() : SortIOError{} [constructor{}(), format{}("%c#EEXIST%r"), functional{}(), injective{}(), klabel{}("#EEXIST"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2394,22,2394,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EFAULT{}() : SortIOError{} [constructor{}(), format{}("%c#EFAULT%r"), functional{}(), injective{}(), klabel{}("#EFAULT"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2395,22,2395,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EFBIG{}() : SortIOError{} [constructor{}(), format{}("%c#EFBIG%r"), functional{}(), injective{}(), klabel{}("#EFBIG"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2396,22,2396,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EHOSTDOWN{}() : SortIOError{} [constructor{}(), format{}("%c#EHOSTDOWN%r"), functional{}(), injective{}(), klabel{}("#EHOSTDOWN"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2450,22,2450,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EHOSTUNREACH{}() : SortIOError{} [constructor{}(), format{}("%c#EHOSTUNREACH%r"), functional{}(), injective{}(), klabel{}("#EHOSTUNREACH"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2451,22,2451,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EINPROGRESS{}() : SortIOError{} [constructor{}(), format{}("%c#EINPROGRESS%r"), functional{}(), injective{}(), klabel{}("#EINPROGRESS"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2424,22,2424,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EINTR{}() : SortIOError{} [constructor{}(), format{}("%c#EINTR%r"), functional{}(), injective{}(), klabel{}("#EINTR"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2397,22,2397,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EINVAL{}() : SortIOError{} [constructor{}(), format{}("%c#EINVAL%r"), functional{}(), injective{}(), klabel{}("#EINVAL"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2398,22,2398,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EIO{}() : SortIOError{} [constructor{}(), format{}("%c#EIO%r"), functional{}(), injective{}(), klabel{}("#EIO"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2399,22,2399,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EISCONN{}() : SortIOError{} [constructor{}(), format{}("%c#EISCONN%r"), functional{}(), injective{}(), klabel{}("#EISCONN"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2444,22,2444,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EISDIR{}() : SortIOError{} [constructor{}(), format{}("%c#EISDIR%r"), functional{}(), injective{}(), klabel{}("#EISDIR"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2400,22,2400,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ELOOP{}() : SortIOError{} [constructor{}(), format{}("%c#ELOOP%r"), functional{}(), injective{}(), klabel{}("#ELOOP"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2452,22,2452,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EMFILE{}() : SortIOError{} [constructor{}(), format{}("%c#EMFILE%r"), functional{}(), injective{}(), klabel{}("#EMFILE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2401,22,2401,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EMLINK{}() : SortIOError{} [constructor{}(), format{}("%c#EMLINK%r"), functional{}(), injective{}(), klabel{}("#EMLINK"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2402,22,2402,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EMSGSIZE{}() : SortIOError{} [constructor{}(), format{}("%c#EMSGSIZE%r"), functional{}(), injective{}(), klabel{}("#EMSGSIZE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2428,22,2428,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENAMETOOLONG{}() : SortIOError{} [constructor{}(), format{}("%c#ENAMETOOLONG%r"), functional{}(), injective{}(), klabel{}("#ENAMETOOLONG"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2403,22,2403,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENETDOWN{}() : SortIOError{} [constructor{}(), format{}("%c#ENETDOWN%r"), functional{}(), injective{}(), klabel{}("#ENETDOWN"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2438,22,2438,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENETRESET{}() : SortIOError{} [constructor{}(), format{}("%c#ENETRESET%r"), functional{}(), injective{}(), klabel{}("#ENETRESET"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2440,22,2440,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENETUNREACH{}() : SortIOError{} [constructor{}(), format{}("%c#ENETUNREACH%r"), functional{}(), injective{}(), klabel{}("#ENETUNREACH"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2439,22,2439,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENFILE{}() : SortIOError{} [constructor{}(), format{}("%c#ENFILE%r"), functional{}(), injective{}(), klabel{}("#ENFILE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2404,22,2404,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOBUFS{}() : SortIOError{} [constructor{}(), format{}("%c#ENOBUFS%r"), functional{}(), injective{}(), klabel{}("#ENOBUFS"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2443,22,2443,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENODEV{}() : SortIOError{} [constructor{}(), format{}("%c#ENODEV%r"), functional{}(), injective{}(), klabel{}("#ENODEV"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2405,22,2405,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOENT{}() : SortIOError{} [constructor{}(), format{}("%c#ENOENT%r"), functional{}(), injective{}(), klabel{}("#ENOENT"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2406,22,2406,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOEXEC{}() : SortIOError{} [constructor{}(), format{}("%c#ENOEXEC%r"), functional{}(), injective{}(), klabel{}("#ENOEXEC"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2407,22,2407,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOLCK{}() : SortIOError{} [constructor{}(), format{}("%c#ENOLCK%r"), functional{}(), injective{}(), klabel{}("#ENOLCK"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2408,22,2408,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOMEM{}() : SortIOError{} [constructor{}(), format{}("%c#ENOMEM%r"), functional{}(), injective{}(), klabel{}("#ENOMEM"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2409,22,2409,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOPROTOOPT{}() : SortIOError{} [constructor{}(), format{}("%c#ENOPROTOOPT%r"), functional{}(), injective{}(), klabel{}("#ENOPROTOOPT"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2430,22,2430,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOSPC{}() : SortIOError{} [constructor{}(), format{}("%c#ENOSPC%r"), functional{}(), injective{}(), klabel{}("#ENOSPC"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2410,22,2410,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOSYS{}() : SortIOError{} [constructor{}(), format{}("%c#ENOSYS%r"), functional{}(), injective{}(), klabel{}("#ENOSYS"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2411,22,2411,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOTCONN{}() : SortIOError{} [constructor{}(), format{}("%c#ENOTCONN%r"), functional{}(), injective{}(), klabel{}("#ENOTCONN"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2445,22,2445,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOTDIR{}() : SortIOError{} [constructor{}(), format{}("%c#ENOTDIR%r"), functional{}(), injective{}(), klabel{}("#ENOTDIR"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2412,22,2412,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOTEMPTY{}() : SortIOError{} [constructor{}(), format{}("%c#ENOTEMPTY%r"), functional{}(), injective{}(), klabel{}("#ENOTEMPTY"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2413,22,2413,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOTSOCK{}() : SortIOError{} [constructor{}(), format{}("%c#ENOTSOCK%r"), functional{}(), injective{}(), klabel{}("#ENOTSOCK"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2426,22,2426,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOTTY{}() : SortIOError{} [constructor{}(), format{}("%c#ENOTTY%r"), functional{}(), injective{}(), klabel{}("#ENOTTY"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2414,22,2414,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENXIO{}() : SortIOError{} [constructor{}(), format{}("%c#ENXIO%r"), functional{}(), injective{}(), klabel{}("#ENXIO"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2415,22,2415,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EOF{}() : SortIOError{} [constructor{}(), format{}("%c#EOF%r"), functional{}(), injective{}(), klabel{}("#EOF"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2385,22,2385,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EOPNOTSUPP{}() : SortIOError{} [constructor{}(), format{}("%c#EOPNOTSUPP%r"), functional{}(), injective{}(), klabel{}("#EOPNOTSUPP"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2433,22,2433,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EOVERFLOW{}() : SortIOError{} [constructor{}(), format{}("%c#EOVERFLOW%r"), functional{}(), injective{}(), klabel{}("#EOVERFLOW"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2453,22,2453,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EPERM{}() : SortIOError{} [constructor{}(), format{}("%c#EPERM%r"), functional{}(), injective{}(), klabel{}("#EPERM"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2416,22,2416,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EPFNOSUPPORT{}() : SortIOError{} [constructor{}(), format{}("%c#EPFNOSUPPORT%r"), functional{}(), injective{}(), klabel{}("#EPFNOSUPPORT"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2434,22,2434,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EPIPE{}() : SortIOError{} [constructor{}(), format{}("%c#EPIPE%r"), functional{}(), injective{}(), klabel{}("#EPIPE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2417,22,2417,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EPROTONOSUPPORT{}() : SortIOError{} [constructor{}(), format{}("%c#EPROTONOSUPPORT%r"), functional{}(), injective{}(), klabel{}("#EPROTONOSUPPORT"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2431,22,2431,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EPROTOTYPE{}() : SortIOError{} [constructor{}(), format{}("%c#EPROTOTYPE%r"), functional{}(), injective{}(), klabel{}("#EPROTOTYPE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2429,22,2429,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ERANGE{}() : SortIOError{} [constructor{}(), format{}("%c#ERANGE%r"), functional{}(), injective{}(), klabel{}("#ERANGE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2418,22,2418,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EROFS{}() : SortIOError{} [constructor{}(), format{}("%c#EROFS%r"), functional{}(), injective{}(), klabel{}("#EROFS"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2419,22,2419,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ESHUTDOWN{}() : SortIOError{} [constructor{}(), format{}("%c#ESHUTDOWN%r"), functional{}(), injective{}(), klabel{}("#ESHUTDOWN"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2446,22,2446,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ESOCKTNOSUPPORT{}() : SortIOError{} [constructor{}(), format{}("%c#ESOCKTNOSUPPORT%r"), functional{}(), injective{}(), klabel{}("#ESOCKTNOSUPPORT"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2432,22,2432,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ESPIPE{}() : SortIOError{} [constructor{}(), format{}("%c#ESPIPE%r"), functional{}(), injective{}(), klabel{}("#ESPIPE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2420,22,2420,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ESRCH{}() : SortIOError{} [constructor{}(), format{}("%c#ESRCH%r"), functional{}(), injective{}(), klabel{}("#ESRCH"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2421,22,2421,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ETIMEDOUT{}() : SortIOError{} [constructor{}(), format{}("%c#ETIMEDOUT%r"), functional{}(), injective{}(), klabel{}("#ETIMEDOUT"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2448,22,2448,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ETOOMANYREFS{}() : SortIOError{} [constructor{}(), format{}("%c#ETOOMANYREFS%r"), functional{}(), injective{}(), klabel{}("#ETOOMANYREFS"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2447,22,2447,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EWOULDBLOCK{}() : SortIOError{} [constructor{}(), format{}("%c#EWOULDBLOCK%r"), functional{}(), injective{}(), klabel{}("#EWOULDBLOCK"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2423,22,2423,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EXDEV{}() : SortIOError{} [constructor{}(), format{}("%c#EXDEV%r"), functional{}(), injective{}(), klabel{}("#EXDEV"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2422,22,2422,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  hooked-symbol Lbl'Hash'accept'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(SortInt{}) : SortIOInt{} [format{}("%c#accept%r %c(... %r fd: %1 %c)%r"), function{}(), hook{}("IO.accept"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2551,20,2551,81)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'argv'LParRParUnds'K-REFLECTION'Unds'List{}() : SortList{} [format{}("%c#argv%r %c(%r %c)%r"), function{}(), hook{}("KREFLECTION.argv"), klabel{}("#argv"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2343,19,2343,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(SortK{}) : SortStream{} [constructor{}(), format{}("%c#buffer%r %c(%r %1 %c)%r"), functional{}(), injective{}(), klabel{}("#buffer"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2655,21,2655,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [format{}("%c#close%r %c(... %r fd: %1 %c)%r"), function{}(), hook{}("IO.close"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2525,16,2525,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'configuration'Unds'K-REFLECTION'Unds'K{}() : SortK{} [format{}("%c#configuration%r"), function{}(), hook{}("KREFLECTION.configuration"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2332,16,2332,84)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1")]
  symbol Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezer!__FUN-UNTYPED-COMMON_Exp_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezer-__FUN-UNTYPED-COMMON_Exp_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezer@__FUN-UNTYPED-COMMON_Exp_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezer[_]_FUN-UNTYPED-COMMON_Exp_Exps0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_!=__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_!=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_%%__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_%%__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_&&__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_(_)_FUN-UNTYPED-COMMON_Exp_ConstructorName_Exps1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_*__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_*__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_+__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_+__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_,__FUN-UNTYPED-COMMON_Exps_Exp_Exps0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_,__FUN-UNTYPED-COMMON_Exps_Exp_Exps1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_-__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_-__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_/__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_/__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_:=__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_:=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_;__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_<=__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_<=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_<__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_<__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_==__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_==__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_>=__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_>=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_>__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_>__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_^__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_^__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer___FUN-UNTYPED-COMMON_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer___FUN-UNTYPED-COMMON_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_||__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezerassignTo(_,_)_FUN-UNTYPED_KItem_Names_Exps1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezerbindTo(_,_)_FUN-UNTYPED_KItem_Names_Exps1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}, SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezerif_then_else__FUN-UNTYPED-COMMON_Exp_Exp_Exp_Exp0_%r %c(%r %1 %c,%r %2 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("110101")]
  symbol Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezerprint__FUN-UNTYPED-COMMON_Exp_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  hooked-symbol Lbl'Hash'fresh'LParUndsRParUnds'K-REFLECTION'Unds'KItem'Unds'String{}(SortString{}) : SortKItem{} [format{}("%c#fresh%r %c(%r %1 %c)%r"), function{}(), hook{}("KREFLECTION.fresh"), impure{}(), klabel{}("#fresh"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2334,20,2334,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(SortInt{}) : SortIOInt{} [format{}("%c#getc%r %c(... %r fd: %1 %c)%r"), function{}(), hook{}("IO.getc"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2506,20,2506,89)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'getenv'LParUndsRParUnds'K-REFLECTION'Unds'K'Unds'String{}(SortString{}) : SortK{} [format{}("%c#getenv%r %c(%r %1 %c)%r"), function{}(), hook{}("KREFLECTION.getenv"), impure{}(), klabel{}("#getenv"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2337,16,2337,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(SortBool{}, SortSort, SortSort) : SortSort [format{}("%c#if%r %1 %c#then%r %2 %c#else%r %3 %c#fi%r"), function{}(), functional{}(), hook{}("KEQUAL.ite"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2277,26,2277,121)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("ite"), terminals{}("1010101"), total{}()]
  symbol Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(SortInt{}) : SortStream{} [constructor{}(), format{}("%c#istream%r %c(%r %1 %c)%r"), functional{}(), injective{}(), klabel{}("#istream"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2656,21,2656,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'kompiledDirectory'LParRParUnds'K-REFLECTION'Unds'String{}() : SortString{} [format{}("%c#kompiledDirectory%r %c(%r %c)%r"), function{}(), hook{}("KREFLECTION.kompiledDir"), klabel{}("#kompiledDirectory"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2339,21,2339,83)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("111")]
  hooked-symbol Lbl'Hash'lock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [format{}("%c#lock%r %c(... %r fd: %1 %c,%r endIndex: %2 %c)%r"), function{}(), hook{}("IO.lock"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2537,16,2537,91)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol Lbl'Hash'log{}(SortString{}) : SortK{} [format{}("%c#log%r %c(... %r value: %1 %c)%r"), function{}(), functional{}(), hook{}("IO.logString"), impure{}(), klabel{}("#log"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2631,16,2631,102)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), returnsUnit{}(), right{}(), symbol'Kywd'{}(), terminals{}("1101"), total{}()]
  hooked-symbol Lbl'Hash'logToFile{}(SortString{}, SortString{}) : SortK{} [format{}("%c#logToFile%r %c(... %r name: %1 %c,%r value: %2 %c)%r"), function{}(), functional{}(), hook{}("IO.log"), impure{}(), klabel{}("#logToFile"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2622,16,2622,116)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), returnsUnit{}(), right{}(), symbol'Kywd'{}(), terminals{}("110101"), total{}()]
  hooked-symbol Lbl'Hash'mkstemp'LParUndsRParUnds'K-IO'Unds'IOFile'Unds'String{}(SortString{}) : SortIOFile{} [format{}("%c#mkstemp%r %c(... %r template: %1 %c)%r"), function{}(), hook{}("IO.mkstemp"), impure{}(), klabel{}("#mkstemp"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2599,21,2599,84)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'noParse{}(SortString{}) : SortIOError{} [constructor{}(), format{}("%c#noParse%r %c(%r %1 %c)%r"), functional{}(), injective{}(), klabel{}("#noParse"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2348,22,2348,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1101")]
  symbol Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String{}(SortString{}) : SortIOInt{} [format{}("%c#open%r %c(... %r path: %1 %c)%r"), function{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2476,20,2476,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortIOInt{} [format{}("%c#open%r %c(... %r path: %1 %c,%r mode: %2 %c)%r"), function{}(), hook{}("IO.open"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2477,18,2477,97)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  symbol Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(SortInt{}) : SortStream{} [constructor{}(), format{}("%c#ostream%r %c(%r %1 %c)%r"), functional{}(), injective{}(), klabel{}("#ostream"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2658,21,2658,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortStream{} [constructor{}(), format{}("%c#parseInput%r %c(%r %1 %c,%r %2 %c)%r"), functional{}(), injective{}(), klabel{}("#parseInput"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2657,21,2657,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol Lbl'Hash'parseKORE'LParUndsRParUnds'K-REFLECTION'Unds'Sort'Unds'String{SortSort}(SortString{}) : SortSort [format{}("%c#parseKORE%r %c(%r %1 %c)%r"), function{}(), hook{}("KREFLECTION.parseKORE"), klabel{}("#parseKORE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2346,26,2346,84)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'putc'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [format{}("%c#putc%r %c(... %r fd: %1 %c,%r value: %2 %c)%r"), function{}(), hook{}("IO.putc"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2516,16,2516,93)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortIOString{} [format{}("%c#read%r %c(... %r fd: %1 %c,%r length: %2 %c)%r"), function{}(), hook{}("IO.read"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2507,23,2507,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String{}(SortString{}) : SortK{} [format{}("%c#remove%r %c(... %r path: %1 %c)%r"), function{}(), functional{}(), hook{}("IO.remove"), impure{}(), klabel{}("#remove"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2610,16,2610,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol Lbl'Hash'seek'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [format{}("%c#seek%r %c(... %r fd: %1 %c,%r index: %2 %c)%r"), function{}(), hook{}("IO.seek"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2492,16,2492,88)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol Lbl'Hash'seekEnd'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [format{}("%c#seekEnd%r %c(... %r fd: %1 %c,%r fromEnd: %2 %c)%r"), function{}(), hook{}("IO.seekEnd"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2493,16,2493,96)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol Lbl'Hash'shutdownWrite'LParUndsRParUnds'K-IO'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [format{}("%c#shutdownWrite%r %c(... %r fd: %1 %c)%r"), function{}(), hook{}("IO.shutdownWrite"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2552,16,2552,91)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'sort'LParUndsRParUnds'K-REFLECTION'Unds'String'Unds'K{}(SortK{}) : SortString{} [format{}("%c#sort%r %c(%r %1 %c)%r"), function{}(), hook{}("KREFLECTION.sort"), klabel{}("#sort"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2333,21,2333,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'stderr'Unds'K-IO'Unds'Int{}() : SortInt{} [format{}("%c#stderr%r"), function{}(), functional{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2572,19,2572,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1"), total{}()]
  symbol Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}() : SortInt{} [format{}("%c#stdin%r"), function{}(), functional{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2570,18,2570,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1"), total{}()]
  symbol Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}() : SortInt{} [format{}("%c#stdout%r"), function{}(), functional{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2571,19,2571,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1"), total{}()]
  hooked-symbol Lbl'Hash'system'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String{}(SortString{}) : SortKItem{} [format{}("%c#system%r %c(%r %1 %c)%r"), function{}(), hook{}("IO.system"), impure{}(), klabel{}("#system"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2588,20,2588,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'systemResult{}(SortInt{}, SortString{}, SortString{}) : SortKItem{} [constructor{}(), format{}("%c#systemResult%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), functional{}(), injective{}(), klabel{}("#systemResult"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2589,20,2589,143)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("11010101")]
  hooked-symbol Lbl'Hash'tell'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(SortInt{}) : SortIOInt{} [format{}("%c#tell%r %c(... %r fd: %1 %c)%r"), function{}(), hook{}("IO.tell"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2491,20,2491,77)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'tempFile{}(SortString{}, SortInt{}) : SortIOFile{} [constructor{}(), format{}("%c#tempFile%r %c(... %r path: %1 %c,%r fd: %2 %c)%r"), functional{}(), injective{}(), klabel{}("#tempFile"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2601,21,2601,93)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("110101")]
  hooked-symbol Lbl'Hash'time'LParRParUnds'K-IO'Unds'Int{}() : SortInt{} [format{}("%c#time%r %c(%r %c)%r"), function{}(), hook{}("IO.time"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2561,18,2561,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("111")]
  hooked-symbol Lbl'Hash'trace{}(SortKItem{}) : SortK{} [format{}("%c#trace%r %c(... %r value: %1 %c)%r"), function{}(), functional{}(), hook{}("IO.traceTerm"), impure{}(), klabel{}("#trace"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2642,16,2642,103)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), returnsUnit{}(), right{}(), symbol'Kywd'{}(), terminals{}("1101"), total{}()]
  hooked-symbol Lbl'Hash'traceK{}(SortK{}) : SortK{} [format{}("%c#traceK%r %c(... %r value: %1 %c)%r"), function{}(), functional{}(), hook{}("IO.traceTerm"), impure{}(), klabel{}("#traceK"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2643,16,2643,103)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), returnsUnit{}(), right{}(), symbol'Kywd'{}(), terminals{}("1101"), total{}()]
  symbol Lbl'Hash'unknownIOError{}(SortInt{}) : SortIOError{} [constructor{}(), format{}("%c#unknownIOError%r %c(... %r errno: %1 %c)%r"), functional{}(), injective{}(), klabel{}("#unknownIOError"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2385,54,2385,90)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'unlock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [format{}("%c#unlock%r %c(... %r fd: %1 %c,%r endIndex: %2 %c)%r"), function{}(), hook{}("IO.unlock"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2538,16,2538,95)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol Lbl'Hash'unparseKORE'LParUndsRParUnds'K-REFLECTION'Unds'String'Unds'Sort{SortSort}(SortSort) : SortString{} [format{}("%c#unparseKORE%r %c(%r %1 %c)%r"), function{}(), hook{}("KREFLECTION.printKORE"), klabel{}("#unparseKORE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2347,28,2347,86)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String{}(SortInt{}, SortString{}) : SortK{} [format{}("%c#write%r %c(... %r fd: %1 %c,%r value: %2 %c)%r"), function{}(), hook{}("IO.write"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2517,16,2517,93)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  symbol Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(SortName{}) : SortExp{} [constructor{}(), format{}("%c&%r %1"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(62,18,62,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("10")]
  symbol Lbl'LParUndsRParUndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'Types'Unds'TypeName{}(SortTypes{}, SortTypeName{}) : SortType{} [constructor{}(), format{}("%c(%r %1 %c)%r %2"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(84,19,84,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), prefer{}(), priorities{}(), right{}(), terminals{}("1010")]
  symbol Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [constructor{}(), format{}("%c-%r %1"), functional{}(), group{}("arith"), injective{}(), left{}(Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,18,27,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(),Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("10")]
  hooked-symbol Lbl'Stop'List{}() : SortList{} [format{}("%c.List%r"), function{}(), functional{}(), hook{}("LIST.unit"), klabel{}(".List"), latex{}("\\dotCt{List}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(937,19,937,142)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smtlib{}("smt_seq_nil"), symbol'Kywd'{}(), terminals{}("1"), total{}()]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms'QuotRBraUnds'Bottoms{}() : SortBottoms{} [constructor{}(), format{}("%c.Bottoms%r"), functional{}(), injective{}(), klabel{}(".List{\"exps\"}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(15,22,15,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1"), userList{}("*")]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}() : SortExps{} [anywhere{}(), format{}("%c.Exps%r"), functional{}(), injective{}(), klabel{}(".List{\"exps\"}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(9,20,9,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1"), userList{}("*")]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Names'Unds'Name'Unds'Names'QuotRBraUnds'Names{}() : SortNames{} [anywhere{}(), format{}("%c.Names%r"), functional{}(), injective{}(), klabel{}(".List{\"exps\"}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(6,20,6,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1"), userList{}("*")]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeVars'Unds'TypeVar'Unds'TypeVars'QuotRBraUnds'TypeVars{}() : SortTypeVars{} [constructor{}(), format{}("%c.TypeVars%r"), functional{}(), injective{}(), klabel{}(".List{\"types\"}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(76,23,76,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1"), userList{}("*")]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}() : SortTypes{} [anywhere{}(), format{}("%c.Types%r"), functional{}(), injective{}(), klabel{}(".List{\"types\"}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(85,20,85,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1"), userList{}("*")]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}() : SortVals{} [anywhere{}(), format{}("%c.Vals%r"), functional{}(), injective{}(), klabel{}(".List{\"exps\"}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(13,19,13,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1"), userList{}("*")]
  symbol Lbl'Stop'List'LBraQuotUnds'and'UndsUnds'FUN-UNTYPED-COMMON'Unds'Bindings'Unds'Binding'Unds'Bindings'QuotRBraUnds'Bindings{}() : SortBindings{} [constructor{}(), format{}("%c.Bindings%r"), functional{}(), injective{}(), klabel{}(".List{\"_and__FUN-UNTYPED-COMMON\"}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(60,23,60,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1"), userList{}("*")]
  symbol Lbl'Stop'List'LBraQuotUndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Cases'Unds'Case'Unds'Cases'QuotRBraUnds'Cases{}() : SortCases{} [constructor{}(), format{}("%c.Cases%r"), functional{}(), injective{}(), klabel{}(".List{\"_|__FUN-UNTYPED-COMMON\"}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(54,20,54,35)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1"), userList{}("*")]
  symbol Lbl'Stop'List'LBraQuotUndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeCases'Unds'TypeCase'Unds'TypeCases'QuotRBraUnds'TypeCases{}() : SortTypeCases{} [constructor{}(), format{}("%c.TypeCases%r"), functional{}(), injective{}(), klabel{}(".List{\"_|TypeCase_\"}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(90,24,90,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1"), userList{}("*")]
  hooked-symbol Lbl'Stop'Map{}() : SortMap{} [format{}("%c.Map%r"), function{}(), functional{}(), hook{}("MAP.unit"), klabel{}(".Map"), latex{}("\\dotCt{Map}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(248,18,248,124)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1"), total{}()]
  hooked-symbol Lbl'Stop'Set{}() : SortSet{} [format{}("%c.Set%r"), function{}(), functional{}(), hook{}("SET.unit"), klabel{}(".Set"), latex{}("\\dotCt{Set}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(729,18,729,118)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1"), total{}()]
  symbol Lbl'-LT-'T'-GT-'{}(SortKCell{}, SortEnvCell{}, SortInputCell{}, SortOutputCell{}, SortStoreCell{}) : SortTCell{} [cell{}(), cellName{}("T"), color{}("yellow"), colors{}("yellow,yellow"), constructor{}(), format{}("%c<T>%r%i%n%1%n%2%n%3%n%4%n%5%d%n%c</T>%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(149,17,155,21)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("1000001")]
  symbol Lbl'-LT-'T'-GT-'-fragment{}(SortKCellOpt{}, SortEnvCellOpt{}, SortInputCellOpt{}, SortOutputCellOpt{}, SortStoreCellOpt{}) : SortTCellFragment{} [cellFragment{}("TCell"), constructor{}(), format{}("%c<T>-fragment%r %1 %2 %3 %4 %5 %c</T>-fragment%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1000001")]
  symbol Lbl'-LT-'env'-GT-'{}(SortMap{}) : SortEnvCell{} [cell{}(), cellName{}("env"), color{}("violet"), colors{}("violet,violet"), constructor{}(), format{}("%c<env>%r%i%n%1%d%n%c</env>%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(151,19,151,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'-LT-'generatedCounter'-GT-'{}(SortInt{}) : SortGeneratedCounterCell{} [cell{}(), cellName{}("generatedCounter"), constructor{}(), format{}("%c<generatedCounter>%r%i%n%1%d%n%c</generatedCounter>%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'-LT-'generatedTop'-GT-'{}(SortTCell{}, SortGeneratedCounterCell{}) : SortGeneratedTopCell{} [cell{}(), cellName{}("generatedTop"), constructor{}(), format{}("%1"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1001")]
  symbol Lbl'-LT-'generatedTop'-GT-'-fragment{}(SortTCellOpt{}, SortGeneratedCounterCellOpt{}) : SortGeneratedTopCellFragment{} [cellFragment{}("GeneratedTopCell"), constructor{}(), format{}("%c<generatedTop>-fragment%r %1 %2 %c</generatedTop>-fragment%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1001")]
  symbol Lbl'-LT-'input'-GT-'{}(SortList{}) : SortInputCell{} [cell{}(), cellName{}("input"), constructor{}(), format{}("%c<input>%r%i%n%1%d%n%c</input>%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(152,19,152,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), stream{}("stdin"), terminals{}("101")]
  symbol Lbl'-LT-'k'-GT-'{}(SortK{}) : SortKCell{} [cell{}(), cellName{}("k"), color{}("green"), colors{}("green,green"), constructor{}(), format{}("%c<k>%r%i%n%1%d%n%c</k>%r"), functional{}(), injective{}(), left{}(), maincell{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(150,19,150,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'-LT-'output'-GT-'{}(SortList{}) : SortOutputCell{} [cell{}(), cellName{}("output"), constructor{}(), format{}("%c<output>%r%i%n%1%d%n%c</output>%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(153,19,153,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), stream{}("stdout"), terminals{}("101")]
  symbol Lbl'-LT-'store'-GT-'{}(SortMap{}) : SortStoreCell{} [cell{}(), cellName{}("store"), color{}("white"), colors{}("white,white"), constructor{}(), format{}("%c<store>%r%i%n%1%d%n%c</store>%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(154,19,154,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [constructor{}(), format{}("%c@%r %1"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(63,18,63,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Cons'Unds'Val{}(),Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(),Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("10")]
  hooked-symbol LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortString{} [format{}("%cBase2String%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), hook{}("STRING.base2string"), klabel{}("Base2String"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1812,21,1812,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  symbol LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(SortBool{}) : SortString{} [format{}("%cBool2String%r %c(%r %1 %c)%r"), function{}(), functional{}(), klabel{}("Bool2String"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1762,21,1762,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float{}(SortFloat{}) : SortString{} [format{}("%cFloat2String%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("STRING.float2string"), klabel{}("Float2String"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1789,21,1789,101)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol LblFloat2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float'Unds'String{}(SortFloat{}, SortString{}) : SortString{} [format{}("%cFloat2String%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), hook{}("STRING.floatFormat"), klabel{}("FloatFormat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1790,21,1790,122)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id{}(SortId{}) : SortString{} [format{}("%cId2String%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("STRING.token2string"), klabel{}("Id2String"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2242,21,2242,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(SortInt{}) : SortString{} [format{}("%cInt2String%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("STRING.int2string"), klabel{}("Int2String"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1811,21,1811,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol LblList'Coln'get{}(SortList{}, SortInt{}) : SortKItem{} [format{}("%1 %c[%r %2 %c]%r"), function{}(), hook{}("LIST.get"), klabel{}("List:get"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(956,20,956,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("0101")]
  hooked-symbol LblList'Coln'range{}(SortList{}, SortInt{}, SortInt{}) : SortList{} [format{}("%crange%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}(), hook{}("LIST.range"), klabel{}("List:range"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1003,19,1003,120)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("11010101")]
  hooked-symbol LblListItem{}(SortKItem{}) : SortList{} [format{}("%cListItem%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("LIST.element"), klabel{}("ListItem"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(945,19,945,132)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smtlib{}("smt_seq_elem"), symbol'Kywd'{}(), terminals{}("1101"), total{}()]
  hooked-symbol LblMap'Coln'lookup{}(SortMap{}, SortKItem{}) : SortKItem{} [format{}("%1 %c[%r %2 %c]%r"), function{}(), hook{}("MAP.lookup"), klabel{}("Map:lookup"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(271,20,271,113)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("0101")]
  hooked-symbol LblMap'Coln'update{}(SortMap{}, SortKItem{}, SortKItem{}) : SortMap{} [format{}("%1 %c[%r %2 %c<-%r %3 %c]%r"), function{}(), functional{}(), hook{}("MAP.update"), klabel{}("Map:update"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(290,18,290,140)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), prefer{}(), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("010101"), total{}()]
  hooked-symbol LblSet'Coln'difference{}(SortSet{}, SortSet{}) : SortSet{} [format{}("%1 %c-Set%r %2"), function{}(), functional{}(), hook{}("SET.difference"), klabel{}("Set:difference"), latex{}("{#1}-_{\\it Set}{#2}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(769,18,769,142)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol LblSet'Coln'in{}(SortKItem{}, SortSet{}) : SortBool{} [format{}("%1 %cin%r %2"), function{}(), functional{}(), hook{}("SET.in"), klabel{}("Set:in"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(777,19,777,102)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol LblSetItem{}(SortKItem{}) : SortSet{} [format{}("%cSetItem%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("SET.element"), injective{}(), klabel{}("SetItem"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(737,18,737,119)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1101"), total{}()]
  hooked-symbol LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int{}(SortString{}, SortInt{}) : SortInt{} [format{}("%cString2Base%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), hook{}("STRING.string2base"), klabel{}("String2Base"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1813,21,1813,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  symbol LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String{}(SortString{}) : SortBool{} [format{}("%cString2Bool%r %c(%r %1 %c)%r"), function{}(), klabel{}("String2Bool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1768,19,1768,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblString2Float'LParUndsRParUnds'STRING-COMMON'Unds'Float'Unds'String{}(SortString{}) : SortFloat{} [format{}("%cString2Float%r %c(%r %1 %c)%r"), function{}(), hook{}("STRING.string2float"), klabel{}("String2Float"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1791,21,1791,94)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String{}(SortString{}) : SortId{} [format{}("%cString2Id%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("STRING.string2token"), klabel{}("String2Id"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2243,17,2243,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [format{}("%cString2Int%r %c(%r %1 %c)%r"), function{}(), hook{}("STRING.string2int"), klabel{}("String2Int"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1810,21,1810,92)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol LblType-TypeName{}(SortType{}, SortTypeName{}) : SortType{} [format{}("%1 %2"), functional{}(), injective{}(), klabel{}("Type-TypeName"), left{}(), macro{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(83,19,83,73)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("00")]
  symbol Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(SortExps{}) : SortExp{} [anywhere{}(), format{}("%c[%r %1 %c]%r"), functional{}(), injective{}(), klabel{}("list"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(39,18,39,81)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), strict{}(""), terminals{}("101")]
  symbol Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Vals{}(SortVals{}) : SortVal{} [constructor{}(), format{}("%c[%r %1 %c]%r"), functional{}(), injective{}(), klabel{}("list"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(42,18,42,73)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'LSqBUndsPipeUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps'Unds'Exp{}(SortExps{}, SortExp{}) : SortExp{} [anywhere{}(), format{}("%c[%r %1 %c|%r %2 %c]%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(41,18,41,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("10101")]
  symbol Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c!=%r %2"), functional{}(), group{}("arith"), injective{}(), left{}(Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,18,34,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}()), right{}(Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), strict{}(""), terminals{}("010")]
  hooked-symbol Lbl'UndsPerc'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %c%%Int%r %2"), function{}(), hook{}("INT.tmod"), klabel{}("_%Int_"), latex{}("{#1}\\mathrel{\\%_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'UndsStar'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1237,18,1237,171)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smt-hook{}("mod"), symbol'Kywd'{}(), terminals{}("010")]
  symbol Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c%%%r %2"), functional{}(), group{}("arith"), injective{}(), left{}(Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,18,19,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(),Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("010")]
  symbol Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c&&%r %2"), functional{}(), group{}("arith"), injective{}(), left{}(Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,18,36,83)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(),Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}()), right{}(), strict{}("1"), terminals{}("010")]
  hooked-symbol Lbl'UndsAnd-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [comm{}(), format{}("%1 %c&Int%r %2"), function{}(), functional{}(), hook{}("INT.and"), klabel{}("_&Int_"), latex{}("{#1}\\mathrel{\\&_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'UndsAnd-'Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1248,18,1248,184)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("andInt"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  symbol Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(SortConstructorName{}, SortExps{}) : SortExp{} [anywhere{}(), format{}("%1 %c(%r %2 %c)%r"), functional{}(), injective{}(), klabel{}("constructor"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(48,18,48,90)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), prefer{}(), priorities{}(), right{}(), strict{}("2"), terminals{}("0101")]
  symbol Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'TypeCase'Unds'ConstructorName'Unds'Types{}(SortConstructorName{}, SortTypes{}) : SortTypeCase{} [constructor{}(), format{}("%1 %c(%r %2 %c)%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(89,23,89,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("0101")]
  symbol Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'ConstructorName'Unds'Vals{}(SortConstructorName{}, SortVals{}) : SortVal{} [constructor{}(), format{}("%1 %c(%r %2 %c)%r"), functional{}(), injective{}(), klabel{}("constructor"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,18,49,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("0101")]
  hooked-symbol Lbl'UndsStar'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [comm{}(), format{}("%1 %c*Int%r %2"), function{}(), functional{}(), hook{}("INT.mul"), klabel{}("_*Int_"), latex{}("{#1}\\mathrel{\\ast_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'Unds'modInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsStar'Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1233,18,1233,183)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smt-hook{}("*"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  symbol Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c*%r %2"), functional{}(), group{}("arith"), injective{}(), left{}(Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(17,18,17,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(),Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("010")]
  hooked-symbol Lbl'UndsPlus'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [comm{}(), format{}("%1 %c+Int%r %2"), function{}(), functional{}(), hook{}("INT.add"), klabel{}("_+Int_"), latex{}("{#1}\\mathrel{+_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1242,18,1242,180)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smt-hook{}("+"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortString{} [format{}("%1 %c+String%r %2"), function{}(), functional{}(), hook{}("STRING.concat"), latex{}("{#1}+_{\\scriptstyle\\it String}{#2}"), left{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1701,21,1701,135)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  symbol Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c+%r %2"), functional{}(), group{}("arith"), injective{}(), left{}(Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,18,21,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(),Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("010")]
  symbol Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms{}(SortBottom{}, SortBottoms{}) : SortBottoms{} [constructor{}(), format{}("%1 %c,%r %2"), functional{}(), injective{}(), klabel{}("exps"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(15,22,15,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("010"), userList{}("*")]
  symbol Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps{}(SortExp{}, SortExps{}) : SortExps{} [anywhere{}(), format{}("%1 %c,%r %2"), functional{}(), injective{}(), klabel{}("exps"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(9,20,9,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), strict{}(""), terminals{}("010"), userList{}("*")]
  symbol Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Names'Unds'Name'Unds'Names{}(SortName{}, SortNames{}) : SortNames{} [constructor{}(), format{}("%1 %c,%r %2"), functional{}(), injective{}(), klabel{}("exps"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(6,20,6,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("010"), userList{}("*")]
  symbol Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeVars'Unds'TypeVar'Unds'TypeVars{}(SortTypeVar{}, SortTypeVars{}) : SortTypeVars{} [constructor{}(), format{}("%1 %c,%r %2"), functional{}(), injective{}(), klabel{}("types"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(76,23,76,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("010"), userList{}("*")]
  symbol Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Types'Unds'Type'Unds'Types{}(SortType{}, SortTypes{}) : SortTypes{} [anywhere{}(), format{}("%1 %c,%r %2"), functional{}(), injective{}(), klabel{}("types"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(85,20,85,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("010"), userList{}("*")]
  symbol Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals{}(SortVal{}, SortVals{}) : SortVals{} [constructor{}(), format{}("%1 %c,%r %2"), functional{}(), injective{}(), klabel{}("exps"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(13,19,13,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("010"), userList{}("*")]
  symbol Lbl'Unds'--'-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'Type'Unds'Type{}(SortType{}, SortType{}) : SortType{} [constructor{}(), format{}("%1 %c-->%r %2"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(79,19,79,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(Lbl'Unds'--'-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'Type'Unds'Type{}()), terminals{}("010")]
  symbol Lbl'Unds'-'-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Case'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortCase{} [anywhere{}(), format{}("%1 %c->%r %2"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(53,20,53,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("010")]
  hooked-symbol Lbl'Unds'-Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %c-Int%r %2"), function{}(), functional{}(), hook{}("INT.sub"), klabel{}("_-Int_"), latex{}("{#1}\\mathrel{-_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1243,18,1243,174)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smt-hook{}("-"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [format{}("%1 %c-Map%r %2"), function{}(), functional{}(), hook{}("MAP.difference"), latex{}("{#1}-_{\\it Map}{#2}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(311,18,311,116)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  symbol Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c-%r %2"), functional{}(), group{}("arith"), injective{}(), left{}(Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,18,24,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), prefer{}(), priorities{}(Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(),Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("010")]
  hooked-symbol Lbl'UndsSlsh'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %c/Int%r %2"), function{}(), hook{}("INT.tdiv"), klabel{}("_/Int_"), latex{}("{#1}\\mathrel{\\div_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1236,18,1236,173)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smt-hook{}("div"), symbol'Kywd'{}(), terminals{}("010")]
  symbol Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c/%r %2"), functional{}(), group{}("arith"), injective{}(), left{}(Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,18,18,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(),Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("010")]
  symbol Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c:=%r %2"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(64,18,64,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(),Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}()), right{}(), strict{}(""), terminals{}("010")]
  symbol Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c;%r %2"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(65,18,65,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(),Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}()), right{}(Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), strict{}("1"), terminals{}("010")]
  hooked-symbol Lbl'Unds-LT--LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %c<<Int%r %2"), function{}(), hook{}("INT.shl"), klabel{}("_<<Int_"), latex{}("{#1}\\mathrel{\\ll_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1246,18,1246,173)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("shlInt"), symbol'Kywd'{}(), terminals{}("010")]
  hooked-symbol Lbl'Unds-LT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [format{}("%1 %c<=Int%r %2"), function{}(), functional{}(), hook{}("INT.le"), klabel{}("_<=Int_"), latex{}("{#1}\\mathrel{\\leq_{\\scriptstyle\\it Int}}{#2}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1304,19,1304,166)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("<="), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortBool{} [format{}("%1 %c<=Map%r %2"), function{}(), functional{}(), hook{}("MAP.inclusion"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(383,19,383,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortBool{} [format{}("%1 %c<=Set%r %2"), function{}(), functional{}(), hook{}("SET.inclusion"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(786,19,786,81)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [format{}("%1 %c<=String%r %2"), function{}(), functional{}(), hook{}("STRING.le"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1846,19,1846,78)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  symbol Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c<=%r %2"), functional{}(), group{}("arith"), injective{}(), left{}(Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(30,18,30,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}()), right{}(Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), strict{}(""), terminals{}("010")]
  hooked-symbol Lbl'Unds-LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [format{}("%1 %c<Int%r %2"), function{}(), functional{}(), hook{}("INT.lt"), klabel{}("_<Int_"), latex{}("{#1}\\mathrel{<_{\\scriptstyle\\it Int}}{#2}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1305,19,1305,161)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("<"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [format{}("%1 %c<String%r %2"), function{}(), functional{}(), hook{}("STRING.lt"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1845,19,1845,78)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  symbol Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c<%r %2"), functional{}(), group{}("arith"), injective{}(), left{}(Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,18,29,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}()), right{}(Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), strict{}(""), terminals{}("010")]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [comm{}(), format{}("%1 %c=/=Bool%r %2"), function{}(), functional{}(), hook{}("BOOL.ne"), klabel{}("_=/=Bool_"), left{}(Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1109,19,1109,134)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("distinct"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [comm{}(), format{}("%1 %c=/=Int%r %2"), function{}(), functional{}(), hook{}("INT.ne"), klabel{}("_=/=Int_"), latex{}("{#1}\\mathrel{{=}{/}{=}_{\\scriptstyle\\it Int}}{#2}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1309,19,1309,184)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("distinct"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [comm{}(), format{}("%1 %c=/=K%r %2"), function{}(), functional{}(), group{}("notEqualEqualK"), hook{}("KEQUAL.ne"), klabel{}("_=/=K_"), latex{}("{#1}\\mathrel{\\neq_K}{#2}"), left{}(Lbl'UndsEqlsEqls'K'Unds'{}(),Lbl'UndsEqlsSlshEqls'K'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2273,19,2273,179)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds'orElseBool'Unds'{}(),Lbl'Unds'orBool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'Unds'andThenBool'Unds'{}(),Lbl'Unds'impliesBool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'Unds'andBool'Unds'{}(),LblnotBool'Unds'{}(),Lbl'Unds'xorBool'Unds'{}()), right{}(), smt-hook{}("distinct"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [comm{}(), format{}("%1 %c=/=String%r %2"), function{}(), functional{}(), hook{}("STRING.ne"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1842,19,1842,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [comm{}(), format{}("%1 %c==Bool%r %2"), function{}(), functional{}(), hook{}("BOOL.eq"), klabel{}("_==Bool_"), left{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1108,19,1108,126)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("="), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [comm{}(), format{}("%1 %c==Int%r %2"), function{}(), functional{}(), hook{}("INT.eq"), klabel{}("_==Int_"), latex{}("{#1}\\mathrel{{=}{=}_{\\scriptstyle\\it Int}}{#2}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1308,19,1308,173)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("="), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsEqlsEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [comm{}(), format{}("%1 %c==K%r %2"), function{}(), functional{}(), group{}("equalEqualK"), hook{}("KEQUAL.eq"), klabel{}("_==K_"), latex{}("{#1}\\mathrel{=_K}{#2}"), left{}(Lbl'UndsEqlsSlshEqls'K'Unds'{}(),Lbl'UndsEqlsEqls'K'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2272,19,2272,165)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds'orElseBool'Unds'{}(),Lbl'Unds'orBool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'Unds'andThenBool'Unds'{}(),Lbl'Unds'impliesBool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'Unds'andBool'Unds'{}(),LblnotBool'Unds'{}(),Lbl'Unds'xorBool'Unds'{}()), right{}(), smt-hook{}("="), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [comm{}(), format{}("%1 %c==String%r %2"), function{}(), functional{}(), hook{}("STRING.eq"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1841,19,1841,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  symbol Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c==%r %2"), functional{}(), group{}("arith"), injective{}(), left{}(Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(33,18,33,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}()), right{}(Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), strict{}(""), terminals{}("010")]
  symbol Lbl'UndsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Binding'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortBinding{} [anywhere{}(), format{}("%1 %c=%r %2"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(59,23,59,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("010")]
  hooked-symbol Lbl'Unds-GT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [format{}("%1 %c>=Int%r %2"), function{}(), functional{}(), hook{}("INT.ge"), klabel{}("_>=Int_"), latex{}("{#1}\\mathrel{\\geq_{\\scriptstyle\\it Int}}{#2}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1306,19,1306,166)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}(">="), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [format{}("%1 %c>=String%r %2"), function{}(), functional{}(), hook{}("STRING.ge"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1848,19,1848,78)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  symbol Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c>=%r %2"), functional{}(), group{}("arith"), injective{}(), left{}(Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,18,32,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}()), right{}(Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), strict{}(""), terminals{}("010")]
  hooked-symbol Lbl'Unds-GT--GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %c>>Int%r %2"), function{}(), hook{}("INT.shr"), klabel{}("_>>Int_"), latex{}("{#1}\\mathrel{\\gg_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1245,18,1245,173)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("shrInt"), symbol'Kywd'{}(), terminals{}("010")]
  hooked-symbol Lbl'Unds-GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [format{}("%1 %c>Int%r %2"), function{}(), functional{}(), hook{}("INT.gt"), klabel{}("_>Int_"), latex{}("{#1}\\mathrel{>_{\\scriptstyle\\it Int}}{#2}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1307,19,1307,161)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}(">"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [format{}("%1 %c>String%r %2"), function{}(), functional{}(), hook{}("STRING.gt"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1847,19,1847,78)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  symbol Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c>%r %2"), functional{}(), group{}("arith"), injective{}(), left{}(Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(31,18,31,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}()), right{}(Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), strict{}(""), terminals{}("010")]
  hooked-symbol Lbl'Unds'List'Unds'{}(SortList{}, SortList{}) : SortList{} [assoc{}(), element{}(LblListItem{}()), format{}("%1%n%2"), function{}(), functional{}(), hook{}("LIST.concat"), klabel{}("_List_"), left{}(Lbl'Unds'List'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(929,19,929,188)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smtlib{}("smt_seq_concat"), symbol'Kywd'{}(), terminals{}("00"), total{}(), unit{}(Lbl'Stop'List{}())]
  hooked-symbol Lbl'Unds'Map'Unds'{}(SortMap{}, SortMap{}) : SortMap{} [assoc{}(), comm{}(), element{}(Lbl'UndsPipe'-'-GT-Unds'{}()), format{}("%1%n%2"), function{}(), hook{}("MAP.concat"), index{}("0"), klabel{}("_Map_"), left{}(Lbl'Unds'Map'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(240,18,240,173)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("00"), unit{}(Lbl'Stop'Map{}())]
  hooked-symbol Lbl'Unds'Set'Unds'{}(SortSet{}, SortSet{}) : SortSet{} [assoc{}(), comm{}(), element{}(LblSetItem{}()), format{}("%1%n%2"), function{}(), hook{}("SET.concat"), idem{}(), klabel{}("_Set_"), left{}(Lbl'Unds'Set'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(721,18,721,165)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("00"), unit{}(Lbl'Stop'Set{}())]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortKItem{}) : SortList{} [format{}("%1 %c[%r %2 %c<-%r %3 %c]%r"), function{}(), hook{}("LIST.update"), klabel{}("List:set"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(965,19,965,108)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010101")]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(SortMap{}, SortKItem{}) : SortMap{} [format{}("%1 %c[%r %2 %c<-%r %cundef%r %c]%r"), function{}(), functional{}(), hook{}("MAP.remove"), klabel{}("_[_<-undef]"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(299,18,299,117)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("010111"), total{}()]
  hooked-symbol Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(SortMap{}, SortKItem{}, SortKItem{}) : SortKItem{} [format{}("%1 %c[%r %2 %c]%r %corDefault%r %3"), function{}(), functional{}(), hook{}("MAP.lookupOrDefault"), klabel{}("Map:lookupOrDefault"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(281,20,281,134)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010110"), total{}()]
  hooked-symbol Lbl'UndsXor-Perc'Int'UndsUnds'{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %c^%%Int%r %2 %3"), function{}(), hook{}("INT.powmod"), klabel{}("_^%Int__"), left{}(Lbl'UndsXor-Perc'Int'UndsUnds'{}(),Lbl'UndsXor-'Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1231,18,1231,139)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smt-hook{}("(mod (^ #1 #2) #3)"), symbol'Kywd'{}(), terminals{}("0100")]
  hooked-symbol Lbl'UndsXor-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %c^Int%r %2"), function{}(), hook{}("INT.pow"), klabel{}("_^Int_"), latex{}("{#1}\\mathrel{{\\char`\\^}_{\\!\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'UndsXor-'Int'Unds'{}(),Lbl'UndsXor-Perc'Int'UndsUnds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1230,18,1230,178)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smt-hook{}("^"), symbol'Kywd'{}(), terminals{}("010")]
  symbol Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c^%r %2"), functional{}(), group{}("arith"), injective{}(), left{}(Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(22,18,22,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(),Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("010")]
  symbol Lbl'UndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'TypeName{}(SortTypeName{}) : SortType{} [avoid{}(), constructor{}(), format{}("%1"), functional{}(), injective{}(), klabel{}("TypeName"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(82,19,82,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("0")]
  symbol Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [anywhere{}(), format{}("%1 %2"), functional{}(), injective{}(), klabel{}("apply"), left{}(Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(51,18,51,84)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(),Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("00")]
  symbol Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Cons'Unds'Val{}(SortCons{}, SortVal{}) : SortVal{} [constructor{}(), format{}("%1 %2"), functional{}(), injective{}(), klabel{}("apply"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(45,18,45,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(),Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("00")]
  hooked-symbol Lbl'Unds'andBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [format{}("%1 %candBool%r %2"), function{}(), functional{}(), group{}("boolOperation"), hook{}("BOOL.and"), klabel{}("_andBool_"), latex{}("{#1}\\wedge_{\\scriptstyle\\it Bool}{#2}"), left{}(Lbl'Unds'andBool'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1101,19,1101,192)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), right{}(), smt-hook{}("and"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds'andThenBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [format{}("%1 %candThenBool%r %2"), function{}(), functional{}(), group{}("boolOperation"), hook{}("BOOL.andThen"), klabel{}("_andThenBool_"), left{}(Lbl'Unds'andThenBool'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1102,19,1102,154)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), right{}(), smt-hook{}("and"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  symbol Lbl'Unds'and'UndsUnds'FUN-UNTYPED-COMMON'Unds'Bindings'Unds'Binding'Unds'Bindings{}(SortBinding{}, SortBindings{}) : SortBindings{} [constructor{}(), format{}("%1 %cand%r %2"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(60,23,60,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("010"), userList{}("*")]
  hooked-symbol Lbl'Unds'divInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %cdivInt%r %2"), function{}(), hook{}("INT.ediv"), klabel{}("_divInt_"), left{}(Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1239,18,1239,122)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smt-hook{}("div"), symbol'Kywd'{}(), terminals{}("010")]
  symbol Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortBool{} [format{}("%1 %cdividesInt%r %2"), function{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1318,19,1318,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010")]
  hooked-symbol Lbl'Unds'impliesBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [format{}("%1 %cimpliesBool%r %2"), function{}(), functional{}(), group{}("boolOperation"), hook{}("BOOL.implies"), klabel{}("_impliesBool_"), left{}(Lbl'Unds'impliesBool'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1106,19,1106,153)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), right{}(), smt-hook{}("=>"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(SortKItem{}, SortList{}) : SortBool{} [format{}("%1 %cin%r %2"), function{}(), functional{}(), hook{}("LIST.in"), klabel{}("_inList_"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1012,19,1012,97)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(SortKItem{}, SortMap{}) : SortBool{} [format{}("%1 %cin_keys%r %c(%r %2 %c)%r"), function{}(), functional{}(), hook{}("MAP.in_keys"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(357,19,357,89)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("01101"), total{}()]
  hooked-symbol Lbl'Unds'modInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %cmodInt%r %2"), function{}(), hook{}("INT.emod"), klabel{}("_modInt_"), left{}(Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1240,18,1240,122)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smt-hook{}("mod"), symbol'Kywd'{}(), terminals{}("010")]
  hooked-symbol Lbl'Unds'orBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [format{}("%1 %corBool%r %2"), function{}(), functional{}(), group{}("boolOperation"), hook{}("BOOL.or"), klabel{}("_orBool_"), latex{}("{#1}\\vee_{\\scriptstyle\\it Bool}{#2}"), left{}(Lbl'Unds'orBool'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1104,19,1104,187)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), right{}(), smt-hook{}("or"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds'orElseBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [format{}("%1 %corElseBool%r %2"), function{}(), functional{}(), group{}("boolOperation"), hook{}("BOOL.orElse"), klabel{}("_orElseBool_"), left{}(Lbl'Unds'orElseBool'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1105,19,1105,151)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), right{}(), smt-hook{}("or"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds'xorBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [format{}("%1 %cxorBool%r %2"), function{}(), functional{}(), group{}("boolOperation"), hook{}("BOOL.xor"), klabel{}("_xorBool_"), left{}(Lbl'Unds'xorBool'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1103,19,1103,146)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), right{}(), smt-hook{}("xor"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds'xorInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [comm{}(), format{}("%1 %cxorInt%r %2"), function{}(), functional{}(), hook{}("INT.xor"), klabel{}("_xorInt_"), latex{}("{#1}\\mathrel{\\oplus_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'Unds'xorInt'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1250,18,1250,190)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("xorInt"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsPipe'-'-GT-Unds'{}(SortKItem{}, SortKItem{}) : SortMap{} [format{}("%1 %c|->%r %2"), function{}(), functional{}(), hook{}("MAP.element"), injective{}(), klabel{}("_|->_"), latex{}("{#1}\\mapsto{#2}"), left{}(Lbl'UndsPipe'-'-GT-Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(257,18,257,151)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Stop'Map{}(),Lbl'Unds'Map'Unds'{}()), right{}(Lbl'UndsPipe'-'-GT-Unds'{}()), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsPipe'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [comm{}(), format{}("%1 %c|Int%r %2"), function{}(), functional{}(), hook{}("INT.or"), klabel{}("_|Int_"), latex{}("{#1}\\mathrel{|_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'UndsPipe'Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1252,18,1252,181)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smtlib{}("orInt"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [comm{}(), format{}("%1 %c|Set%r %2"), function{}(), functional{}(), hook{}("SET.union"), left{}(Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(748,18,748,92)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  symbol Lbl'UndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Cases'Unds'Case'Unds'Cases{}(SortCase{}, SortCases{}) : SortCases{} [constructor{}(), format{}("%1 %c|%r %2"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(54,20,54,35)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("010"), userList{}("*")]
  symbol Lbl'UndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeCases'Unds'TypeCase'Unds'TypeCases{}(SortTypeCase{}, SortTypeCases{}) : SortTypeCases{} [constructor{}(), format{}("%1 %c|%r %2"), functional{}(), injective{}(), klabel{}("_|TypeCase_"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(90,24,90,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("010"), userList{}("*")]
  symbol Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c||%r %2"), functional{}(), group{}("arith"), injective{}(), left{}(Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,18,37,83)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(),Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}()), right{}(), strict{}("1"), terminals{}("010")]
  hooked-symbol LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [format{}("%cabsInt%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("INT.abs"), klabel{}("absInt"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1269,18,1269,119)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("(ite (< #1 0) (- 0 #1) #1)"), terminals{}("1101"), total{}()]
  symbol LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(SortNames{}, SortExps{}) : SortKItem{} [constructor{}(), format{}("%cassignTo%r %c(%r %1 %c,%r %2 %c)%r"), functional{}(), injective{}(), klabel{}("assignTo"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(249,20,249,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), strict{}("2"), terminals{}("110101")]
  symbol Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(SortNames{}) : SortKItem{} [constructor{}(), format{}("%cbind%r %c(%r %1 %c)%r"), functional{}(), injective{}(), klabel{}("bind"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(235,20,235,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(SortMap{}) : SortKItem{} [constructor{}(), format{}("%cbindMap%r %c(%r %1 %c)%r"), functional{}(), injective{}(), klabel{}("bindMap"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(234,20,234,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(SortNames{}, SortExps{}) : SortKItem{} [constructor{}(), format{}("%cbindTo%r %c(%r %1 %c,%r %2 %c)%r"), functional{}(), injective{}(), klabel{}("bindTo"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(233,20,233,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), strict{}("2"), terminals{}("110101")]
  hooked-symbol LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [format{}("%cbitRangeInt%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}(), hook{}("INT.bitRange"), klabel{}("bitRangeInt"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1294,18,1294,103)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101")]
  symbol Lblbool'Unds'FUN-UNTYPED-COMMON'Unds'Type{}() : SortType{} [constructor{}(), format{}("%cbool%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(78,27,78,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1")]
  symbol Lblcallcc'Unds'FUN-UNTYPED-COMMON'Unds'Val{}() : SortVal{} [constructor{}(), format{}("%ccallcc%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(67,18,67,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1")]
  hooked-symbol LblcategoryChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String{}(SortString{}) : SortString{} [format{}("%ccategoryChar%r %c(%r %1 %c)%r"), function{}(), hook{}("STRING.category"), klabel{}("categoryChar"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1858,21,1858,81)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblcc'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'K{}(SortMap{}, SortK{}) : SortVal{} [constructor{}(), format{}("%ccc%r %c(%r %1 %c,%r %2 %c)%r"), functional{}(), injective{}(), klabel{}("cc"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(225,18,225,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map{}(SortMap{}) : SortKItem{} [format{}("%cchoice%r %c(%r %1 %c)%r"), function{}(), hook{}("MAP.choice"), klabel{}("Map:choice"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(393,20,393,101)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set{}(SortSet{}) : SortKItem{} [format{}("%cchoice%r %c(%r %1 %c)%r"), function{}(), hook{}("SET.choice"), klabel{}("Set:choice"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(804,20,804,95)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(SortInt{}) : SortString{} [format{}("%cchrChar%r %c(%r %1 %c)%r"), function{}(), hook{}("STRING.chr"), klabel{}("chrChar"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1718,21,1718,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblclosure'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'Cases{}(SortMap{}, SortCases{}) : SortVal{} [constructor{}(), format{}("%cclosure%r %c(%r %1 %c,%r %2 %c)%r"), functional{}(), injective{}(), klabel{}("closure"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(191,18,191,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("110101")]
  symbol Lblcons'Unds'FUN-UNTYPED-COMMON'Unds'Cons{}() : SortCons{} [constructor{}(), format{}("%ccons%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(43,19,43,25)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1")]
  hooked-symbol LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortInt{} [format{}("%ccountAllOccurrences%r %c(... %r haystack: %1 %c,%r needle: %2 %c)%r"), function{}(), functional{}(), hook{}("STRING.countAllOccurrences"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1831,18,1831,146)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), total{}()]
  symbol Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(SortType{}, SortTypeCases{}, SortExp{}) : SortExp{} [format{}("%cdatatype%r %1 %c=%r %2 %3"), functional{}(), injective{}(), left{}(), macro{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(69,18,69,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("10100")]
  hooked-symbol LbldirectionalityChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String{}(SortString{}) : SortString{} [format{}("%cdirectionalityChar%r %c(%r %1 %c)%r"), function{}(), hook{}("STRING.directionality"), klabel{}("directionalityChar"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1859,21,1859,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblexps'LParUndsRParUnds'FUN-UNTYPED'Unds'Exps'Unds'Bindings{}(SortBindings{}) : SortExps{} [format{}("%cexps%r %c(%r %1 %c)%r"), function{}(), klabel{}("exps"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(260,19,260,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortInt{}, SortKItem{}) : SortList{} [format{}("%cfillList%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), function{}(), hook{}("LIST.fill"), klabel{}("fillList"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(993,19,993,100)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101010101")]
  hooked-symbol LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [format{}("%cfindChar%r %c(... %r haystack: %1 %c,%r needles: %2 %c,%r index: %3 %c)%r"), function{}(), hook{}("STRING.findChar"), klabel{}("findChar"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1755,18,1755,116)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101")]
  hooked-symbol LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [format{}("%cfindString%r %c(... %r haystack: %1 %c,%r needle: %2 %c,%r index: %3 %c)%r"), function{}(), hook{}("STRING.find"), klabel{}("findString"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1744,18,1744,111)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101")]
  symbol LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int{}(SortInt{}) : SortId{} [format{}("%cfreshId%r %c(%r %1 %c)%r"), freshGenerator{}(), function{}(), functional{}(), klabel{}("freshId"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2244,17,2244,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), private{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [format{}("%cfreshInt%r %c(%r %1 %c)%r"), freshGenerator{}(), function{}(), functional{}(), klabel{}("freshInt"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1432,18,1432,77)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), private{}(), right{}(), terminals{}("1101"), total{}()]
  symbol Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(SortCases{}) : SortExp{} [constructor{}(), format{}("%cfun%r %1"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(50,18,50,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}()), right{}(), terminals{}("10")]
  symbol LblgetGeneratedCounterCell{}(SortGeneratedTopCell{}) : SortGeneratedCounterCell{} [format{}("%cgetGeneratedCounterCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblgetKLabel'LParUndsRParUnds'K-REFLECTION'Unds'KItem'Unds'K{}(SortK{}) : SortKItem{} [format{}("%cgetKLabel%r %c(%r %1 %c)%r"), function{}(), hook{}("KREFLECTION.getKLabel"), klabel{}("getKLabel"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2335,20,2335,73)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol LblgetMatching'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Exp'Unds'Val{}(SortExp{}, SortVal{}) : SortMatchResult{} [format{}("%cgetMatching%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), klabel{}("getMatching"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(270,26,270,79)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("110101")]
  symbol LblgetMatchingAux'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Exps'Unds'Vals{}(SortExps{}, SortVals{}) : SortMatchResult{} [format{}("%cgetMatchingAux%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), klabel{}("getMatchingAux"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(271,26,271,79)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("110101")]
  symbol Lblhead'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}() : SortExp{} [format{}("%chead%r"), functional{}(), injective{}(), left{}(), macro{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,18,40,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1")]
  symbol Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%cif%r %1 %cthen%r %2 %celse%r %3"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(38,18,38,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(),Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}()), right{}(), strict{}("1"), terminals{}("101010")]
  symbol LblinitEnvCell{}() : SortEnvCell{} [format{}("%cinitEnvCell%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblinitGeneratedCounterCell{}() : SortGeneratedCounterCell{} [format{}("%cinitGeneratedCounterCell%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblinitGeneratedTopCell{}(SortMap{}) : SortGeneratedTopCell{} [format{}("%cinitGeneratedTopCell%r %c(%r %1 %c)%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol LblinitInputCell{}(SortMap{}) : SortInputCell{} [format{}("%cinitInputCell%r %c(%r %1 %c)%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol LblinitKCell{}(SortMap{}) : SortKCell{} [format{}("%cinitKCell%r %c(%r %1 %c)%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol LblinitOutputCell{}(SortMap{}) : SortOutputCell{} [format{}("%cinitOutputCell%r %c(%r %1 %c)%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol LblinitStoreCell{}() : SortStoreCell{} [format{}("%cinitStoreCell%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblinitTCell{}(SortMap{}) : SortTCell{} [format{}("%cinitTCell%r %c(%r %1 %c)%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblint'Unds'FUN-UNTYPED-COMMON'Unds'Type{}() : SortType{} [constructor{}(), format{}("%cint%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(78,19,78,24)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1")]
  hooked-symbol LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [comm{}(), format{}("%cintersectSet%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), functional{}(), hook{}("SET.intersection"), klabel{}("intersectSet"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(759,18,759,90)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), total{}()]
  symbol LblisBinding{}(SortK{}) : SortBool{} [format{}("%cisBinding%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Binding"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisBindings{}(SortK{}) : SortBool{} [format{}("%cisBindings%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Bindings"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisBool{}(SortK{}) : SortBool{} [format{}("%cisBool%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Bool"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisBottom{}(SortK{}) : SortBool{} [format{}("%cisBottom%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Bottom"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisBottoms{}(SortK{}) : SortBool{} [format{}("%cisBottoms%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Bottoms"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisCase{}(SortK{}) : SortBool{} [format{}("%cisCase%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Case"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisCases{}(SortK{}) : SortBool{} [format{}("%cisCases%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Cases"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisCons{}(SortK{}) : SortBool{} [format{}("%cisCons%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Cons"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisConstructorName{}(SortK{}) : SortBool{} [format{}("%cisConstructorName%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("ConstructorName"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisEnvCell{}(SortK{}) : SortBool{} [format{}("%cisEnvCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("EnvCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisEnvCellOpt{}(SortK{}) : SortBool{} [format{}("%cisEnvCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("EnvCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisExp{}(SortK{}) : SortBool{} [format{}("%cisExp%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Exp"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisExps{}(SortK{}) : SortBool{} [format{}("%cisExps%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Exps"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisFloat{}(SortK{}) : SortBool{} [format{}("%cisFloat%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Float"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisGeneratedCounterCell{}(SortK{}) : SortBool{} [format{}("%cisGeneratedCounterCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("GeneratedCounterCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisGeneratedCounterCellOpt{}(SortK{}) : SortBool{} [format{}("%cisGeneratedCounterCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("GeneratedCounterCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisGeneratedTopCell{}(SortK{}) : SortBool{} [format{}("%cisGeneratedTopCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("GeneratedTopCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisGeneratedTopCellFragment{}(SortK{}) : SortBool{} [format{}("%cisGeneratedTopCellFragment%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("GeneratedTopCellFragment"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisIOError{}(SortK{}) : SortBool{} [format{}("%cisIOError%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("IOError"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisIOFile{}(SortK{}) : SortBool{} [format{}("%cisIOFile%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("IOFile"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisIOInt{}(SortK{}) : SortBool{} [format{}("%cisIOInt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("IOInt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisIOString{}(SortK{}) : SortBool{} [format{}("%cisIOString%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("IOString"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisId{}(SortK{}) : SortBool{} [format{}("%cisId%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Id"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisInputCell{}(SortK{}) : SortBool{} [format{}("%cisInputCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("InputCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisInputCellOpt{}(SortK{}) : SortBool{} [format{}("%cisInputCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("InputCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisInt{}(SortK{}) : SortBool{} [format{}("%cisInt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Int"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisK{}(SortK{}) : SortBool{} [format{}("%cisK%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("K"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisKCell{}(SortK{}) : SortBool{} [format{}("%cisKCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("KCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisKCellOpt{}(SortK{}) : SortBool{} [format{}("%cisKCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("KCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisKConfigVar{}(SortK{}) : SortBool{} [format{}("%cisKConfigVar%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("KConfigVar"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisKItem{}(SortK{}) : SortBool{} [format{}("%cisKItem%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("KItem"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisKResult{}(SortK{}) : SortBool{} [format{}("%cisKResult%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("KResult"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisList{}(SortK{}) : SortBool{} [format{}("%cisList%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("List"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisMap{}(SortK{}) : SortBool{} [format{}("%cisMap%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Map"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisMatchResult{}(SortK{}) : SortBool{} [format{}("%cisMatchResult%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("MatchResult"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisName{}(SortK{}) : SortBool{} [format{}("%cisName%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Name"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisNames{}(SortK{}) : SortBool{} [format{}("%cisNames%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Names"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisOutputCell{}(SortK{}) : SortBool{} [format{}("%cisOutputCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("OutputCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisOutputCellOpt{}(SortK{}) : SortBool{} [format{}("%cisOutputCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("OutputCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisSet{}(SortK{}) : SortBool{} [format{}("%cisSet%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Set"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisStoreCell{}(SortK{}) : SortBool{} [format{}("%cisStoreCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("StoreCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisStoreCellOpt{}(SortK{}) : SortBool{} [format{}("%cisStoreCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("StoreCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisStream{}(SortK{}) : SortBool{} [format{}("%cisStream%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Stream"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisString{}(SortK{}) : SortBool{} [format{}("%cisString%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("String"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTCell{}(SortK{}) : SortBool{} [format{}("%cisTCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("TCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTCellFragment{}(SortK{}) : SortBool{} [format{}("%cisTCellFragment%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("TCellFragment"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTCellOpt{}(SortK{}) : SortBool{} [format{}("%cisTCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("TCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisType{}(SortK{}) : SortBool{} [format{}("%cisType%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Type"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTypeCase{}(SortK{}) : SortBool{} [format{}("%cisTypeCase%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("TypeCase"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTypeCases{}(SortK{}) : SortBool{} [format{}("%cisTypeCases%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("TypeCases"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTypeName{}(SortK{}) : SortBool{} [format{}("%cisTypeName%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("TypeName"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTypeVar{}(SortK{}) : SortBool{} [format{}("%cisTypeVar%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("TypeVar"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTypeVars{}(SortK{}) : SortBool{} [format{}("%cisTypeVars%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("TypeVars"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTypes{}(SortK{}) : SortBool{} [format{}("%cisTypes%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Types"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisVal{}(SortK{}) : SortBool{} [format{}("%cisVal%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Val"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisVals{}(SortK{}) : SortBool{} [format{}("%cisVals%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Vals"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(SortMap{}) : SortSet{} [format{}("%ckeys%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("MAP.keys"), klabel{}("keys"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(341,18,341,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [format{}("%ckeys_list%r %c(%r %1 %c)%r"), function{}(), hook{}("MAP.keys_list"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(349,19,349,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [format{}("%clengthString%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("STRING.length"), klabel{}("lengthString"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1709,18,1709,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(SortBindings{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%clet%r %1 %cin%r %2"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(55,18,55,41)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(),Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}()), right{}(), terminals{}("1010")]
  symbol Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(SortBindings{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%cletrec%r %1 %cin%r %2"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(56,18,56,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), prefer{}(), priorities{}(Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(),Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}()), right{}(), terminals{}("1010")]
  hooked-symbol Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [format{}("%clog2Int%r %c(%r %1 %c)%r"), function{}(), hook{}("INT.log2"), klabel{}("log2Int"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1280,18,1280,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem{}(SortInt{}, SortKItem{}) : SortList{} [format{}("%cmakeList%r %c(... %r length: %1 %c,%r value: %2 %c)%r"), function{}(), hook{}("LIST.make"), klabel{}("makeList"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(974,19,974,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  symbol LblmatchFailure'Unds'FUN-UNTYPED'Unds'MatchResult{}() : SortMatchResult{} [constructor{}(), format{}("%cmatchFailure%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(274,26,274,40)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1")]
  symbol LblmatchResult'LParUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Map{}(SortMap{}) : SortMatchResult{} [constructor{}(), format{}("%cmatchResult%r %c(%r %1 %c)%r"), functional{}(), injective{}(), klabel{}("matchResult"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(273,26,273,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%cmaxInt%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), functional{}(), hook{}("INT.max"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1261,18,1261,114)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("(ite (< #1 #2) #2 #1)"), terminals{}("110101"), total{}()]
  symbol LblmergeMatching'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'MatchResult'Unds'MatchResult{}(SortMatchResult{}, SortMatchResult{}) : SortMatchResult{} [format{}("%cmergeMatching%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), klabel{}("mergeMatching"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(272,26,272,79)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%cminInt%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), functional{}(), hook{}("INT.min"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1260,18,1260,114)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("(ite (< #1 #2) #1 #2)"), terminals{}("110101"), total{}()]
  symbol Lblnames'LParUndsRParUnds'FUN-UNTYPED'Unds'Names'Unds'Bindings{}(SortBindings{}) : SortNames{} [format{}("%cnames%r %c(%r %1 %c)%r"), function{}(), klabel{}("names"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(256,20,256,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblnewUUID'Unds'STRING-COMMON'Unds'String{}() : SortString{} [format{}("%cnewUUID%r"), function{}(), hook{}("STRING.uuid"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1861,21,1861,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoEnvCell{}() : SortEnvCellOpt{} [cellOptAbsent{}("EnvCell"), constructor{}(), format{}("%cnoEnvCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoGeneratedCounterCell{}() : SortGeneratedCounterCellOpt{} [cellOptAbsent{}("GeneratedCounterCell"), constructor{}(), format{}("%cnoGeneratedCounterCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoInputCell{}() : SortInputCellOpt{} [cellOptAbsent{}("InputCell"), constructor{}(), format{}("%cnoInputCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoKCell{}() : SortKCellOpt{} [cellOptAbsent{}("KCell"), constructor{}(), format{}("%cnoKCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoOutputCell{}() : SortOutputCellOpt{} [cellOptAbsent{}("OutputCell"), constructor{}(), format{}("%cnoOutputCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoStoreCell{}() : SortStoreCellOpt{} [cellOptAbsent{}("StoreCell"), constructor{}(), format{}("%cnoStoreCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoTCell{}() : SortTCellOpt{} [cellOptAbsent{}("TCell"), constructor{}(), format{}("%cnoTCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  hooked-symbol LblnotBool'Unds'{}(SortBool{}) : SortBool{} [format{}("%cnotBool%r %1"), function{}(), functional{}(), group{}("boolOperation"), hook{}("BOOL.not"), klabel{}("notBool_"), latex{}("\\neg_{\\scriptstyle\\it Bool}{#1}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1100,19,1100,179)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds'orElseBool'Unds'{}(),Lbl'Unds'orBool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'Unds'andThenBool'Unds'{}(),Lbl'Unds'impliesBool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'Unds'andBool'Unds'{}(),Lbl'Unds'xorBool'Unds'{}()), right{}(), smt-hook{}("not"), symbol'Kywd'{}(), terminals{}("10"), total{}()]
  symbol Lblnull'QuesUnds'FUN-UNTYPED-COMMON'Unds'Exp{}() : SortExp{} [format{}("%cnull?%r"), functional{}(), injective{}(), left{}(), macro{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,52,40,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1")]
  hooked-symbol LblordChar'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [format{}("%cordChar%r %c(%r %1 %c)%r"), function{}(), hook{}("STRING.ord"), klabel{}("ordChar"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1719,18,1719,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [constructor{}(), format{}("%cprint%r %1"), functional{}(), group{}("print"), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(103,20,103,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(),Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(),Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("10")]
  symbol Lblproject'ColnHash'tempFile'Coln'fd{}(SortIOFile{}) : SortInt{} [format{}("%cfd%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'ColnHash'tempFile'Coln'path{}(SortIOFile{}) : SortString{} [format{}("%cpath%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'ColnHash'unknownIOError'Coln'errno{}(SortIOError{}) : SortInt{} [format{}("%cerrno%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Binding{}(SortK{}) : SortBinding{} [format{}("%cproject:Binding%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Bindings{}(SortK{}) : SortBindings{} [format{}("%cproject:Bindings%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Bool{}(SortK{}) : SortBool{} [format{}("%cproject:Bool%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Bottom{}(SortK{}) : SortBottom{} [format{}("%cproject:Bottom%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Bottoms{}(SortK{}) : SortBottoms{} [format{}("%cproject:Bottoms%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Case{}(SortK{}) : SortCase{} [format{}("%cproject:Case%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Cases{}(SortK{}) : SortCases{} [format{}("%cproject:Cases%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Cons{}(SortK{}) : SortCons{} [format{}("%cproject:Cons%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'ConstructorName{}(SortK{}) : SortConstructorName{} [format{}("%cproject:ConstructorName%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'EnvCell{}(SortK{}) : SortEnvCell{} [format{}("%cproject:EnvCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'EnvCellOpt{}(SortK{}) : SortEnvCellOpt{} [format{}("%cproject:EnvCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Exp{}(SortK{}) : SortExp{} [format{}("%cproject:Exp%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Exps{}(SortK{}) : SortExps{} [format{}("%cproject:Exps%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Float{}(SortK{}) : SortFloat{} [format{}("%cproject:Float%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'GeneratedCounterCell{}(SortK{}) : SortGeneratedCounterCell{} [format{}("%cproject:GeneratedCounterCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'GeneratedCounterCellOpt{}(SortK{}) : SortGeneratedCounterCellOpt{} [format{}("%cproject:GeneratedCounterCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'GeneratedTopCell{}(SortK{}) : SortGeneratedTopCell{} [format{}("%cproject:GeneratedTopCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'GeneratedTopCellFragment{}(SortK{}) : SortGeneratedTopCellFragment{} [format{}("%cproject:GeneratedTopCellFragment%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'IOError{}(SortK{}) : SortIOError{} [format{}("%cproject:IOError%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'IOFile{}(SortK{}) : SortIOFile{} [format{}("%cproject:IOFile%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'IOInt{}(SortK{}) : SortIOInt{} [format{}("%cproject:IOInt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'IOString{}(SortK{}) : SortIOString{} [format{}("%cproject:IOString%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Id{}(SortK{}) : SortId{} [format{}("%cproject:Id%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'InputCell{}(SortK{}) : SortInputCell{} [format{}("%cproject:InputCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'InputCellOpt{}(SortK{}) : SortInputCellOpt{} [format{}("%cproject:InputCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Int{}(SortK{}) : SortInt{} [format{}("%cproject:Int%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'K{}(SortK{}) : SortK{} [format{}("%cproject:K%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'KCell{}(SortK{}) : SortKCell{} [format{}("%cproject:KCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'KCellOpt{}(SortK{}) : SortKCellOpt{} [format{}("%cproject:KCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'KItem{}(SortK{}) : SortKItem{} [format{}("%cproject:KItem%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'KResult{}(SortK{}) : SortKResult{} [format{}("%cproject:KResult%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'List{}(SortK{}) : SortList{} [format{}("%cproject:List%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Map{}(SortK{}) : SortMap{} [format{}("%cproject:Map%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'MatchResult{}(SortK{}) : SortMatchResult{} [format{}("%cproject:MatchResult%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Name{}(SortK{}) : SortName{} [format{}("%cproject:Name%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Names{}(SortK{}) : SortNames{} [format{}("%cproject:Names%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'OutputCell{}(SortK{}) : SortOutputCell{} [format{}("%cproject:OutputCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'OutputCellOpt{}(SortK{}) : SortOutputCellOpt{} [format{}("%cproject:OutputCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Set{}(SortK{}) : SortSet{} [format{}("%cproject:Set%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'StoreCell{}(SortK{}) : SortStoreCell{} [format{}("%cproject:StoreCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'StoreCellOpt{}(SortK{}) : SortStoreCellOpt{} [format{}("%cproject:StoreCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Stream{}(SortK{}) : SortStream{} [format{}("%cproject:Stream%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'String{}(SortK{}) : SortString{} [format{}("%cproject:String%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'TCell{}(SortK{}) : SortTCell{} [format{}("%cproject:TCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'TCellFragment{}(SortK{}) : SortTCellFragment{} [format{}("%cproject:TCellFragment%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'TCellOpt{}(SortK{}) : SortTCellOpt{} [format{}("%cproject:TCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Type{}(SortK{}) : SortType{} [format{}("%cproject:Type%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'TypeCase{}(SortK{}) : SortTypeCase{} [format{}("%cproject:TypeCase%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'TypeCases{}(SortK{}) : SortTypeCases{} [format{}("%cproject:TypeCases%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'TypeName{}(SortK{}) : SortTypeName{} [format{}("%cproject:TypeName%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'TypeVar{}(SortK{}) : SortTypeVar{} [format{}("%cproject:TypeVar%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'TypeVars{}(SortK{}) : SortTypeVars{} [format{}("%cproject:TypeVars%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Types{}(SortK{}) : SortTypes{} [format{}("%cproject:Types%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Val{}(SortK{}) : SortVal{} [format{}("%cproject:Val%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Vals{}(SortK{}) : SortVals{} [format{}("%cproject:Vals%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblrandInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [format{}("%crandInt%r %c(%r %1 %c)%r"), function{}(), hook{}("INT.rand"), impure{}(), klabel{}("randInt"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1328,18,1328,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}() : SortExp{} [constructor{}(), format{}("%cread%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(104,20,104,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1")]
  symbol Lblref'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}() : SortExp{} [format{}("%cref%r"), functional{}(), injective{}(), left{}(), macro{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(61,18,61,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1")]
  hooked-symbol LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(SortMap{}, SortSet{}) : SortMap{} [format{}("%cremoveAll%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), functional{}(), hook{}("MAP.removeAll"), klabel{}("removeAll"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(333,18,333,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), total{}()]
  hooked-symbol Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortString{}, SortInt{}) : SortString{} [format{}("%creplace%r %c(... %r haystack: %1 %c,%r needle: %2 %c,%r replacement: %3 %c,%r times: %4 %c)%r"), function{}(), hook{}("STRING.replace"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1829,21,1829,146)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101010101")]
  hooked-symbol LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [format{}("%creplaceAll%r %c(... %r haystack: %1 %c,%r needle: %2 %c,%r replacement: %3 %c)%r"), function{}(), functional{}(), hook{}("STRING.replaceAll"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1828,21,1828,149)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), total{}()]
  hooked-symbol LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [format{}("%creplaceFirst%r %c(... %r haystack: %1 %c,%r needle: %2 %c,%r replacement: %3 %c)%r"), function{}(), functional{}(), hook{}("STRING.replaceFirst"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1830,21,1830,151)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), total{}()]
  hooked-symbol LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [format{}("%crfindChar%r %c(... %r haystack: %1 %c,%r needles: %2 %c,%r index: %3 %c)%r"), function{}(), hook{}("STRING.rfindChar"), klabel{}("rfindChar"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1756,18,1756,117)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101")]
  hooked-symbol LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [format{}("%crfindString%r %c(... %r haystack: %1 %c,%r needle: %2 %c,%r index: %3 %c)%r"), function{}(), hook{}("STRING.rfind"), klabel{}("rfindString"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1745,18,1745,112)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101")]
  symbol LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(SortMap{}) : SortKItem{} [constructor{}(), format{}("%csetEnv%r %c(%r %1 %c)%r"), functional{}(), injective{}(), klabel{}("setEnv"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(229,20,229,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [format{}("%csignExtendBitRangeInt%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}(), hook{}("INT.signExtendBitRange"), klabel{}("signExtendBitRangeInt"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1295,18,1295,113)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101")]
  hooked-symbol Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(SortList{}) : SortInt{} [format{}("%csize%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("LIST.size"), klabel{}("sizeList"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1020,18,1020,117)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smtlib{}("smt_seq_len"), terminals{}("1101"), total{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(SortMap{}) : SortInt{} [format{}("%csize%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("MAP.size"), klabel{}("sizeMap"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(373,18,373,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(SortSet{}) : SortInt{} [format{}("%csize%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("SET.size"), klabel{}("size"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(794,18,794,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol LblsrandInt'LParUndsRParUnds'INT-COMMON'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [format{}("%csrandInt%r %c(%r %1 %c)%r"), function{}(), hook{}("INT.srand"), impure{}(), klabel{}("srandInt"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1329,16,1329,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblstring'Unds'FUN-UNTYPED-COMMON'Unds'Type{}() : SortType{} [constructor{}(), format{}("%cstring%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(78,36,78,44)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1")]
  hooked-symbol LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(SortString{}, SortInt{}, SortInt{}) : SortString{} [format{}("%csubstrString%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}(), functional{}(), hook{}("STRING.substr"), klabel{}("substrString"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1734,21,1734,117)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), total{}()]
  symbol Lbltail'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}() : SortExp{} [format{}("%ctail%r"), functional{}(), injective{}(), left{}(), macro{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,35,40,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1")]
  symbol Lbltry'Unds'catch'LParUndsRParUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Name'Unds'Exp{}(SortExp{}, SortName{}, SortExp{}) : SortExp{} [format{}("%ctry%r %1 %ccatch%r %c(%r %2 %c)%r %3"), functional{}(), injective{}(), left{}(), macro{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(66,18,66,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), priorities{}(), right{}(), terminals{}("1011010")]
  hooked-symbol LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List{}(SortList{}, SortInt{}, SortList{}) : SortList{} [format{}("%cupdateList%r %c(... %r dest: %1 %c,%r index: %2 %c,%r src: %3 %c)%r"), function{}(), hook{}("LIST.updateAll"), klabel{}("updateList"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(984,19,984,97)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101")]
  hooked-symbol LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [format{}("%cupdateMap%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), functional{}(), hook{}("MAP.updateAll"), klabel{}("updateMap"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(324,18,324,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), total{}()]
  hooked-symbol Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [format{}("%cvalues%r %c(%r %1 %c)%r"), function{}(), hook{}("MAP.values"), klabel{}("values"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(365,19,365,77)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Tild'Int'Unds'{}(SortInt{}) : SortInt{} [format{}("%c~Int%r %1"), function{}(), functional{}(), hook{}("INT.not"), klabel{}("~Int_"), latex{}("\\mathop{\\sim_{\\scriptstyle\\it Int}}{#1}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1228,18,1228,168)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'UndsXor-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'UndsXor-Perc'Int'UndsUnds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smtlib{}("notInt"), symbol'Kywd'{}(), terminals{}("10"), total{}()]

// generated axioms
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStoreCellOpt{}, SortKItem{}} (From:SortStoreCellOpt{}))) [subsort{SortStoreCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOString{}, SortKItem{}} (From:SortIOString{}))) [subsort{SortIOString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortString{}, SortKItem{}} (From:SortString{}))) [subsort{SortString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCell{}, SortKItem{}} (From:SortTCell{}))) [subsort{SortTCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeName{}, SortKItem{}} (From:SortTypeName{}))) [subsort{SortTypeName{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortType{}, SortKItem{}} (From:SortType{}))) [subsort{SortType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCellOpt{}, SortKItem{}} (From:SortKCellOpt{}))) [subsort{SortKCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedCounterCellOpt{}, SortKItem{}} (From:SortGeneratedCounterCellOpt{}))) [subsort{SortGeneratedCounterCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKResult{}, SortKItem{}} (From:SortKResult{}))) [subsort{SortKResult{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R} (Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}} (From:SortGeneratedCounterCell{}))) [subsort{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortEnvCellOpt{}, SortKItem{}} (From:SortEnvCellOpt{}))) [subsort{SortEnvCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeVar{}, SortKItem{}} (From:SortTypeVar{}))) [subsort{SortTypeVar{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCell{}, SortKItem{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCellOpt{}, SortKItem{}} (From:SortTCellOpt{}))) [subsort{SortTCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortName{}, SortKItem{}} (From:SortName{}))) [subsort{SortName{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortOutputCellOpt{}, \equals{SortOutputCellOpt{}, R} (Val:SortOutputCellOpt{}, inj{SortOutputCell{}, SortOutputCellOpt{}} (From:SortOutputCell{}))) [subsort{SortOutputCell{}, SortOutputCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBottoms{}, SortKItem{}} (From:SortBottoms{}))) [subsort{SortBottoms{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, inj{SortKCell{}, SortKCellOpt{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeCases{}, SortKItem{}} (From:SortTypeCases{}))) [subsort{SortTypeCases{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSet{}, SortKItem{}} (From:SortSet{}))) [subsort{SortSet{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStoreCell{}, SortKItem{}} (From:SortStoreCell{}))) [subsort{SortStoreCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOError{}, SortKItem{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypes{}, SortKItem{}} (From:SortTypes{}))) [subsort{SortTypes{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCase{}, SortKItem{}} (From:SortCase{}))) [subsort{SortCase{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (From:SortGeneratedCounterCell{}))) [subsort{SortGeneratedCounterCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBottom{}, SortKItem{}} (From:SortBottom{}))) [subsort{SortBottom{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCons{}, SortKItem{}} (From:SortCons{}))) [subsort{SortCons{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOutputCellOpt{}, SortKItem{}} (From:SortOutputCellOpt{}))) [subsort{SortOutputCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTCellOpt{}, \equals{SortTCellOpt{}, R} (Val:SortTCellOpt{}, inj{SortTCell{}, SortTCellOpt{}} (From:SortTCell{}))) [subsort{SortTCell{}, SortTCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeCase{}, SortKItem{}} (From:SortTypeCase{}))) [subsort{SortTypeCase{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInputCellOpt{}, SortKItem{}} (From:SortInputCellOpt{}))) [subsort{SortInputCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCellFragment{}, SortKItem{}} (From:SortTCellFragment{}))) [subsort{SortTCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortConstructorName{}, SortKItem{}} (From:SortConstructorName{}))) [subsort{SortConstructorName{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExps{}, SortKItem{}} (From:SortExps{}))) [subsort{SortExps{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortVals{}, SortKItem{}} (From:SortVals{}))) [subsort{SortVals{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeVars{}, SortKItem{}} (From:SortTypeVars{}))) [subsort{SortTypeVars{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStream{}, SortKItem{}} (From:SortStream{}))) [subsort{SortStream{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOFile{}, SortKItem{}} (From:SortIOFile{}))) [subsort{SortIOFile{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCell{}, SortKItem{}} (From:SortGeneratedTopCell{}))) [subsort{SortGeneratedTopCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBinding{}, SortKItem{}} (From:SortBinding{}))) [subsort{SortBinding{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortEnvCellOpt{}, \equals{SortEnvCellOpt{}, R} (Val:SortEnvCellOpt{}, inj{SortEnvCell{}, SortEnvCellOpt{}} (From:SortEnvCell{}))) [subsort{SortEnvCell{}, SortEnvCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOInt{}, SortKItem{}} (From:SortIOInt{}))) [subsort{SortIOInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStoreCellOpt{}, \equals{SortStoreCellOpt{}, R} (Val:SortStoreCellOpt{}, inj{SortStoreCell{}, SortStoreCellOpt{}} (From:SortStoreCell{}))) [subsort{SortStoreCell{}, SortStoreCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInputCell{}, SortKItem{}} (From:SortInputCell{}))) [subsort{SortInputCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortList{}, SortKItem{}} (From:SortList{}))) [subsort{SortList{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCases{}, SortKItem{}} (From:SortCases{}))) [subsort{SortCases{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBindings{}, SortKItem{}} (From:SortBindings{}))) [subsort{SortBindings{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortId{}, SortKItem{}} (From:SortId{}))) [subsort{SortId{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFloat{}, SortKItem{}} (From:SortFloat{}))) [subsort{SortFloat{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBool{}, SortKItem{}} (From:SortBool{}))) [subsort{SortBool{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOutputCell{}, SortKItem{}} (From:SortOutputCell{}))) [subsort{SortOutputCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMatchResult{}, SortKItem{}} (From:SortMatchResult{}))) [subsort{SortMatchResult{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortVal{}, SortKItem{}} (From:SortVal{}))) [subsort{SortVal{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInt{}, SortKItem{}} (From:SortInt{}))) [subsort{SortInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (From:SortGeneratedTopCellFragment{}))) [subsort{SortGeneratedTopCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNames{}, SortKItem{}} (From:SortNames{}))) [subsort{SortNames{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExp{}, SortKItem{}} (From:SortExp{}))) [subsort{SortExp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortEnvCell{}, SortKItem{}} (From:SortEnvCell{}))) [subsort{SortEnvCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMap{}, SortKItem{}} (From:SortMap{}))) [subsort{SortMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInputCellOpt{}, \equals{SortInputCellOpt{}, R} (Val:SortInputCellOpt{}, inj{SortInputCell{}, SortInputCellOpt{}} (From:SortInputCell{}))) [subsort{SortInputCell{}, SortInputCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortVal{}, SortExp{}} (From:SortVal{}))) [subsort{SortVal{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExps{}, \equals{SortExps{}, R} (Val:SortExps{}, inj{SortVals{}, SortExps{}} (From:SortVals{}))) [subsort{SortVals{}, SortExps{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, inj{SortInt{}, SortVal{}} (From:SortInt{}))) [subsort{SortInt{}, SortVal{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, inj{SortBool{}, SortVal{}} (From:SortBool{}))) [subsort{SortBool{}, SortVal{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, inj{SortString{}, SortVal{}} (From:SortString{}))) [subsort{SortString{}, SortVal{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVals{}, \equals{SortVals{}, R} (Val:SortVals{}, inj{SortBottoms{}, SortVals{}} (From:SortBottoms{}))) [subsort{SortBottoms{}, SortVals{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKResult{}, \equals{SortKResult{}, R} (Val:SortKResult{}, inj{SortVal{}, SortKResult{}} (From:SortVal{}))) [subsort{SortVal{}, SortKResult{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, inj{SortConstructorName{}, SortVal{}} (From:SortConstructorName{}))) [subsort{SortConstructorName{}, SortVal{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOInt{}, \equals{SortIOInt{}, R} (Val:SortIOInt{}, inj{SortInt{}, SortIOInt{}} (From:SortInt{}))) [subsort{SortInt{}, SortIOInt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOInt{}, \equals{SortIOInt{}, R} (Val:SortIOInt{}, inj{SortIOError{}, SortIOInt{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortIOInt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOString{}, \equals{SortIOString{}, R} (Val:SortIOString{}, inj{SortString{}, SortIOString{}} (From:SortString{}))) [subsort{SortString{}, SortIOString{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOString{}, \equals{SortIOString{}, R} (Val:SortIOString{}, inj{SortIOError{}, SortIOString{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortIOString{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOFile{}, \equals{SortIOFile{}, R} (Val:SortIOFile{}, inj{SortIOError{}, SortIOFile{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortIOFile{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKResult{}, \equals{SortKResult{}, R} (Val:SortKResult{}, inj{SortVals{}, SortKResult{}} (From:SortVals{}))) [subsort{SortVals{}, SortKResult{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExps{}, \equals{SortExps{}, R} (Val:SortExps{}, inj{SortNames{}, SortExps{}} (From:SortNames{}))) [subsort{SortNames{}, SortExps{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNames{}, \equals{SortNames{}, R} (Val:SortNames{}, inj{SortBottoms{}, SortNames{}} (From:SortBottoms{}))) [subsort{SortBottoms{}, SortNames{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKConfigVar{}, SortKItem{}} (From:SortKConfigVar{}))) [subsort{SortKConfigVar{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, inj{SortCons{}, SortVal{}} (From:SortCons{}))) [subsort{SortCons{}, SortVal{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortConstructorName{}, SortExp{}} (From:SortConstructorName{}))) [subsort{SortConstructorName{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortInt{}, SortExp{}} (From:SortInt{}))) [subsort{SortInt{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortBool{}, SortExp{}} (From:SortBool{}))) [subsort{SortBool{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortString{}, SortExp{}} (From:SortString{}))) [subsort{SortString{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortName{}, SortExp{}} (From:SortName{}))) [subsort{SortName{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, inj{SortTypeVar{}, SortType{}} (From:SortTypeVar{}))) [subsort{SortTypeVar{}, SortType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTypes{}, \equals{SortTypes{}, R} (Val:SortTypes{}, inj{SortTypeVars{}, SortTypes{}} (From:SortTypeVars{}))) [subsort{SortTypeVars{}, SortTypes{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTypeCase{}, \equals{SortTypeCase{}, R} (Val:SortTypeCase{}, inj{SortConstructorName{}, SortTypeCase{}} (From:SortConstructorName{}))) [subsort{SortConstructorName{}, SortTypeCase{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(Y0:SortName{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(Y0:SortConstructorName{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Y0:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}, Y2:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'E2BIG{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EACCES{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EADDRINUSE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EADDRNOTAVAIL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EACCES{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EADDRINUSE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EADDRNOTAVAIL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EADDRINUSE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EADDRNOTAVAIL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EADDRNOTAVAIL{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EAFNOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EAGAIN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EALREADY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EBADF{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EBUSY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECHILD{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECONNABORTED{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECONNREFUSED{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECONNRESET{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EDEADLK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EDESTADDRREQ{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EDOM{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EEXIST{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EFAULT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EFBIG{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EHOSTDOWN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EHOSTUNREACH{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EINPROGRESS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EINTR{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EINVAL{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EIO{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EISCONN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EISDIR{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ELOOP{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EMFILE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EMLINK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EMSGSIZE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENAMETOOLONG{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENETDOWN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENETRESET{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENETUNREACH{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENFILE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOBUFS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENODEV{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOENT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOEXEC{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOLCK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOMEM{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOPROTOOPT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOSPC{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOSYS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTCONN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTDIR{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTEMPTY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTSOCK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTTY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENXIO{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EOF{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EOPNOTSUPP{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EOVERFLOW{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPERM{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPFNOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPIPE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPROTONOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPROTOTYPE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ERANGE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EROFS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESHUTDOWN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESOCKTNOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESPIPE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESRCH{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ETIMEDOUT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ETOOMANYREFS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EWOULDBLOCK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EWOULDBLOCK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EWOULDBLOCK{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EWOULDBLOCK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EXDEV{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EXDEV{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EXDEV{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(Y0:SortK{})), Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Y0:SortString{}, Y1:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(X0:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(X0:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(X0:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(X0:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}, Y1:SortK{})), Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}), \and{SortK{}} (X1:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}, X1:SortK{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}, X1:SortK{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}, X1:SortK{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}, X1:SortK{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}, X1:SortK{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R, SortSort} \exists{R} (Val:SortSort, \equals{SortSort, R} (Val:SortSort, Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(K0:SortBool{}, K1:SortSort, K2:SortSort))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{})), Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Y0:SortString{}, Y1:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'log{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'logToFile{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'noParse{}(K0:SortString{}))) [functional{}()] // functional
  axiom{}\implies{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'noParse{}(X0:SortString{}), Lbl'Hash'noParse{}(Y0:SortString{})), Lbl'Hash'noParse{}(\and{SortString{}} (X0:SortString{}, Y0:SortString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'noParse{}(X0:SortString{}), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{})), Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Y0:SortString{}, Y1:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(X0:SortString{}, X1:SortString{}), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Y0:SortString{}, Y1:SortString{})), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(\and{SortString{}} (X0:SortString{}, Y0:SortString{}), \and{SortString{}} (X1:SortString{}, Y1:SortString{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'stderr'Unds'K-IO'Unds'Int{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'systemResult{}(K0:SortInt{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{})), Lbl'Hash'systemResult{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortString{}} (X1:SortString{}, Y1:SortString{}), \and{SortString{}} (X2:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOFile{}, \equals{SortIOFile{}, R} (Val:SortIOFile{}, Lbl'Hash'tempFile{}(K0:SortString{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIOFile{}} (\and{SortIOFile{}} (Lbl'Hash'tempFile{}(X0:SortString{}, X1:SortInt{}), Lbl'Hash'tempFile{}(Y0:SortString{}, Y1:SortInt{})), Lbl'Hash'tempFile{}(\and{SortString{}} (X0:SortString{}, Y0:SortString{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'trace{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'traceK{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'unknownIOError{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'unknownIOError{}(X0:SortInt{}), Lbl'Hash'unknownIOError{}(Y0:SortInt{})), Lbl'Hash'unknownIOError{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(K0:SortName{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(Y0:SortName{})), Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(\and{SortName{}} (X0:SortName{}, Y0:SortName{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(Y0:SortConstructorName{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Y0:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}, Y2:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lbl'LParUndsRParUndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'Types'Unds'TypeName{}(K0:SortTypes{}, K1:SortTypeName{}))) [functional{}()] // functional
  axiom{}\implies{SortType{}} (\and{SortType{}} (Lbl'LParUndsRParUndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'Types'Unds'TypeName{}(X0:SortTypes{}, X1:SortTypeName{}), Lbl'LParUndsRParUndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'Types'Unds'TypeName{}(Y0:SortTypes{}, Y1:SortTypeName{})), Lbl'LParUndsRParUndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'Types'Unds'TypeName{}(\and{SortTypes{}} (X0:SortTypes{}, Y0:SortTypes{}), \and{SortTypeName{}} (X1:SortTypeName{}, Y1:SortTypeName{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'LParUndsRParUndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'Types'Unds'TypeName{}(X0:SortTypes{}, X1:SortTypeName{}), Lbl'Unds'--'-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'Type'Unds'Type{}(Y0:SortType{}, Y1:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'LParUndsRParUndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'Types'Unds'TypeName{}(X0:SortTypes{}, X1:SortTypeName{}), Lbl'UndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'TypeName{}(Y0:SortTypeName{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'LParUndsRParUndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'Types'Unds'TypeName{}(X0:SortTypes{}, X1:SortTypeName{}), Lblbool'Unds'FUN-UNTYPED-COMMON'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'LParUndsRParUndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'Types'Unds'TypeName{}(X0:SortTypes{}, X1:SortTypeName{}), Lblint'Unds'FUN-UNTYPED-COMMON'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'LParUndsRParUndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'Types'Unds'TypeName{}(X0:SortTypes{}, X1:SortTypeName{}), Lblstring'Unds'FUN-UNTYPED-COMMON'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(Y0:SortConstructorName{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Y0:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}, Y2:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Stop'List{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBottoms{}, \equals{SortBottoms{}, R} (Val:SortBottoms{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms'QuotRBraUnds'Bottoms{}())) [functional{}()] // functional
  axiom{}\not{SortBottoms{}} (\and{SortBottoms{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms'QuotRBraUnds'Bottoms{}(), Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms{}(Y0:SortBottom{}, Y1:SortBottoms{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExps{}, \equals{SortExps{}, R} (Val:SortExps{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}())) [functional{}()] // functional
  axiom{}\not{SortExps{}} (\and{SortExps{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortNames{}, \equals{SortNames{}, R} (Val:SortNames{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Names'Unds'Name'Unds'Names'QuotRBraUnds'Names{}())) [functional{}()] // functional
  axiom{}\not{SortNames{}} (\and{SortNames{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Names'Unds'Name'Unds'Names'QuotRBraUnds'Names{}(), Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Names'Unds'Name'Unds'Names{}(Y0:SortName{}, Y1:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTypeVars{}, \equals{SortTypeVars{}, R} (Val:SortTypeVars{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeVars'Unds'TypeVar'Unds'TypeVars'QuotRBraUnds'TypeVars{}())) [functional{}()] // functional
  axiom{}\not{SortTypeVars{}} (\and{SortTypeVars{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeVars'Unds'TypeVar'Unds'TypeVars'QuotRBraUnds'TypeVars{}(), Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeVars'Unds'TypeVar'Unds'TypeVars{}(Y0:SortTypeVar{}, Y1:SortTypeVars{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTypes{}, \equals{SortTypes{}, R} (Val:SortTypes{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())) [functional{}()] // functional
  axiom{}\not{SortTypes{}} (\and{SortTypes{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}(), Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Types'Unds'Type'Unds'Types{}(Y0:SortType{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortVals{}, \equals{SortVals{}, R} (Val:SortVals{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())) [functional{}()] // functional
  axiom{}\not{SortVals{}} (\and{SortVals{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}(), Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals{}(Y0:SortVal{}, Y1:SortVals{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBindings{}, \equals{SortBindings{}, R} (Val:SortBindings{}, Lbl'Stop'List'LBraQuotUnds'and'UndsUnds'FUN-UNTYPED-COMMON'Unds'Bindings'Unds'Binding'Unds'Bindings'QuotRBraUnds'Bindings{}())) [functional{}()] // functional
  axiom{}\not{SortBindings{}} (\and{SortBindings{}} (Lbl'Stop'List'LBraQuotUnds'and'UndsUnds'FUN-UNTYPED-COMMON'Unds'Bindings'Unds'Binding'Unds'Bindings'QuotRBraUnds'Bindings{}(), Lbl'Unds'and'UndsUnds'FUN-UNTYPED-COMMON'Unds'Bindings'Unds'Binding'Unds'Bindings{}(Y0:SortBinding{}, Y1:SortBindings{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCases{}, \equals{SortCases{}, R} (Val:SortCases{}, Lbl'Stop'List'LBraQuotUndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Cases'Unds'Case'Unds'Cases'QuotRBraUnds'Cases{}())) [functional{}()] // functional
  axiom{}\not{SortCases{}} (\and{SortCases{}} (Lbl'Stop'List'LBraQuotUndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Cases'Unds'Case'Unds'Cases'QuotRBraUnds'Cases{}(), Lbl'UndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Cases'Unds'Case'Unds'Cases{}(Y0:SortCase{}, Y1:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTypeCases{}, \equals{SortTypeCases{}, R} (Val:SortTypeCases{}, Lbl'Stop'List'LBraQuotUndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeCases'Unds'TypeCase'Unds'TypeCases'QuotRBraUnds'TypeCases{}())) [functional{}()] // functional
  axiom{}\not{SortTypeCases{}} (\and{SortTypeCases{}} (Lbl'Stop'List'LBraQuotUndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeCases'Unds'TypeCase'Unds'TypeCases'QuotRBraUnds'TypeCases{}(), Lbl'UndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeCases'Unds'TypeCase'Unds'TypeCases{}(Y0:SortTypeCase{}, Y1:SortTypeCases{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Stop'Map{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'Stop'Set{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTCell{}, \equals{SortTCell{}, R} (Val:SortTCell{}, Lbl'-LT-'T'-GT-'{}(K0:SortKCell{}, K1:SortEnvCell{}, K2:SortInputCell{}, K3:SortOutputCell{}, K4:SortStoreCell{}))) [functional{}()] // functional
  axiom{}\implies{SortTCell{}} (\and{SortTCell{}} (Lbl'-LT-'T'-GT-'{}(X0:SortKCell{}, X1:SortEnvCell{}, X2:SortInputCell{}, X3:SortOutputCell{}, X4:SortStoreCell{}), Lbl'-LT-'T'-GT-'{}(Y0:SortKCell{}, Y1:SortEnvCell{}, Y2:SortInputCell{}, Y3:SortOutputCell{}, Y4:SortStoreCell{})), Lbl'-LT-'T'-GT-'{}(\and{SortKCell{}} (X0:SortKCell{}, Y0:SortKCell{}), \and{SortEnvCell{}} (X1:SortEnvCell{}, Y1:SortEnvCell{}), \and{SortInputCell{}} (X2:SortInputCell{}, Y2:SortInputCell{}), \and{SortOutputCell{}} (X3:SortOutputCell{}, Y3:SortOutputCell{}), \and{SortStoreCell{}} (X4:SortStoreCell{}, Y4:SortStoreCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTCellFragment{}, \equals{SortTCellFragment{}, R} (Val:SortTCellFragment{}, Lbl'-LT-'T'-GT-'-fragment{}(K0:SortKCellOpt{}, K1:SortEnvCellOpt{}, K2:SortInputCellOpt{}, K3:SortOutputCellOpt{}, K4:SortStoreCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortTCellFragment{}} (\and{SortTCellFragment{}} (Lbl'-LT-'T'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortEnvCellOpt{}, X2:SortInputCellOpt{}, X3:SortOutputCellOpt{}, X4:SortStoreCellOpt{}), Lbl'-LT-'T'-GT-'-fragment{}(Y0:SortKCellOpt{}, Y1:SortEnvCellOpt{}, Y2:SortInputCellOpt{}, Y3:SortOutputCellOpt{}, Y4:SortStoreCellOpt{})), Lbl'-LT-'T'-GT-'-fragment{}(\and{SortKCellOpt{}} (X0:SortKCellOpt{}, Y0:SortKCellOpt{}), \and{SortEnvCellOpt{}} (X1:SortEnvCellOpt{}, Y1:SortEnvCellOpt{}), \and{SortInputCellOpt{}} (X2:SortInputCellOpt{}, Y2:SortInputCellOpt{}), \and{SortOutputCellOpt{}} (X3:SortOutputCellOpt{}, Y3:SortOutputCellOpt{}), \and{SortStoreCellOpt{}} (X4:SortStoreCellOpt{}, Y4:SortStoreCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortEnvCell{}, \equals{SortEnvCell{}, R} (Val:SortEnvCell{}, Lbl'-LT-'env'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortEnvCell{}} (\and{SortEnvCell{}} (Lbl'-LT-'env'-GT-'{}(X0:SortMap{}), Lbl'-LT-'env'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'env'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedCounterCell{}, \equals{SortGeneratedCounterCell{}, R} (Val:SortGeneratedCounterCell{}, Lbl'-LT-'generatedCounter'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedCounterCell{}} (\and{SortGeneratedCounterCell{}} (Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{}), Lbl'-LT-'generatedCounter'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'generatedCounter'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCell{}, \equals{SortGeneratedTopCell{}, R} (Val:SortGeneratedTopCell{}, Lbl'-LT-'generatedTop'-GT-'{}(K0:SortTCell{}, K1:SortGeneratedCounterCell{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCell{}} (\and{SortGeneratedTopCell{}} (Lbl'-LT-'generatedTop'-GT-'{}(X0:SortTCell{}, X1:SortGeneratedCounterCell{}), Lbl'-LT-'generatedTop'-GT-'{}(Y0:SortTCell{}, Y1:SortGeneratedCounterCell{})), Lbl'-LT-'generatedTop'-GT-'{}(\and{SortTCell{}} (X0:SortTCell{}, Y0:SortTCell{}), \and{SortGeneratedCounterCell{}} (X1:SortGeneratedCounterCell{}, Y1:SortGeneratedCounterCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCellFragment{}, \equals{SortGeneratedTopCellFragment{}, R} (Val:SortGeneratedTopCellFragment{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(K0:SortTCellOpt{}, K1:SortGeneratedCounterCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCellFragment{}} (\and{SortGeneratedTopCellFragment{}} (Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortTCellOpt{}, X1:SortGeneratedCounterCellOpt{}), Lbl'-LT-'generatedTop'-GT-'-fragment{}(Y0:SortTCellOpt{}, Y1:SortGeneratedCounterCellOpt{})), Lbl'-LT-'generatedTop'-GT-'-fragment{}(\and{SortTCellOpt{}} (X0:SortTCellOpt{}, Y0:SortTCellOpt{}), \and{SortGeneratedCounterCellOpt{}} (X1:SortGeneratedCounterCellOpt{}, Y1:SortGeneratedCounterCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInputCell{}, \equals{SortInputCell{}, R} (Val:SortInputCell{}, Lbl'-LT-'input'-GT-'{}(K0:SortList{}))) [functional{}()] // functional
  axiom{}\implies{SortInputCell{}} (\and{SortInputCell{}} (Lbl'-LT-'input'-GT-'{}(X0:SortList{}), Lbl'-LT-'input'-GT-'{}(Y0:SortList{})), Lbl'-LT-'input'-GT-'{}(\and{SortList{}} (X0:SortList{}, Y0:SortList{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKCell{}, \equals{SortKCell{}, R} (Val:SortKCell{}, Lbl'-LT-'k'-GT-'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKCell{}} (\and{SortKCell{}} (Lbl'-LT-'k'-GT-'{}(X0:SortK{}), Lbl'-LT-'k'-GT-'{}(Y0:SortK{})), Lbl'-LT-'k'-GT-'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortOutputCell{}, \equals{SortOutputCell{}, R} (Val:SortOutputCell{}, Lbl'-LT-'output'-GT-'{}(K0:SortList{}))) [functional{}()] // functional
  axiom{}\implies{SortOutputCell{}} (\and{SortOutputCell{}} (Lbl'-LT-'output'-GT-'{}(X0:SortList{}), Lbl'-LT-'output'-GT-'{}(Y0:SortList{})), Lbl'-LT-'output'-GT-'{}(\and{SortList{}} (X0:SortList{}, Y0:SortList{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortStoreCell{}, \equals{SortStoreCell{}, R} (Val:SortStoreCell{}, Lbl'-LT-'store'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortStoreCell{}} (\and{SortStoreCell{}} (Lbl'-LT-'store'-GT-'{}(X0:SortMap{}), Lbl'-LT-'store'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'store'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(Y0:SortConstructorName{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Y0:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}, Y2:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id{}(K0:SortId{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, LblListItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblMap'Coln'update{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSet'Coln'difference{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblSet'Coln'in{}(K0:SortKItem{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSetItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortId{}, \equals{SortId{}, R} (Val:SortId{}, LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, LblType-TypeName{}(K0:SortType{}, K1:SortTypeName{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(K0:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{}), Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(Y0:SortExps{})), Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(\and{SortExps{}} (X0:SortExps{}, Y0:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{}), Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{}), Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{}), Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{}), Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(Y0:SortConstructorName{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{}), Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{}), Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{}), Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{}), Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{}), Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{}), Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{}), Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{}), Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{}), Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{}), Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{}), Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{}), Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{}), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{}), Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{}), Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Y0:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{}), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}, Y2:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Vals{}(K0:SortVals{}))) [functional{}()] // functional
  axiom{}\implies{SortVal{}} (\and{SortVal{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Vals{}(X0:SortVals{}), Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Vals{}(Y0:SortVals{})), Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Vals{}(\and{SortVals{}} (X0:SortVals{}, Y0:SortVals{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Vals{}(X0:SortVals{}), Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'ConstructorName'Unds'Vals{}(Y0:SortConstructorName{}, Y1:SortVals{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Vals{}(X0:SortVals{}), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Cons'Unds'Val{}(Y0:SortCons{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Vals{}(X0:SortVals{}), Lblcallcc'Unds'FUN-UNTYPED-COMMON'Unds'Val{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Vals{}(X0:SortVals{}), Lblcc'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'K{}(Y0:SortMap{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Vals{}(X0:SortVals{}), Lblclosure'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'Cases{}(Y0:SortMap{}, Y1:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'LSqBUndsPipeUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps'Unds'Exp{}(K0:SortExps{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(Y0:SortConstructorName{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Y0:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}, Y2:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(Y0:SortConstructorName{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Y0:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}, Y2:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(Y0:SortConstructorName{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Y0:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}, Y2:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsAnd-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(K0:SortConstructorName{}, K1:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(X0:SortConstructorName{}, X1:SortExps{}), Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(Y0:SortConstructorName{}, Y1:SortExps{})), Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(\and{SortConstructorName{}} (X0:SortConstructorName{}, Y0:SortConstructorName{}), \and{SortExps{}} (X1:SortExps{}, Y1:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(X0:SortConstructorName{}, X1:SortExps{}), Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(X0:SortConstructorName{}, X1:SortExps{}), Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(X0:SortConstructorName{}, X1:SortExps{}), Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(X0:SortConstructorName{}, X1:SortExps{}), Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(X0:SortConstructorName{}, X1:SortExps{}), Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(X0:SortConstructorName{}, X1:SortExps{}), Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(X0:SortConstructorName{}, X1:SortExps{}), Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(X0:SortConstructorName{}, X1:SortExps{}), Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(X0:SortConstructorName{}, X1:SortExps{}), Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(X0:SortConstructorName{}, X1:SortExps{}), Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(X0:SortConstructorName{}, X1:SortExps{}), Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(X0:SortConstructorName{}, X1:SortExps{}), Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(X0:SortConstructorName{}, X1:SortExps{}), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(X0:SortConstructorName{}, X1:SortExps{}), Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(X0:SortConstructorName{}, X1:SortExps{}), Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Y0:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(X0:SortConstructorName{}, X1:SortExps{}), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}, Y2:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(X0:SortConstructorName{}, X1:SortExps{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(X0:SortConstructorName{}, X1:SortExps{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(X0:SortConstructorName{}, X1:SortExps{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(X0:SortConstructorName{}, X1:SortExps{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTypeCase{}, \equals{SortTypeCase{}, R} (Val:SortTypeCase{}, Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'TypeCase'Unds'ConstructorName'Unds'Types{}(K0:SortConstructorName{}, K1:SortTypes{}))) [functional{}()] // functional
  axiom{}\implies{SortTypeCase{}} (\and{SortTypeCase{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'TypeCase'Unds'ConstructorName'Unds'Types{}(X0:SortConstructorName{}, X1:SortTypes{}), Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'TypeCase'Unds'ConstructorName'Unds'Types{}(Y0:SortConstructorName{}, Y1:SortTypes{})), Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'TypeCase'Unds'ConstructorName'Unds'Types{}(\and{SortConstructorName{}} (X0:SortConstructorName{}, Y0:SortConstructorName{}), \and{SortTypes{}} (X1:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'ConstructorName'Unds'Vals{}(K0:SortConstructorName{}, K1:SortVals{}))) [functional{}()] // functional
  axiom{}\implies{SortVal{}} (\and{SortVal{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'ConstructorName'Unds'Vals{}(X0:SortConstructorName{}, X1:SortVals{}), Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'ConstructorName'Unds'Vals{}(Y0:SortConstructorName{}, Y1:SortVals{})), Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'ConstructorName'Unds'Vals{}(\and{SortConstructorName{}} (X0:SortConstructorName{}, Y0:SortConstructorName{}), \and{SortVals{}} (X1:SortVals{}, Y1:SortVals{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'ConstructorName'Unds'Vals{}(X0:SortConstructorName{}, X1:SortVals{}), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Cons'Unds'Val{}(Y0:SortCons{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'ConstructorName'Unds'Vals{}(X0:SortConstructorName{}, X1:SortVals{}), Lblcallcc'Unds'FUN-UNTYPED-COMMON'Unds'Val{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'ConstructorName'Unds'Vals{}(X0:SortConstructorName{}, X1:SortVals{}), Lblcc'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'K{}(Y0:SortMap{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'ConstructorName'Unds'Vals{}(X0:SortConstructorName{}, X1:SortVals{}), Lblclosure'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'Cases{}(Y0:SortMap{}, Y1:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsStar'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Y0:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}, Y2:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPlus'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Y0:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}, Y2:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBottoms{}, \equals{SortBottoms{}, R} (Val:SortBottoms{}, Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms{}(K0:SortBottom{}, K1:SortBottoms{}))) [functional{}()] // functional
  axiom{}\implies{SortBottoms{}} (\and{SortBottoms{}} (Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms{}(X0:SortBottom{}, X1:SortBottoms{}), Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms{}(Y0:SortBottom{}, Y1:SortBottoms{})), Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms{}(\and{SortBottom{}} (X0:SortBottom{}, Y0:SortBottom{}), \and{SortBottoms{}} (X1:SortBottoms{}, Y1:SortBottoms{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortExps{}, \equals{SortExps{}, R} (Val:SortExps{}, Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps{}(K0:SortExp{}, K1:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortExps{}} (\and{SortExps{}} (Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{})), Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExps{}} (X1:SortExps{}, Y1:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNames{}, \equals{SortNames{}, R} (Val:SortNames{}, Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Names'Unds'Name'Unds'Names{}(K0:SortName{}, K1:SortNames{}))) [functional{}()] // functional
  axiom{}\implies{SortNames{}} (\and{SortNames{}} (Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Names'Unds'Name'Unds'Names{}(X0:SortName{}, X1:SortNames{}), Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Names'Unds'Name'Unds'Names{}(Y0:SortName{}, Y1:SortNames{})), Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Names'Unds'Name'Unds'Names{}(\and{SortName{}} (X0:SortName{}, Y0:SortName{}), \and{SortNames{}} (X1:SortNames{}, Y1:SortNames{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTypeVars{}, \equals{SortTypeVars{}, R} (Val:SortTypeVars{}, Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeVars'Unds'TypeVar'Unds'TypeVars{}(K0:SortTypeVar{}, K1:SortTypeVars{}))) [functional{}()] // functional
  axiom{}\implies{SortTypeVars{}} (\and{SortTypeVars{}} (Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeVars'Unds'TypeVar'Unds'TypeVars{}(X0:SortTypeVar{}, X1:SortTypeVars{}), Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeVars'Unds'TypeVar'Unds'TypeVars{}(Y0:SortTypeVar{}, Y1:SortTypeVars{})), Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeVars'Unds'TypeVar'Unds'TypeVars{}(\and{SortTypeVar{}} (X0:SortTypeVar{}, Y0:SortTypeVar{}), \and{SortTypeVars{}} (X1:SortTypeVars{}, Y1:SortTypeVars{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTypes{}, \equals{SortTypes{}, R} (Val:SortTypes{}, Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Types'Unds'Type'Unds'Types{}(K0:SortType{}, K1:SortTypes{}))) [functional{}()] // functional
  axiom{}\implies{SortTypes{}} (\and{SortTypes{}} (Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Types'Unds'Type'Unds'Types{}(X0:SortType{}, X1:SortTypes{}), Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Types'Unds'Type'Unds'Types{}(Y0:SortType{}, Y1:SortTypes{})), Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Types'Unds'Type'Unds'Types{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}), \and{SortTypes{}} (X1:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortVals{}, \equals{SortVals{}, R} (Val:SortVals{}, Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals{}(K0:SortVal{}, K1:SortVals{}))) [functional{}()] // functional
  axiom{}\implies{SortVals{}} (\and{SortVals{}} (Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals{}(X0:SortVal{}, X1:SortVals{}), Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals{}(Y0:SortVal{}, Y1:SortVals{})), Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals{}(\and{SortVal{}} (X0:SortVal{}, Y0:SortVal{}), \and{SortVals{}} (X1:SortVals{}, Y1:SortVals{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lbl'Unds'--'-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'Type'Unds'Type{}(K0:SortType{}, K1:SortType{}))) [functional{}()] // functional
  axiom{}\implies{SortType{}} (\and{SortType{}} (Lbl'Unds'--'-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'Type'Unds'Type{}(X0:SortType{}, X1:SortType{}), Lbl'Unds'--'-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'Type'Unds'Type{}(Y0:SortType{}, Y1:SortType{})), Lbl'Unds'--'-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'Type'Unds'Type{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}), \and{SortType{}} (X1:SortType{}, Y1:SortType{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'Unds'--'-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'Type'Unds'Type{}(X0:SortType{}, X1:SortType{}), Lbl'UndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'TypeName{}(Y0:SortTypeName{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'Unds'--'-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'Type'Unds'Type{}(X0:SortType{}, X1:SortType{}), Lblbool'Unds'FUN-UNTYPED-COMMON'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'Unds'--'-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'Type'Unds'Type{}(X0:SortType{}, X1:SortType{}), Lblint'Unds'FUN-UNTYPED-COMMON'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'Unds'--'-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'Type'Unds'Type{}(X0:SortType{}, X1:SortType{}), Lblstring'Unds'FUN-UNTYPED-COMMON'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCase{}, \equals{SortCase{}, R} (Val:SortCase{}, Lbl'Unds'-'-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Case'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'-Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Y0:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}, Y2:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Y0:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}, Y2:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Y0:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}, Y2:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Y0:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}, Y2:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Y0:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}, Y2:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Y0:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}, Y2:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Y0:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}, Y2:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBinding{}, \equals{SortBinding{}, R} (Val:SortBinding{}, Lbl'UndsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Binding'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Y0:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}, Y2:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Y0:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}, Y2:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(K1:SortList{},K2:SortList{}),K3:SortList{}),Lbl'Unds'List'Unds'{}(K1:SortList{},Lbl'Unds'List'Unds'{}(K2:SortList{},K3:SortList{}))) [assoc{}()] // associativity
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(K:SortList{},Lbl'Stop'List{}()),K:SortList{}) [unit{}()] // right unit
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),K:SortList{}),K:SortList{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Unds'List'Unds'{}(K0:SortList{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Unds'Map'Unds'{}(K1:SortMap{},K2:SortMap{}),K3:SortMap{}),Lbl'Unds'Map'Unds'{}(K1:SortMap{},Lbl'Unds'Map'Unds'{}(K2:SortMap{},K3:SortMap{}))) [assoc{}()] // associativity
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(K:SortMap{},Lbl'Stop'Map{}()),K:SortMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),K:SortMap{}),K:SortMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(K1:SortSet{},K2:SortSet{}),K3:SortSet{}),Lbl'Unds'Set'Unds'{}(K1:SortSet{},Lbl'Unds'Set'Unds'{}(K2:SortSet{},K3:SortSet{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},K:SortSet{}),K:SortSet{}) [idem{}()] // idempotency
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},Lbl'Stop'Set{}()),K:SortSet{}) [unit{}()] // right unit
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Stop'Set{}(),K:SortSet{}),K:SortSet{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(K0:SortMap{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Y0:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}, Y2:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lbl'UndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'TypeName{}(K0:SortTypeName{}))) [functional{}()] // functional
  axiom{}\implies{SortType{}} (\and{SortType{}} (Lbl'UndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'TypeName{}(X0:SortTypeName{}), Lbl'UndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'TypeName{}(Y0:SortTypeName{})), Lbl'UndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'TypeName{}(\and{SortTypeName{}} (X0:SortTypeName{}, Y0:SortTypeName{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'UndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'TypeName{}(X0:SortTypeName{}), Lblbool'Unds'FUN-UNTYPED-COMMON'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'UndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'TypeName{}(X0:SortTypeName{}), Lblint'Unds'FUN-UNTYPED-COMMON'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'UndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'TypeName{}(X0:SortTypeName{}), Lblstring'Unds'FUN-UNTYPED-COMMON'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Y0:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}, Y2:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Cons'Unds'Val{}(K0:SortCons{}, K1:SortVal{}))) [functional{}()] // functional
  axiom{}\implies{SortVal{}} (\and{SortVal{}} (Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Cons'Unds'Val{}(X0:SortCons{}, X1:SortVal{}), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Cons'Unds'Val{}(Y0:SortCons{}, Y1:SortVal{})), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Cons'Unds'Val{}(\and{SortCons{}} (X0:SortCons{}, Y0:SortCons{}), \and{SortVal{}} (X1:SortVal{}, Y1:SortVal{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Cons'Unds'Val{}(X0:SortCons{}, X1:SortVal{}), Lblcallcc'Unds'FUN-UNTYPED-COMMON'Unds'Val{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Cons'Unds'Val{}(X0:SortCons{}, X1:SortVal{}), Lblcc'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'K{}(Y0:SortMap{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Cons'Unds'Val{}(X0:SortCons{}, X1:SortVal{}), Lblclosure'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'Cases{}(Y0:SortMap{}, Y1:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andThenBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBindings{}, \equals{SortBindings{}, R} (Val:SortBindings{}, Lbl'Unds'and'UndsUnds'FUN-UNTYPED-COMMON'Unds'Bindings'Unds'Binding'Unds'Bindings{}(K0:SortBinding{}, K1:SortBindings{}))) [functional{}()] // functional
  axiom{}\implies{SortBindings{}} (\and{SortBindings{}} (Lbl'Unds'and'UndsUnds'FUN-UNTYPED-COMMON'Unds'Bindings'Unds'Binding'Unds'Bindings{}(X0:SortBinding{}, X1:SortBindings{}), Lbl'Unds'and'UndsUnds'FUN-UNTYPED-COMMON'Unds'Bindings'Unds'Binding'Unds'Bindings{}(Y0:SortBinding{}, Y1:SortBindings{})), Lbl'Unds'and'UndsUnds'FUN-UNTYPED-COMMON'Unds'Bindings'Unds'Binding'Unds'Bindings{}(\and{SortBinding{}} (X0:SortBinding{}, Y0:SortBinding{}), \and{SortBindings{}} (X1:SortBindings{}, Y1:SortBindings{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'impliesBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(K0:SortKItem{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(K0:SortKItem{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orElseBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'xorBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'xorInt'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsPipe'-'-GT-Unds'{}(K0:SortKItem{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPipe'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCases{}, \equals{SortCases{}, R} (Val:SortCases{}, Lbl'UndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Cases'Unds'Case'Unds'Cases{}(K0:SortCase{}, K1:SortCases{}))) [functional{}()] // functional
  axiom{}\implies{SortCases{}} (\and{SortCases{}} (Lbl'UndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Cases'Unds'Case'Unds'Cases{}(X0:SortCase{}, X1:SortCases{}), Lbl'UndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Cases'Unds'Case'Unds'Cases{}(Y0:SortCase{}, Y1:SortCases{})), Lbl'UndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Cases'Unds'Case'Unds'Cases{}(\and{SortCase{}} (X0:SortCase{}, Y0:SortCase{}), \and{SortCases{}} (X1:SortCases{}, Y1:SortCases{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTypeCases{}, \equals{SortTypeCases{}, R} (Val:SortTypeCases{}, Lbl'UndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeCases'Unds'TypeCase'Unds'TypeCases{}(K0:SortTypeCase{}, K1:SortTypeCases{}))) [functional{}()] // functional
  axiom{}\implies{SortTypeCases{}} (\and{SortTypeCases{}} (Lbl'UndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeCases'Unds'TypeCase'Unds'TypeCases{}(X0:SortTypeCase{}, X1:SortTypeCases{}), Lbl'UndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeCases'Unds'TypeCase'Unds'TypeCases{}(Y0:SortTypeCase{}, Y1:SortTypeCases{})), Lbl'UndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeCases'Unds'TypeCase'Unds'TypeCases{}(\and{SortTypeCase{}} (X0:SortTypeCase{}, Y0:SortTypeCase{}), \and{SortTypeCases{}} (X1:SortTypeCases{}, Y1:SortTypeCases{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Y0:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}, Y2:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(K0:SortNames{}, K1:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(X0:SortNames{}, X1:SortExps{}), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{})), LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(\and{SortNames{}} (X0:SortNames{}, Y0:SortNames{}), \and{SortExps{}} (X1:SortExps{}, Y1:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(X0:SortNames{}, X1:SortExps{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(X0:SortNames{}, X1:SortExps{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(X0:SortNames{}, X1:SortExps{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(X0:SortNames{}, X1:SortExps{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(K0:SortNames{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(X0:SortNames{}), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Y0:SortNames{})), Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(\and{SortNames{}} (X0:SortNames{}, Y0:SortNames{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(X0:SortNames{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(X0:SortNames{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(X0:SortNames{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(X0:SortMap{}), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{})), LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(X0:SortMap{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(X0:SortMap{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(K0:SortNames{}, K1:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(X0:SortNames{}, X1:SortExps{}), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Y0:SortNames{}, Y1:SortExps{})), LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(\and{SortNames{}} (X0:SortNames{}, Y0:SortNames{}), \and{SortExps{}} (X1:SortExps{}, Y1:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(X0:SortNames{}, X1:SortExps{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lblbool'Unds'FUN-UNTYPED-COMMON'Unds'Type{}())) [functional{}()] // functional
  axiom{}\not{SortType{}} (\and{SortType{}} (Lblbool'Unds'FUN-UNTYPED-COMMON'Unds'Type{}(), Lblint'Unds'FUN-UNTYPED-COMMON'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lblbool'Unds'FUN-UNTYPED-COMMON'Unds'Type{}(), Lblstring'Unds'FUN-UNTYPED-COMMON'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, Lblcallcc'Unds'FUN-UNTYPED-COMMON'Unds'Val{}())) [functional{}()] // functional
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lblcallcc'Unds'FUN-UNTYPED-COMMON'Unds'Val{}(), Lblcc'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'K{}(Y0:SortMap{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lblcallcc'Unds'FUN-UNTYPED-COMMON'Unds'Val{}(), Lblclosure'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'Cases{}(Y0:SortMap{}, Y1:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, Lblcc'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'K{}(K0:SortMap{}, K1:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortVal{}} (\and{SortVal{}} (Lblcc'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'K{}(X0:SortMap{}, X1:SortK{}), Lblcc'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'K{}(Y0:SortMap{}, Y1:SortK{})), Lblcc'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'K{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}), \and{SortK{}} (X1:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lblcc'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'K{}(X0:SortMap{}, X1:SortK{}), Lblclosure'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'Cases{}(Y0:SortMap{}, Y1:SortCases{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, Lblclosure'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'Cases{}(K0:SortMap{}, K1:SortCases{}))) [functional{}()] // functional
  axiom{}\implies{SortVal{}} (\and{SortVal{}} (Lblclosure'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'Cases{}(X0:SortMap{}, X1:SortCases{}), Lblclosure'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'Cases{}(Y0:SortMap{}, Y1:SortCases{})), Lblclosure'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'Cases{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}), \and{SortCases{}} (X1:SortCases{}, Y1:SortCases{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortCons{}, \equals{SortCons{}, R} (Val:SortCons{}, Lblcons'Unds'FUN-UNTYPED-COMMON'Unds'Cons{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(K0:SortType{}, K1:SortTypeCases{}, K2:SortExp{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortId{}, \equals{SortId{}, R} (Val:SortId{}, LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(K0:SortCases{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(X0:SortCases{}), Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Y0:SortCases{})), Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(\and{SortCases{}} (X0:SortCases{}, Y0:SortCases{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(X0:SortCases{}), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}, Y2:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(X0:SortCases{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(X0:SortCases{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(X0:SortCases{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(X0:SortCases{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblhead'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}, K2:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}, X2:SortExp{}), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}, Y2:SortExp{})), Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}), \and{SortExp{}} (X2:SortExp{}, Y2:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}, X2:SortExp{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}, X2:SortExp{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}, X2:SortExp{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}, X2:SortExp{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lblint'Unds'FUN-UNTYPED-COMMON'Unds'Type{}())) [functional{}()] // functional
  axiom{}\not{SortType{}} (\and{SortType{}} (Lblint'Unds'FUN-UNTYPED-COMMON'Unds'Type{}(), Lblstring'Unds'FUN-UNTYPED-COMMON'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBinding{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBindings{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBool{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBottom{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBottoms{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCase{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCases{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCons{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisConstructorName{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisEnvCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisEnvCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisExp{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisExps{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFloat{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedCounterCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedCounterCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedTopCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedTopCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIOError{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIOFile{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIOInt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIOString{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisId{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInputCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInputCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisK{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKConfigVar{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKItem{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKResult{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisList{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMap{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMatchResult{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisName{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNames{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOutputCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOutputCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisSet{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStoreCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStoreCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStream{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisString{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisType{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTypeCase{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTypeCases{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTypeName{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTypeVar{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTypeVars{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTypes{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisVal{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisVals{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(K0:SortBindings{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(X0:SortBindings{}, X1:SortExp{}), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{})), Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(\and{SortBindings{}} (X0:SortBindings{}, Y0:SortBindings{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(X0:SortBindings{}, X1:SortExp{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(X0:SortBindings{}, X1:SortExp{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(X0:SortBindings{}, X1:SortExp{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(K0:SortBindings{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(X0:SortBindings{}, X1:SortExp{}), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(Y0:SortBindings{}, Y1:SortExp{})), Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(\and{SortBindings{}} (X0:SortBindings{}, Y0:SortBindings{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(X0:SortBindings{}, X1:SortExp{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(X0:SortBindings{}, X1:SortExp{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMatchResult{}, \equals{SortMatchResult{}, R} (Val:SortMatchResult{}, LblmatchFailure'Unds'FUN-UNTYPED'Unds'MatchResult{}())) [functional{}()] // functional
  axiom{}\not{SortMatchResult{}} (\and{SortMatchResult{}} (LblmatchFailure'Unds'FUN-UNTYPED'Unds'MatchResult{}(), LblmatchResult'LParUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMatchResult{}, \equals{SortMatchResult{}, R} (Val:SortMatchResult{}, LblmatchResult'LParUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortMatchResult{}} (\and{SortMatchResult{}} (LblmatchResult'LParUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Map{}(X0:SortMap{}), LblmatchResult'LParUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Map{}(Y0:SortMap{})), LblmatchResult'LParUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Map{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortEnvCellOpt{}, \equals{SortEnvCellOpt{}, R} (Val:SortEnvCellOpt{}, LblnoEnvCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R} (Val:SortGeneratedCounterCellOpt{}, LblnoGeneratedCounterCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInputCellOpt{}, \equals{SortInputCellOpt{}, R} (Val:SortInputCellOpt{}, LblnoInputCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, LblnoKCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortOutputCellOpt{}, \equals{SortOutputCellOpt{}, R} (Val:SortOutputCellOpt{}, LblnoOutputCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStoreCellOpt{}, \equals{SortStoreCellOpt{}, R} (Val:SortStoreCellOpt{}, LblnoStoreCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTCellOpt{}, \equals{SortTCellOpt{}, R} (Val:SortTCellOpt{}, LblnoTCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblnotBool'Unds'{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblnull'QuesUnds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblref'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(K0:SortMap{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(X0:SortMap{}), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Y0:SortMap{})), LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(K0:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lblstring'Unds'FUN-UNTYPED-COMMON'Unds'Type{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(K0:SortString{}, K1:SortInt{}, K2:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbltail'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbltry'Unds'catch'LParUndsRParUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Name'Unds'Exp{}(K0:SortExp{}, K1:SortName{}, K2:SortExp{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Tild'Int'Unds'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{} \or{SortCases{}} (Lbl'Stop'List'LBraQuotUndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Cases'Unds'Case'Unds'Cases'QuotRBraUnds'Cases{}(), \exists{SortCases{}} (X0:SortCase{}, \exists{SortCases{}} (X1:SortCases{}, Lbl'UndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Cases'Unds'Case'Unds'Cases{}(X0:SortCase{}, X1:SortCases{}))), \bottom{SortCases{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, \exists{SortKItem{}} (X1:SortK{}, Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}, X1:SortK{}))), Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(), \exists{SortKItem{}} (X0:SortInt{}, \exists{SortKItem{}} (X1:SortString{}, \exists{SortKItem{}} (X2:SortString{}, Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{})))), \exists{SortKItem{}} (X0:SortNames{}, \exists{SortKItem{}} (X1:SortExps{}, LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(X0:SortNames{}, X1:SortExps{}))), \exists{SortKItem{}} (X0:SortNames{}, Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(X0:SortNames{})), \exists{SortKItem{}} (X0:SortMap{}, LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(X0:SortMap{})), \exists{SortKItem{}} (X0:SortNames{}, \exists{SortKItem{}} (X1:SortExps{}, LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(X0:SortNames{}, X1:SortExps{}))), \exists{SortKItem{}} (X0:SortMap{}, LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(X0:SortMap{})), \exists{SortKItem{}} (Val:SortCases{}, inj{SortCases{}, SortKItem{}} (Val:SortCases{})), \exists{SortKItem{}} (Val:SortList{}, inj{SortList{}, SortKItem{}} (Val:SortList{})), \exists{SortKItem{}} (Val:SortInputCellOpt{}, inj{SortInputCellOpt{}, SortKItem{}} (Val:SortInputCellOpt{})), \exists{SortKItem{}} (Val:SortCase{}, inj{SortCase{}, SortKItem{}} (Val:SortCase{})), \exists{SortKItem{}} (Val:SortTypes{}, inj{SortTypes{}, SortKItem{}} (Val:SortTypes{})), \exists{SortKItem{}} (Val:SortTCellOpt{}, inj{SortTCellOpt{}, SortKItem{}} (Val:SortTCellOpt{})), \exists{SortKItem{}} (Val:SortTypeCases{}, inj{SortTypeCases{}, SortKItem{}} (Val:SortTypeCases{})), \exists{SortKItem{}} (Val:SortBindings{}, inj{SortBindings{}, SortKItem{}} (Val:SortBindings{})), \exists{SortKItem{}} (Val:SortTCellFragment{}, inj{SortTCellFragment{}, SortKItem{}} (Val:SortTCellFragment{})), \exists{SortKItem{}} (Val:SortString{}, inj{SortString{}, SortKItem{}} (Val:SortString{})), \exists{SortKItem{}} (Val:SortTypeName{}, inj{SortTypeName{}, SortKItem{}} (Val:SortTypeName{})), \exists{SortKItem{}} (Val:SortKConfigVar{}, inj{SortKConfigVar{}, SortKItem{}} (Val:SortKConfigVar{})), \exists{SortKItem{}} (Val:SortIOInt{}, inj{SortIOInt{}, SortKItem{}} (Val:SortIOInt{})), \exists{SortKItem{}} (Val:SortTCell{}, inj{SortTCell{}, SortKItem{}} (Val:SortTCell{})), \exists{SortKItem{}} (Val:SortBottoms{}, inj{SortBottoms{}, SortKItem{}} (Val:SortBottoms{})), \exists{SortKItem{}} (Val:SortExp{}, inj{SortExp{}, SortKItem{}} (Val:SortExp{})), \exists{SortKItem{}} (Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCellOpt{}, SortKItem{}} (Val:SortGeneratedCounterCellOpt{})), \exists{SortKItem{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (Val:SortGeneratedCounterCell{})), \exists{SortKItem{}} (Val:SortTypeCase{}, inj{SortTypeCase{}, SortKItem{}} (Val:SortTypeCase{})), \exists{SortKItem{}} (Val:SortInputCell{}, inj{SortInputCell{}, SortKItem{}} (Val:SortInputCell{})), \exists{SortKItem{}} (Val:SortId{}, inj{SortId{}, SortKItem{}} (Val:SortId{})), \exists{SortKItem{}} (Val:SortBottom{}, inj{SortBottom{}, SortKItem{}} (Val:SortBottom{})), \exists{SortKItem{}} (Val:SortVals{}, inj{SortVals{}, SortKItem{}} (Val:SortVals{})), \exists{SortKItem{}} (Val:SortStream{}, inj{SortStream{}, SortKItem{}} (Val:SortStream{})), \exists{SortKItem{}} (Val:SortBool{}, inj{SortBool{}, SortKItem{}} (Val:SortBool{})), \exists{SortKItem{}} (Val:SortTypeVar{}, inj{SortTypeVar{}, SortKItem{}} (Val:SortTypeVar{})), \exists{SortKItem{}} (Val:SortKCell{}, inj{SortKCell{}, SortKItem{}} (Val:SortKCell{})), \exists{SortKItem{}} (Val:SortStoreCell{}, inj{SortStoreCell{}, SortKItem{}} (Val:SortStoreCell{})), \exists{SortKItem{}} (Val:SortIOFile{}, inj{SortIOFile{}, SortKItem{}} (Val:SortIOFile{})), \exists{SortKItem{}} (Val:SortConstructorName{}, inj{SortConstructorName{}, SortKItem{}} (Val:SortConstructorName{})), \exists{SortKItem{}} (Val:SortOutputCell{}, inj{SortOutputCell{}, SortKItem{}} (Val:SortOutputCell{})), \exists{SortKItem{}} (Val:SortStoreCellOpt{}, inj{SortStoreCellOpt{}, SortKItem{}} (Val:SortStoreCellOpt{})), \exists{SortKItem{}} (Val:SortKResult{}, inj{SortKResult{}, SortKItem{}} (Val:SortKResult{})), \exists{SortKItem{}} (Val:SortMap{}, inj{SortMap{}, SortKItem{}} (Val:SortMap{})), \exists{SortKItem{}} (Val:SortOutputCellOpt{}, inj{SortOutputCellOpt{}, SortKItem{}} (Val:SortOutputCellOpt{})), \exists{SortKItem{}} (Val:SortEnvCell{}, inj{SortEnvCell{}, SortKItem{}} (Val:SortEnvCell{})), \exists{SortKItem{}} (Val:SortName{}, inj{SortName{}, SortKItem{}} (Val:SortName{})), \exists{SortKItem{}} (Val:SortTypeVars{}, inj{SortTypeVars{}, SortKItem{}} (Val:SortTypeVars{})), \exists{SortKItem{}} (Val:SortCons{}, inj{SortCons{}, SortKItem{}} (Val:SortCons{})), \exists{SortKItem{}} (Val:SortKCellOpt{}, inj{SortKCellOpt{}, SortKItem{}} (Val:SortKCellOpt{})), \exists{SortKItem{}} (Val:SortInt{}, inj{SortInt{}, SortKItem{}} (Val:SortInt{})), \exists{SortKItem{}} (Val:SortFloat{}, inj{SortFloat{}, SortKItem{}} (Val:SortFloat{})), \exists{SortKItem{}} (Val:SortNames{}, inj{SortNames{}, SortKItem{}} (Val:SortNames{})), \exists{SortKItem{}} (Val:SortBinding{}, inj{SortBinding{}, SortKItem{}} (Val:SortBinding{})), \exists{SortKItem{}} (Val:SortType{}, inj{SortType{}, SortKItem{}} (Val:SortType{})), \exists{SortKItem{}} (Val:SortGeneratedTopCell{}, inj{SortGeneratedTopCell{}, SortKItem{}} (Val:SortGeneratedTopCell{})), \exists{SortKItem{}} (Val:SortEnvCellOpt{}, inj{SortEnvCellOpt{}, SortKItem{}} (Val:SortEnvCellOpt{})), \exists{SortKItem{}} (Val:SortVal{}, inj{SortVal{}, SortKItem{}} (Val:SortVal{})), \exists{SortKItem{}} (Val:SortSet{}, inj{SortSet{}, SortKItem{}} (Val:SortSet{})), \exists{SortKItem{}} (Val:SortExps{}, inj{SortExps{}, SortKItem{}} (Val:SortExps{})), \exists{SortKItem{}} (Val:SortIOString{}, inj{SortIOString{}, SortKItem{}} (Val:SortIOString{})), \exists{SortKItem{}} (Val:SortGeneratedTopCellFragment{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (Val:SortGeneratedTopCellFragment{})), \exists{SortKItem{}} (Val:SortIOError{}, inj{SortIOError{}, SortKItem{}} (Val:SortIOError{})), \exists{SortKItem{}} (Val:SortMatchResult{}, inj{SortMatchResult{}, SortKItem{}} (Val:SortMatchResult{})), \bottom{SortKItem{}}()) [constructor{}()] // no junk
  axiom{} \or{SortInputCellOpt{}} (LblnoInputCell{}(), \exists{SortInputCellOpt{}} (Val:SortInputCell{}, inj{SortInputCell{}, SortInputCellOpt{}} (Val:SortInputCell{})), \bottom{SortInputCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCase{}} (\exists{SortCase{}} (X0:SortExp{}, \exists{SortCase{}} (X1:SortExp{}, Lbl'Unds'-'-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Case'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \bottom{SortCase{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypes{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}(), \exists{SortTypes{}} (X0:SortType{}, \exists{SortTypes{}} (X1:SortTypes{}, Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Types'Unds'Type'Unds'Types{}(X0:SortType{}, X1:SortTypes{}))), \exists{SortTypes{}} (Val:SortTypeVars{}, inj{SortTypeVars{}, SortTypes{}} (Val:SortTypeVars{})), \bottom{SortTypes{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTCellOpt{}} (LblnoTCell{}(), \exists{SortTCellOpt{}} (Val:SortTCell{}, inj{SortTCell{}, SortTCellOpt{}} (Val:SortTCell{})), \bottom{SortTCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypeCases{}} (Lbl'Stop'List'LBraQuotUndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeCases'Unds'TypeCase'Unds'TypeCases'QuotRBraUnds'TypeCases{}(), \exists{SortTypeCases{}} (X0:SortTypeCase{}, \exists{SortTypeCases{}} (X1:SortTypeCases{}, Lbl'UndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeCases'Unds'TypeCase'Unds'TypeCases{}(X0:SortTypeCase{}, X1:SortTypeCases{}))), \bottom{SortTypeCases{}}()) [constructor{}()] // no junk
  axiom{} \or{SortBindings{}} (Lbl'Stop'List'LBraQuotUnds'and'UndsUnds'FUN-UNTYPED-COMMON'Unds'Bindings'Unds'Binding'Unds'Bindings'QuotRBraUnds'Bindings{}(), \exists{SortBindings{}} (X0:SortBinding{}, \exists{SortBindings{}} (X1:SortBindings{}, Lbl'Unds'and'UndsUnds'FUN-UNTYPED-COMMON'Unds'Bindings'Unds'Binding'Unds'Bindings{}(X0:SortBinding{}, X1:SortBindings{}))), \bottom{SortBindings{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTCellFragment{}} (\exists{SortTCellFragment{}} (X0:SortKCellOpt{}, \exists{SortTCellFragment{}} (X1:SortEnvCellOpt{}, \exists{SortTCellFragment{}} (X2:SortInputCellOpt{}, \exists{SortTCellFragment{}} (X3:SortOutputCellOpt{}, \exists{SortTCellFragment{}} (X4:SortStoreCellOpt{}, Lbl'-LT-'T'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortEnvCellOpt{}, X2:SortInputCellOpt{}, X3:SortOutputCellOpt{}, X4:SortStoreCellOpt{})))))), \bottom{SortTCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortString{}} (\top{SortString{}}(), \bottom{SortString{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortTypeName{}} (\top{SortTypeName{}}(), \bottom{SortTypeName{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortKConfigVar{}} (\top{SortKConfigVar{}}(), \bottom{SortKConfigVar{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortIOInt{}} (\exists{SortIOInt{}} (Val:SortInt{}, inj{SortInt{}, SortIOInt{}} (Val:SortInt{})), \exists{SortIOInt{}} (Val:SortIOError{}, inj{SortIOError{}, SortIOInt{}} (Val:SortIOError{})), \bottom{SortIOInt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTCell{}} (\exists{SortTCell{}} (X0:SortKCell{}, \exists{SortTCell{}} (X1:SortEnvCell{}, \exists{SortTCell{}} (X2:SortInputCell{}, \exists{SortTCell{}} (X3:SortOutputCell{}, \exists{SortTCell{}} (X4:SortStoreCell{}, Lbl'-LT-'T'-GT-'{}(X0:SortKCell{}, X1:SortEnvCell{}, X2:SortInputCell{}, X3:SortOutputCell{}, X4:SortStoreCell{})))))), \bottom{SortTCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortBottoms{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms'QuotRBraUnds'Bottoms{}(), \exists{SortBottoms{}} (X0:SortBottom{}, \exists{SortBottoms{}} (X1:SortBottoms{}, Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms{}(X0:SortBottom{}, X1:SortBottoms{}))), \bottom{SortBottoms{}}()) [constructor{}()] // no junk
  axiom{} \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{})), \exists{SortExp{}} (X0:SortName{}, Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(X0:SortName{})), \exists{SortExp{}} (X0:SortExp{}, Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{})), \exists{SortExp{}} (X0:SortExp{}, Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{})), \exists{SortExp{}} (X0:SortExps{}, Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(X0:SortExps{})), \exists{SortExp{}} (X0:SortExps{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'LSqBUndsPipeUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps'Unds'Exp{}(X0:SortExps{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortConstructorName{}, \exists{SortExp{}} (X1:SortExps{}, Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(X0:SortConstructorName{}, X1:SortExps{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortType{}, \exists{SortExp{}} (X1:SortTypeCases{}, \exists{SortExp{}} (X2:SortExp{}, Lbldatatype'UndsEqlsUndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Type'Unds'TypeCases'Unds'Exp{}(X0:SortType{}, X1:SortTypeCases{}, X2:SortExp{})))), \exists{SortExp{}} (X0:SortCases{}, Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(X0:SortCases{})), Lblhead'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}(), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, \exists{SortExp{}} (X2:SortExp{}, Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}, X2:SortExp{})))), \exists{SortExp{}} (X0:SortBindings{}, \exists{SortExp{}} (X1:SortExp{}, Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(X0:SortBindings{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortBindings{}, \exists{SortExp{}} (X1:SortExp{}, Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(X0:SortBindings{}, X1:SortExp{}))), Lblnull'QuesUnds'FUN-UNTYPED-COMMON'Unds'Exp{}(), \exists{SortExp{}} (X0:SortExp{}, Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(X0:SortExp{})), Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}(), Lblref'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}(), Lbltail'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}(), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortName{}, \exists{SortExp{}} (X2:SortExp{}, Lbltry'Unds'catch'LParUndsRParUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Name'Unds'Exp{}(X0:SortExp{}, X1:SortName{}, X2:SortExp{})))), \exists{SortExp{}} (Val:SortString{}, inj{SortString{}, SortExp{}} (Val:SortString{})), \exists{SortExp{}} (Val:SortBool{}, inj{SortBool{}, SortExp{}} (Val:SortBool{})), \exists{SortExp{}} (Val:SortConstructorName{}, inj{SortConstructorName{}, SortExp{}} (Val:SortConstructorName{})), \exists{SortExp{}} (Val:SortName{}, inj{SortName{}, SortExp{}} (Val:SortName{})), \exists{SortExp{}} (Val:SortCons{}, inj{SortCons{}, SortExp{}} (Val:SortCons{})), \exists{SortExp{}} (Val:SortInt{}, inj{SortInt{}, SortExp{}} (Val:SortInt{})), \exists{SortExp{}} (Val:SortVal{}, inj{SortVal{}, SortExp{}} (Val:SortVal{})), \bottom{SortExp{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCellOpt{}} (LblnoGeneratedCounterCell{}(), \exists{SortGeneratedCounterCellOpt{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}} (Val:SortGeneratedCounterCell{})), \bottom{SortGeneratedCounterCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCell{}} (\exists{SortGeneratedCounterCell{}} (X0:SortInt{}, Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{})), \bottom{SortGeneratedCounterCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypeCase{}} (\exists{SortTypeCase{}} (X0:SortConstructorName{}, \exists{SortTypeCase{}} (X1:SortTypes{}, Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'TypeCase'Unds'ConstructorName'Unds'Types{}(X0:SortConstructorName{}, X1:SortTypes{}))), \exists{SortTypeCase{}} (Val:SortConstructorName{}, inj{SortConstructorName{}, SortTypeCase{}} (Val:SortConstructorName{})), \bottom{SortTypeCase{}}()) [constructor{}()] // no junk
  axiom{} \or{SortInputCell{}} (\exists{SortInputCell{}} (X0:SortList{}, Lbl'-LT-'input'-GT-'{}(X0:SortList{})), \bottom{SortInputCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortId{}} (\top{SortId{}}(), \bottom{SortId{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortVals{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}(), \exists{SortVals{}} (X0:SortVal{}, \exists{SortVals{}} (X1:SortVals{}, Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals{}(X0:SortVal{}, X1:SortVals{}))), \exists{SortVals{}} (Val:SortBottoms{}, inj{SortBottoms{}, SortVals{}} (Val:SortBottoms{})), \bottom{SortVals{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStream{}} (\exists{SortStream{}} (X0:SortK{}, Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{})), \exists{SortStream{}} (X0:SortInt{}, Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{})), \exists{SortStream{}} (X0:SortInt{}, Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{})), \exists{SortStream{}} (X0:SortString{}, \exists{SortStream{}} (X1:SortString{}, Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(X0:SortString{}, X1:SortString{}))), \bottom{SortStream{}}()) [constructor{}()] // no junk
  axiom{} \or{SortBool{}} (\top{SortBool{}}(), \bottom{SortBool{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortTypeVar{}} (\top{SortTypeVar{}}(), \bottom{SortTypeVar{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortKCell{}} (\exists{SortKCell{}} (X0:SortK{}, Lbl'-LT-'k'-GT-'{}(X0:SortK{})), \bottom{SortKCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStoreCell{}} (\exists{SortStoreCell{}} (X0:SortMap{}, Lbl'-LT-'store'-GT-'{}(X0:SortMap{})), \bottom{SortStoreCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIOFile{}} (\exists{SortIOFile{}} (X0:SortString{}, \exists{SortIOFile{}} (X1:SortInt{}, Lbl'Hash'tempFile{}(X0:SortString{}, X1:SortInt{}))), \exists{SortIOFile{}} (Val:SortIOError{}, inj{SortIOError{}, SortIOFile{}} (Val:SortIOError{})), \bottom{SortIOFile{}}()) [constructor{}()] // no junk
  axiom{} \or{SortConstructorName{}} (\top{SortConstructorName{}}(), \bottom{SortConstructorName{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortOutputCell{}} (\exists{SortOutputCell{}} (X0:SortList{}, Lbl'-LT-'output'-GT-'{}(X0:SortList{})), \bottom{SortOutputCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStoreCellOpt{}} (LblnoStoreCell{}(), \exists{SortStoreCellOpt{}} (Val:SortStoreCell{}, inj{SortStoreCell{}, SortStoreCellOpt{}} (Val:SortStoreCell{})), \bottom{SortStoreCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKResult{}} (\exists{SortKResult{}} (Val:SortString{}, inj{SortString{}, SortKResult{}} (Val:SortString{})), \exists{SortKResult{}} (Val:SortBottoms{}, inj{SortBottoms{}, SortKResult{}} (Val:SortBottoms{})), \exists{SortKResult{}} (Val:SortVals{}, inj{SortVals{}, SortKResult{}} (Val:SortVals{})), \exists{SortKResult{}} (Val:SortBool{}, inj{SortBool{}, SortKResult{}} (Val:SortBool{})), \exists{SortKResult{}} (Val:SortConstructorName{}, inj{SortConstructorName{}, SortKResult{}} (Val:SortConstructorName{})), \exists{SortKResult{}} (Val:SortCons{}, inj{SortCons{}, SortKResult{}} (Val:SortCons{})), \exists{SortKResult{}} (Val:SortInt{}, inj{SortInt{}, SortKResult{}} (Val:SortInt{})), \exists{SortKResult{}} (Val:SortVal{}, inj{SortVal{}, SortKResult{}} (Val:SortVal{})), \bottom{SortKResult{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOutputCellOpt{}} (LblnoOutputCell{}(), \exists{SortOutputCellOpt{}} (Val:SortOutputCell{}, inj{SortOutputCell{}, SortOutputCellOpt{}} (Val:SortOutputCell{})), \bottom{SortOutputCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortEnvCell{}} (\exists{SortEnvCell{}} (X0:SortMap{}, Lbl'-LT-'env'-GT-'{}(X0:SortMap{})), \bottom{SortEnvCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortName{}} (\top{SortName{}}(), \bottom{SortName{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortTypeVars{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeVars'Unds'TypeVar'Unds'TypeVars'QuotRBraUnds'TypeVars{}(), \exists{SortTypeVars{}} (X0:SortTypeVar{}, \exists{SortTypeVars{}} (X1:SortTypeVars{}, Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeVars'Unds'TypeVar'Unds'TypeVars{}(X0:SortTypeVar{}, X1:SortTypeVars{}))), \bottom{SortTypeVars{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCons{}} (Lblcons'Unds'FUN-UNTYPED-COMMON'Unds'Cons{}(), \bottom{SortCons{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKCellOpt{}} (LblnoKCell{}(), \exists{SortKCellOpt{}} (Val:SortKCell{}, inj{SortKCell{}, SortKCellOpt{}} (Val:SortKCell{})), \bottom{SortKCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortInt{}} (\top{SortInt{}}(), \bottom{SortInt{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortFloat{}} (\top{SortFloat{}}(), \bottom{SortFloat{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortNames{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Names'Unds'Name'Unds'Names'QuotRBraUnds'Names{}(), \exists{SortNames{}} (X0:SortName{}, \exists{SortNames{}} (X1:SortNames{}, Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Names'Unds'Name'Unds'Names{}(X0:SortName{}, X1:SortNames{}))), \exists{SortNames{}} (Val:SortBottoms{}, inj{SortBottoms{}, SortNames{}} (Val:SortBottoms{})), \bottom{SortNames{}}()) [constructor{}()] // no junk
  axiom{} \or{SortBinding{}} (\exists{SortBinding{}} (X0:SortExp{}, \exists{SortBinding{}} (X1:SortExp{}, Lbl'UndsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Binding'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \bottom{SortBinding{}}()) [constructor{}()] // no junk
  axiom{} \or{SortType{}} (\exists{SortType{}} (X0:SortTypes{}, \exists{SortType{}} (X1:SortTypeName{}, Lbl'LParUndsRParUndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'Types'Unds'TypeName{}(X0:SortTypes{}, X1:SortTypeName{}))), \exists{SortType{}} (X0:SortType{}, \exists{SortType{}} (X1:SortTypeName{}, LblType-TypeName{}(X0:SortType{}, X1:SortTypeName{}))), \exists{SortType{}} (X0:SortType{}, \exists{SortType{}} (X1:SortType{}, Lbl'Unds'--'-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'Type'Unds'Type{}(X0:SortType{}, X1:SortType{}))), \exists{SortType{}} (X0:SortTypeName{}, Lbl'UndsUnds'FUN-UNTYPED-COMMON'Unds'Type'Unds'TypeName{}(X0:SortTypeName{})), Lblbool'Unds'FUN-UNTYPED-COMMON'Unds'Type{}(), Lblint'Unds'FUN-UNTYPED-COMMON'Unds'Type{}(), Lblstring'Unds'FUN-UNTYPED-COMMON'Unds'Type{}(), \exists{SortType{}} (Val:SortTypeVar{}, inj{SortTypeVar{}, SortType{}} (Val:SortTypeVar{})), \bottom{SortType{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedTopCell{}} (\exists{SortGeneratedTopCell{}} (X0:SortTCell{}, \exists{SortGeneratedTopCell{}} (X1:SortGeneratedCounterCell{}, Lbl'-LT-'generatedTop'-GT-'{}(X0:SortTCell{}, X1:SortGeneratedCounterCell{}))), \bottom{SortGeneratedTopCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortEnvCellOpt{}} (LblnoEnvCell{}(), \exists{SortEnvCellOpt{}} (Val:SortEnvCell{}, inj{SortEnvCell{}, SortEnvCellOpt{}} (Val:SortEnvCell{})), \bottom{SortEnvCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortVal{}} (\exists{SortVal{}} (X0:SortVals{}, Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Vals{}(X0:SortVals{})), \exists{SortVal{}} (X0:SortConstructorName{}, \exists{SortVal{}} (X1:SortVals{}, Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'ConstructorName'Unds'Vals{}(X0:SortConstructorName{}, X1:SortVals{}))), \exists{SortVal{}} (X0:SortCons{}, \exists{SortVal{}} (X1:SortVal{}, Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Cons'Unds'Val{}(X0:SortCons{}, X1:SortVal{}))), Lblcallcc'Unds'FUN-UNTYPED-COMMON'Unds'Val{}(), \exists{SortVal{}} (X0:SortMap{}, \exists{SortVal{}} (X1:SortK{}, Lblcc'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'K{}(X0:SortMap{}, X1:SortK{}))), \exists{SortVal{}} (X0:SortMap{}, \exists{SortVal{}} (X1:SortCases{}, Lblclosure'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'Cases{}(X0:SortMap{}, X1:SortCases{}))), \exists{SortVal{}} (Val:SortString{}, inj{SortString{}, SortVal{}} (Val:SortString{})), \exists{SortVal{}} (Val:SortBool{}, inj{SortBool{}, SortVal{}} (Val:SortBool{})), \exists{SortVal{}} (Val:SortConstructorName{}, inj{SortConstructorName{}, SortVal{}} (Val:SortConstructorName{})), \exists{SortVal{}} (Val:SortCons{}, inj{SortCons{}, SortVal{}} (Val:SortCons{})), \exists{SortVal{}} (Val:SortInt{}, inj{SortInt{}, SortVal{}} (Val:SortInt{})), \bottom{SortVal{}}()) [constructor{}()] // no junk
  axiom{} \or{SortExps{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), \exists{SortExps{}} (X0:SortExp{}, \exists{SortExps{}} (X1:SortExps{}, Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}))), \exists{SortExps{}} (Val:SortBottoms{}, inj{SortBottoms{}, SortExps{}} (Val:SortBottoms{})), \exists{SortExps{}} (Val:SortVals{}, inj{SortVals{}, SortExps{}} (Val:SortVals{})), \exists{SortExps{}} (Val:SortNames{}, inj{SortNames{}, SortExps{}} (Val:SortNames{})), \bottom{SortExps{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIOString{}} (\exists{SortIOString{}} (Val:SortString{}, inj{SortString{}, SortIOString{}} (Val:SortString{})), \exists{SortIOString{}} (Val:SortIOError{}, inj{SortIOError{}, SortIOString{}} (Val:SortIOError{})), \bottom{SortIOString{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedTopCellFragment{}} (\exists{SortGeneratedTopCellFragment{}} (X0:SortTCellOpt{}, \exists{SortGeneratedTopCellFragment{}} (X1:SortGeneratedCounterCellOpt{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortTCellOpt{}, X1:SortGeneratedCounterCellOpt{}))), \bottom{SortGeneratedTopCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EACCES{}(), Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EAGAIN{}(), Lbl'Hash'EALREADY{}(), Lbl'Hash'EBADF{}(), Lbl'Hash'EBUSY{}(), Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDEADLK{}(), Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EDOM{}(), Lbl'Hash'EEXIST{}(), Lbl'Hash'EFAULT{}(), Lbl'Hash'EFBIG{}(), Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EINTR{}(), Lbl'Hash'EINVAL{}(), Lbl'Hash'EIO{}(), Lbl'Hash'EISCONN{}(), Lbl'Hash'EISDIR{}(), Lbl'Hash'ELOOP{}(), Lbl'Hash'EMFILE{}(), Lbl'Hash'EMLINK{}(), Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ENOTTY{}(), Lbl'Hash'ENXIO{}(), Lbl'Hash'EOF{}(), Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPERM{}(), Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPIPE{}(), Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ERANGE{}(), Lbl'Hash'EROFS{}(), Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ESPIPE{}(), Lbl'Hash'ESRCH{}(), Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'EWOULDBLOCK{}(), Lbl'Hash'EXDEV{}(), \exists{SortIOError{}} (X0:SortString{}, Lbl'Hash'noParse{}(X0:SortString{})), \exists{SortIOError{}} (X0:SortInt{}, Lbl'Hash'unknownIOError{}(X0:SortInt{})), \bottom{SortIOError{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMatchResult{}} (LblmatchFailure'Unds'FUN-UNTYPED'Unds'MatchResult{}(), \exists{SortMatchResult{}} (X0:SortMap{}, LblmatchResult'LParUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Map{}(X0:SortMap{})), \bottom{SortMatchResult{}}()) [constructor{}()] // no junk
  axiom{R} \equals{SortExp{}, R} (Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortCons{}, SortExp{}} (K0:SortCons{}),inj{SortVal{}, SortExp{}} (K1:SortVal{})), inj{SortVal{}, SortExp{}} (Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Cons'Unds'Val{}(K0:SortCons{},K1:SortVal{}))) [overload{}(Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(), Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Cons'Unds'Val{}())] // overloaded production
  axiom{R} \equals{SortExps{}, R} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), inj{SortNames{}, SortExps{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Names'Unds'Name'Unds'Names'QuotRBraUnds'Names{}())) [overload{}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Names'Unds'Name'Unds'Names'QuotRBraUnds'Names{}())] // overloaded production
  axiom{R} \equals{SortNames{}, R} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Names'Unds'Name'Unds'Names'QuotRBraUnds'Names{}(), inj{SortBottoms{}, SortNames{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms'QuotRBraUnds'Bottoms{}())) [overload{}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Names'Unds'Name'Unds'Names'QuotRBraUnds'Names{}(), Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms'QuotRBraUnds'Bottoms{}())] // overloaded production
  axiom{R} \equals{SortExps{}, R} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), inj{SortBottoms{}, SortExps{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms'QuotRBraUnds'Bottoms{}())) [overload{}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms'QuotRBraUnds'Bottoms{}())] // overloaded production
  axiom{R} \equals{SortVals{}, R} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}(), inj{SortBottoms{}, SortVals{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms'QuotRBraUnds'Bottoms{}())) [overload{}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}(), Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms'QuotRBraUnds'Bottoms{}())] // overloaded production
  axiom{R} \equals{SortTypes{}, R} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}(), inj{SortTypeVars{}, SortTypes{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeVars'Unds'TypeVar'Unds'TypeVars'QuotRBraUnds'TypeVars{}())) [overload{}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}(), Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeVars'Unds'TypeVar'Unds'TypeVars'QuotRBraUnds'TypeVars{}())] // overloaded production
  axiom{R} \equals{SortExps{}, R} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), inj{SortVals{}, SortExps{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())) [overload{}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())] // overloaded production
  axiom{R} \equals{SortTypes{}, R} (Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Types'Unds'Type'Unds'Types{}(inj{SortTypeVar{}, SortType{}} (K0:SortTypeVar{}),inj{SortTypeVars{}, SortTypes{}} (K1:SortTypeVars{})), inj{SortTypeVars{}, SortTypes{}} (Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeVars'Unds'TypeVar'Unds'TypeVars{}(K0:SortTypeVar{},K1:SortTypeVars{}))) [overload{}(Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Types'Unds'Type'Unds'Types{}(), Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'TypeVars'Unds'TypeVar'Unds'TypeVars{}())] // overloaded production
  axiom{R} \equals{SortExps{}, R} (Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortVal{}, SortExp{}} (K0:SortVal{}),inj{SortVals{}, SortExps{}} (K1:SortVals{})), inj{SortVals{}, SortExps{}} (Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals{}(K0:SortVal{},K1:SortVals{}))) [overload{}(Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps{}(), Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals{}())] // overloaded production
  axiom{R} \equals{SortExps{}, R} (Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortName{}, SortExp{}} (K0:SortName{}),inj{SortNames{}, SortExps{}} (K1:SortNames{})), inj{SortNames{}, SortExps{}} (Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Names'Unds'Name'Unds'Names{}(K0:SortName{},K1:SortNames{}))) [overload{}(Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps{}(), Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Names'Unds'Name'Unds'Names{}())] // overloaded production
  axiom{R} \equals{SortExp{}, R} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(K0:SortConstructorName{},inj{SortVals{}, SortExps{}} (K1:SortVals{})), inj{SortVal{}, SortExp{}} (Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'ConstructorName'Unds'Vals{}(K0:SortConstructorName{},K1:SortVals{}))) [overload{}(Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(), Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'ConstructorName'Unds'Vals{}())] // overloaded production
  axiom{R} \equals{SortExp{}, R} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(inj{SortVals{}, SortExps{}} (K0:SortVals{})), inj{SortVal{}, SortExp{}} (Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Vals{}(K0:SortVals{}))) [overload{}(Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(), Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Vals{}())] // overloaded production

// rules
// rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{K}(C,B1,_Gen0)=>B1 requires C ensures #token("true","Bool") [UNIQUE_ID(2b32069ac3f589174502fa507ebc88fab7c902854c0a9baa8ab09beb551232e2), org.kframework.attributes.Location(Location(2304,8,2304,59)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        VarC:SortBool{},
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarC:SortBool{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            VarB1:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            Var'Unds'Gen0:SortK{}
          ),
          \top{R} ()
        )))),
    \equals{SortK{},R} (
      Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(X0:SortBool{},X1:SortK{},X2:SortK{}),
     \and{SortK{}} (
       VarB1:SortK{},
        \top{SortK{}}())))
  [UNIQUE'Unds'ID{}("2b32069ac3f589174502fa507ebc88fab7c902854c0a9baa8ab09beb551232e2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2304,8,2304,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{K}(C,_Gen0,B2)=>B2 requires `notBool_`(C) ensures #token("true","Bool") [UNIQUE_ID(651bff3fa53d464ac7dd7aa77e1ef6071e14c959eb6df97baa325e2ad300daaa), org.kframework.attributes.Location(Location(2305,8,2305,67)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(VarC:SortBool{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarC:SortBool{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            Var'Unds'Gen0:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            VarB2:SortK{}
          ),
          \top{R} ()
        )))),
    \equals{SortK{},R} (
      Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(X0:SortBool{},X1:SortK{},X2:SortK{}),
     \and{SortK{}} (
       VarB2:SortK{},
        \top{SortK{}}())))
  [UNIQUE'Unds'ID{}("651bff3fa53d464ac7dd7aa77e1ef6071e14c959eb6df97baa325e2ad300daaa"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2305,8,2305,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `#open(_)_K-IO_IOInt_String`(S)=>`#open(_,_)_K-IO_IOInt_String_String`(S,#token("\"r+\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7ad2779cd54b9009119458217cae5138026cc4ff244e54c28e64db21100f63d9), org.kframework.attributes.Location(Location(2479,8,2479,48)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS:SortString{}
          ),
          \top{R} ()
        )),
    \equals{SortIOInt{},R} (
      Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String{}(X0:SortString{}),
     \and{SortIOInt{}} (
       Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String{}(VarS:SortString{},\dv{SortString{}}("r+")),
        \top{SortIOInt{}}())))
  [UNIQUE'Unds'ID{}("7ad2779cd54b9009119458217cae5138026cc4ff244e54c28e64db21100f63d9"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2479,8,2479,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `#stderr_K-IO_Int`(.KList)=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(75e0a8082acda4cf1e29caa6aaafb7f9a421e16421a41f2006943d6fab17a162), org.kframework.attributes.Location(Location(2576,8,2576,20)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortInt{},R} (
      Lbl'Hash'stderr'Unds'K-IO'Unds'Int{}(),
     \and{SortInt{}} (
       \dv{SortInt{}}("2"),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("75e0a8082acda4cf1e29caa6aaafb7f9a421e16421a41f2006943d6fab17a162"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2576,8,2576,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `#stdin_K-IO_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c7ffdc9908c28a954521816d680f4e5ec44a679c7231a8dd09d4700f50b6d8c3), org.kframework.attributes.Location(Location(2574,8,2574,19)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortInt{},R} (
      Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}(),
     \and{SortInt{}} (
       \dv{SortInt{}}("0"),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("c7ffdc9908c28a954521816d680f4e5ec44a679c7231a8dd09d4700f50b6d8c3"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2574,8,2574,19)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `#stdout_K-IO_Int`(.KList)=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4ad4f379ff9db687ff9dfd1b15052edbcd3342a2ed262ecdd38c769e177a592c), org.kframework.attributes.Location(Location(2575,8,2575,20)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortInt{},R} (
      Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}(),
     \and{SortInt{}} (
       \dv{SortInt{}}("1"),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("4ad4f379ff9db687ff9dfd1b15052edbcd3342a2ed262ecdd38c769e177a592c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2575,8,2575,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`read_FUN-UNTYPED-COMMON_Exp`(.KList))~>_DotVar2) #as _Gen5,_Gen1,`<input>`(`_List_`(`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(_Gen0)))),_DotVar3)),_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(_Gen5,_Gen1,`<input>`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#parseInput(_,_)_K-IO_Stream_String_String`(#token("\"Int\"","String"),#token("\" \\n\\t\\r\"","String")))),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(_Gen0))))),_DotVar3)),_Gen2,_Gen3),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9bc9c3829b22fcf226d4946c8a80ed91c69073e553a98bd44db8fd4b155add90), org.kframework.attributes.Location(Location(215,8,216,52)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), read]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(\and{SortKCell{}}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}()),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen5:SortKCell{}),Var'Unds'Gen1:SortEnvCell{},Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(Var'Unds'Gen0:SortString{}),dotk{}())))),Var'Unds'DotVar3:SortList{})),Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen5:SortKCell{},Var'Unds'Gen1:SortEnvCell{},Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(\dv{SortString{}}("Int"),\dv{SortString{}}(" \n\t\r")))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(Var'Unds'Gen0:SortString{}),dotk{}()))))),Var'Unds'DotVar3:SortList{})),Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("9bc9c3829b22fcf226d4946c8a80ed91c69073e553a98bd44db8fd4b155add90"), group{}("read"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(215,8,216,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(_Gen1,_Gen2,_Gen3,`<output>`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(N))),`ListItem`(inj{String,KItem}(#token("\"on\"","String")))),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(S))))),_Gen0)),_Gen4),_DotVar0)=>`<generatedTop>`(`<T>`(_Gen1,_Gen2,_Gen3,`<output>`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(`project:Int`(`#write(_,_)_K-IO_K_Int_String`(N,S)~>inj{Int,KItem}(N))))),`ListItem`(inj{String,KItem}(#token("\"on\"","String")))),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(#token("\"\"","String")))))),_Gen0)),_Gen4),_DotVar0) requires `_=/=String__STRING-COMMON_Bool_String_String`(S,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(829e7a581bda9035541ca05d9bfdcdc5eaaead3bd4adcbcd0064665c87d15682), label(STDOUT-STREAM.stdoutWrite), org.kframework.attributes.Location(Location(2792,8,2798,28)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(30), stream]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen1:SortKCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortInputCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(VarN:SortInt{}))),LblListItem{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("on")))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(VarS:SortString{}),dotk{}()))))),Var'Unds'Gen0:SortList{})),Var'Unds'Gen4:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen1:SortKCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortInputCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Lblproject'Coln'Int{}(append{}(Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String{}(VarN:SortInt{},VarS:SortString{}),kseq{}(inj{SortInt{}, SortKItem{}}(VarN:SortInt{}),dotk{}())))))),LblListItem{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("on")))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("")),dotk{}()))))),Var'Unds'Gen0:SortList{})),Var'Unds'Gen4:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("829e7a581bda9035541ca05d9bfdcdc5eaaead3bd4adcbcd0064665c87d15682"), label{}("STDOUT-STREAM.stdoutWrite"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2792,8,2798,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), priority{}("30"), stream{}("")]

// rule `<generatedTop>`(`<T>`(_Gen1,_Gen2,`<input>`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#parseInput(_,_)_K-IO_Stream_String_String`(Sort,Delimiters))),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(S))))),_Gen0)),_Gen3,_Gen4),_DotVar0)=>`<generatedTop>`(`<T>`(_Gen1,_Gen2,`<input>`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#parseInput(_,_)_K-IO_Stream_String_String`(Sort,Delimiters))),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S))))))),_Gen0)),_Gen3,_Gen4),_DotVar0) requires `_andBool_`(`_andBool_`(`_=/=Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S,Delimiters,#token("0","Int")),#token("-1","Int")),`_=/=String__STRING-COMMON_Bool_String_String`(Sort,#token("\"String\"","String"))),`_<=Int_`(`lengthString(_)_STRING-COMMON_Int_String`(S),#token("1","Int"))) ensures #token("true","Bool") [UNIQUE_ID(3460632040d4a6b6996153112abdd94b045405f44caa9ced1a89d5bc3ccfc51e), label(STDIN-STREAM.stdinTrim), org.kframework.attributes.Location(Location(2711,8,2718,39)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), stream]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen1:SortKCell{},Var'Unds'Gen2:SortEnvCell{},Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(VarSort:SortString{},VarDelimiters:SortString{}))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(VarS:SortString{}),dotk{}()))))),Var'Unds'Gen0:SortList{})),Var'Unds'Gen3:SortOutputCell{},Var'Unds'Gen4:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS:SortString{},VarDelimiters:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("-1")),Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarSort:SortString{},\dv{SortString{}}("String"))),Lbl'Unds-LT-Eqls'Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("1"))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen1:SortKCell{},Var'Unds'Gen2:SortEnvCell{},Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(VarSort:SortString{},VarDelimiters:SortString{}))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}))),dotk{}()))))),Var'Unds'Gen0:SortList{})),Var'Unds'Gen3:SortOutputCell{},Var'Unds'Gen4:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("3460632040d4a6b6996153112abdd94b045405f44caa9ced1a89d5bc3ccfc51e"), label{}("STDIN-STREAM.stdinTrim"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2711,8,2718,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), stream{}("")]

// rule `<generatedTop>`(`<T>`(_Gen1,_Gen2,`<input>`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#parseInput(_,_)_K-IO_Stream_String_String`(#token("\"Int\"","String"),Delimiters))),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(S))))),_Gen0)),_Gen3,_Gen4),_DotVar0)=>`<generatedTop>`(`<T>`(_Gen1,_Gen2,`<input>`(`_List_`(`_List_`(`ListItem`(inj{Int,KItem}(`String2Int(_)_STRING-COMMON_Int_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,#token("0","Int"),`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S,Delimiters,#token("0","Int")))))),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,`_+Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S,Delimiters,#token("0","Int")),#token("1","Int")),`lengthString(_)_STRING-COMMON_Int_String`(S))))))),_Gen0)),_Gen3,_Gen4),_DotVar0) requires `_andBool_`(`_=/=Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S,Delimiters,#token("0","Int")),#token("-1","Int")),`_>Int_`(`lengthString(_)_STRING-COMMON_Int_String`(S),#token("1","Int"))) ensures #token("true","Bool") [UNIQUE_ID(276cf77a317ebbe308a0a353690291cbf2a01f9dd3f1681037f881a9106caaa0), label(STDIN-STREAM.stdinParseInt), org.kframework.attributes.Location(Location(2700,8,2707,38)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), stream]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen1:SortKCell{},Var'Unds'Gen2:SortEnvCell{},Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(\dv{SortString{}}("Int"),VarDelimiters:SortString{}))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(VarS:SortString{}),dotk{}()))))),Var'Unds'Gen0:SortList{})),Var'Unds'Gen3:SortOutputCell{},Var'Unds'Gen4:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS:SortString{},VarDelimiters:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("-1")),Lbl'Unds-GT-'Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("1"))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen1:SortKCell{},Var'Unds'Gen2:SortEnvCell{},Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortInt{}, SortKItem{}}(LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},\dv{SortInt{}}("0"),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS:SortString{},VarDelimiters:SortString{},\dv{SortInt{}}("0")))))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS:SortString{},VarDelimiters:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("1")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}))),dotk{}()))))),Var'Unds'Gen0:SortList{})),Var'Unds'Gen3:SortOutputCell{},Var'Unds'Gen4:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("276cf77a317ebbe308a0a353690291cbf2a01f9dd3f1681037f881a9106caaa0"), label{}("STDIN-STREAM.stdinParseInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2700,8,2707,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), stream{}("")]

// rule `<generatedTop>`(`<T>`(_Gen1,_Gen2,`<input>`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#parseInput(_,_)_K-IO_Stream_String_String`(#token("\"String\"","String"),Delimiters))),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(S))))),_Gen0)),_Gen3,_Gen4),_DotVar0)=>`<generatedTop>`(`<T>`(_Gen1,_Gen2,`<input>`(`_List_`(`_List_`(`ListItem`(inj{String,KItem}(S)),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(#token("\"\"","String")))))),_Gen0)),_Gen3,_Gen4),_DotVar0) requires `_=/=Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S,Delimiters,#token("0","Int")),#token("-1","Int")) ensures #token("true","Bool") [UNIQUE_ID(3ae93598c3863f4e83c9e0f431bf1e1702334accac62a68621651783a7e8247a), label(STDIN-STREAM.stdinParseString), org.kframework.attributes.Location(Location(2690,8,2695,50)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), stream]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen1:SortKCell{},Var'Unds'Gen2:SortEnvCell{},Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(\dv{SortString{}}("String"),VarDelimiters:SortString{}))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(VarS:SortString{}),dotk{}()))))),Var'Unds'Gen0:SortList{})),Var'Unds'Gen3:SortOutputCell{},Var'Unds'Gen4:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS:SortString{},VarDelimiters:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("-1")),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen1:SortKCell{},Var'Unds'Gen2:SortEnvCell{},Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortString{}, SortKItem{}}(VarS:SortString{})),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("")),dotk{}()))))),Var'Unds'Gen0:SortList{})),Var'Unds'Gen3:SortOutputCell{},Var'Unds'Gen4:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("3ae93598c3863f4e83c9e0f431bf1e1702334accac62a68621651783a7e8247a"), label{}("STDIN-STREAM.stdinParseString"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2690,8,2695,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), stream{}("")]

// rule `<generatedTop>`(`<T>`(_Gen1,_Gen2,`<input>`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#parseInput(_,_)_K-IO_Stream_String_String`(_Gen0,Delimiters))),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(S))))),`ListItem`(inj{String,KItem}(#token("\"on\"","String")))),`ListItem`(inj{Stream,KItem}(`#istream(_)_K-IO_Stream_Int`(N))))),_Gen3,_Gen4),_DotVar0)=>`<generatedTop>`(`<T>`(_Gen1,_Gen2,`<input>`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#parseInput(_,_)_K-IO_Stream_String_String`(_Gen0,Delimiters))),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(`_+String__STRING-COMMON_String_String_String`(S,`chrChar(_)_STRING-COMMON_String_Int`(`project:Int`(inj{IOInt,KItem}(`#getc(_)_K-IO_IOInt_Int`(N)))))))))),`ListItem`(inj{String,KItem}(#token("\"on\"","String")))),`ListItem`(inj{Stream,KItem}(`#istream(_)_K-IO_Stream_Int`(N))))),_Gen3,_Gen4),_DotVar0) requires `_==Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S,Delimiters,#token("0","Int")),#token("-1","Int")) ensures #token("true","Bool") [UNIQUE_ID(b30d0d76abe8106854fc25ad1443e672cd6a0c1de7a1016001a5af430b38090b), label(STDIN-STREAM.stdinGetc), org.kframework.attributes.Location(Location(2679,8,2685,49)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(200), stream]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen1:SortKCell{},Var'Unds'Gen2:SortEnvCell{},Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Var'Unds'Gen0:SortString{},VarDelimiters:SortString{}))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(VarS:SortString{}),dotk{}()))))),LblListItem{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("on")))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(VarN:SortInt{}))))),Var'Unds'Gen3:SortOutputCell{},Var'Unds'Gen4:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS:SortString{},VarDelimiters:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("-1")),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen1:SortKCell{},Var'Unds'Gen2:SortEnvCell{},Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Var'Unds'Gen0:SortString{},VarDelimiters:SortString{}))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarS:SortString{},LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(Lblproject'Coln'Int{}(kseq{}(inj{SortIOInt{}, SortKItem{}}(Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(VarN:SortInt{})),dotk{}()))))),dotk{}()))))),LblListItem{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("on")))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(VarN:SortInt{}))))),Var'Unds'Gen3:SortOutputCell{},Var'Unds'Gen4:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b30d0d76abe8106854fc25ad1443e672cd6a0c1de7a1016001a5af430b38090b"), label{}("STDIN-STREAM.stdinGetc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2679,8,2685,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), priority{}("200"), stream{}("")]

// rule `<generatedTop>`(`<T>`(_Gen3,_Gen4,_Gen5,`<output>`(`_List_`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(_Gen0))),`ListItem`(_Gen1)),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(Buffer))))),`ListItem`(inj{Float,KItem}(F))),_Gen2)),_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(_Gen3,_Gen4,_Gen5,`<output>`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(_Gen0))),`ListItem`(_Gen1)),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(`_+String__STRING-COMMON_String_String_String`(Buffer,`Float2String(_)_STRING-COMMON_String_Float`(F))))))),_Gen2)),_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(89fef51abf440e0b5fb4f7e5124420710d920e33fd02d4b5f0a2bce24cf6bb6b), label(STDOUT-STREAM.stdoutBufferFloat), org.kframework.attributes.Location(Location(2760,8,2766,17)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), priority(25), stream]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen3:SortKCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortInputCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Var'Unds'Gen0:SortInt{}))),LblListItem{}(Var'Unds'Gen1:SortKItem{})),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(VarBuffer:SortString{}),dotk{}()))))),LblListItem{}(inj{SortFloat{}, SortKItem{}}(VarF:SortFloat{}))),Var'Unds'Gen2:SortList{})),Var'Unds'Gen6:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen3:SortKCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortInputCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Var'Unds'Gen0:SortInt{}))),LblListItem{}(Var'Unds'Gen1:SortKItem{})),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarBuffer:SortString{},LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float{}(VarF:SortFloat{}))),dotk{}()))))),Var'Unds'Gen2:SortList{})),Var'Unds'Gen6:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("89fef51abf440e0b5fb4f7e5124420710d920e33fd02d4b5f0a2bce24cf6bb6b"), label{}("STDOUT-STREAM.stdoutBufferFloat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2760,8,2766,17)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priority{}("25"), stream{}("")]

// rule `<generatedTop>`(`<T>`(_Gen3,_Gen4,_Gen5,`<output>`(`_List_`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(_Gen0))),`ListItem`(_Gen1)),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(Buffer))))),`ListItem`(inj{Int,KItem}(I))),_Gen2)),_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(_Gen3,_Gen4,_Gen5,`<output>`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(_Gen0))),`ListItem`(_Gen1)),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(`_+String__STRING-COMMON_String_String_String`(Buffer,`Int2String(_)_STRING-COMMON_String_Int`(I))))))),_Gen2)),_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f1b7e635260c20311589d096311bc20689afe150d1fe517d0d5c90f2911983bb), label(STDOUT-STREAM.stdoutBufferInt), org.kframework.attributes.Location(Location(2770,8,2776,17)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), priority(25), stream]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen3:SortKCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortInputCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Var'Unds'Gen0:SortInt{}))),LblListItem{}(Var'Unds'Gen1:SortKItem{})),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(VarBuffer:SortString{}),dotk{}()))))),LblListItem{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{}))),Var'Unds'Gen2:SortList{})),Var'Unds'Gen6:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen3:SortKCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortInputCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Var'Unds'Gen0:SortInt{}))),LblListItem{}(Var'Unds'Gen1:SortKItem{})),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarBuffer:SortString{},LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(VarI:SortInt{}))),dotk{}()))))),Var'Unds'Gen2:SortList{})),Var'Unds'Gen6:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f1b7e635260c20311589d096311bc20689afe150d1fe517d0d5c90f2911983bb"), label{}("STDOUT-STREAM.stdoutBufferInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2770,8,2776,17)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priority{}("25"), stream{}("")]

// rule `<generatedTop>`(`<T>`(_Gen3,_Gen4,_Gen5,`<output>`(`_List_`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(_Gen0))),`ListItem`(_Gen1)),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(Buffer))))),`ListItem`(inj{String,KItem}(S))),_Gen2)),_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(_Gen3,_Gen4,_Gen5,`<output>`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(_Gen0))),`ListItem`(_Gen1)),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(`_+String__STRING-COMMON_String_String_String`(Buffer,S)))))),_Gen2)),_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b0fe5129bd201b152b85e90ec5a8723a84094ae3ebdfc28487c9b99c7ea3fed9), label(STDOUT-STREAM.stdoutBufferString), org.kframework.attributes.Location(Location(2780,8,2786,17)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), priority(25), stream]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen3:SortKCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortInputCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Var'Unds'Gen0:SortInt{}))),LblListItem{}(Var'Unds'Gen1:SortKItem{})),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(VarBuffer:SortString{}),dotk{}()))))),LblListItem{}(inj{SortString{}, SortKItem{}}(VarS:SortString{}))),Var'Unds'Gen2:SortList{})),Var'Unds'Gen6:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen3:SortKCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortInputCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Var'Unds'Gen0:SortInt{}))),LblListItem{}(Var'Unds'Gen1:SortKItem{})),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarBuffer:SortString{},VarS:SortString{})),dotk{}()))))),Var'Unds'Gen2:SortList{})),Var'Unds'Gen6:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b0fe5129bd201b152b85e90ec5a8723a84094ae3ebdfc28487c9b99c7ea3fed9"), label{}("STDOUT-STREAM.stdoutBufferString"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2780,8,2786,17)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priority{}("25"), stream{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(`` `bindTo(_,_)_FUN-UNTYPED_KItem_Names_Exps`(Xs,inj{Vals,Exps}(Vs)) #as _Gen7``~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{MatchResult,KItem}(`getMatchingAux(_,_)_FUN-UNTYPED_MatchResult_Exps_Vals`(inj{Names,Exps}(Xs),Vs))~>_Gen7~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b7ee378f77da1a0d5f6d27534e99e5b8648f761993ac3c1053a7d93c5f149760), org.kframework.attributes.Location(Location(237,8,237,64)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(VarXs:SortNames{},inj{SortVals{}, SortExps{}}(VarVs:SortVals{})),Var'Unds'Gen7:SortKItem{}),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMatchResult{}, SortKItem{}}(LblgetMatchingAux'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Exps'Unds'Vals{}(inj{SortNames{}, SortExps{}}(VarXs:SortNames{}),VarVs:SortVals{})),kseq{}(Var'Unds'Gen7:SortKItem{},Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b7ee378f77da1a0d5f6d27534e99e5b8648f761993ac3c1053a7d93c5f149760"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(237,8,237,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer!__FUN-UNTYPED-COMMON_Exp_Exp0_`(.KList)~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`!__FUN-UNTYPED-COMMON_Exp_Exp`(HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(13c35f96fc15a0125cb898da016904495ddc850627fa65aae3e10aeec0112b3c), arith, cool, cool-like, label(FUN-UNTYPED-COMMON.!__FUN-UNTYPED-COMMON_Exp_Exp1-cool), org.kframework.attributes.Location(Location(35,18,35,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("13c35f96fc15a0125cb898da016904495ddc850627fa65aae3e10aeec0112b3c"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON.!__FUN-UNTYPED-COMMON_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,18,35,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer-__FUN-UNTYPED-COMMON_Exp_Exp0_`(.KList)~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`-__FUN-UNTYPED-COMMON_Exp_Exp`(HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(0997347b42b91a9e66a18dc739c4f29bea86c8f590025f1c86d14fc603a59ac6), arith, cool, cool-like, label(FUN-UNTYPED-COMMON.-__FUN-UNTYPED-COMMON_Exp_Exp1-cool), org.kframework.attributes.Location(Location(27,18,27,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("0997347b42b91a9e66a18dc739c4f29bea86c8f590025f1c86d14fc603a59ac6"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON.-__FUN-UNTYPED-COMMON_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,18,27,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer@__FUN-UNTYPED-COMMON_Exp_Exp0_`(.KList)~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`@__FUN-UNTYPED-COMMON_Exp_Exp`(HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(52ac8cb2e053c56b335613d74eee19712aa2c3246a6e465afe3a7ddef79c2417), cool, cool-like, label(FUN-UNTYPED-COMMON.@__FUN-UNTYPED-COMMON_Exp_Exp1-cool), org.kframework.attributes.Location(Location(63,18,63,70)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("52ac8cb2e053c56b335613d74eee19712aa2c3246a6e465afe3a7ddef79c2417"), cool{}(), cool-like{}(), label{}("FUN-UNTYPED-COMMON.@__FUN-UNTYPED-COMMON_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(63,18,63,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exps,KItem}(HOLE) #as _Gen7``~>`#freezer[_]_FUN-UNTYPED-COMMON_Exp_Exps0_`(.KList)~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`[_]_FUN-UNTYPED-COMMON_Exp_Exps`(HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(11b3dc6b519d82fe405f27cf7aa6c08774f18e2c3ea4aea46a62d924dff7c8b1), cool, cool-like, klabel(list), label(FUN-UNTYPED-COMMON.list1-cool), org.kframework.attributes.Location(Location(39,18,39,81)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(VarHOLE:SortExps{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("11b3dc6b519d82fe405f27cf7aa6c08774f18e2c3ea4aea46a62d924dff7c8b1"), cool{}(), cool-like{}(), klabel{}("list"), label{}("FUN-UNTYPED-COMMON.list1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(39,18,39,81)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_!=__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_!=__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(9a233595faac2bdecbb514ba164442e4a9ee86c48fb177051103040623fac7e2), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._!=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool), org.kframework.attributes.Location(Location(34,18,34,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("9a233595faac2bdecbb514ba164442e4a9ee86c48fb177051103040623fac7e2"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._!=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,18,34,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_!=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_!=__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(666de11eb54ec031cc7478020d1c0eac4944420cfdc472fcfa7b816c88a7ba87), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._!=__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool), org.kframework.attributes.Location(Location(34,18,34,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("666de11eb54ec031cc7478020d1c0eac4944420cfdc472fcfa7b816c88a7ba87"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._!=__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,18,34,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_%__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_%__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(7536c4226618a5689eae7fda231f610d24e38e0624730757f19b8a75f8249dae), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._%__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool), org.kframework.attributes.Location(Location(19,18,19,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("7536c4226618a5689eae7fda231f610d24e38e0624730757f19b8a75f8249dae"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._%__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,18,19,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_%__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_%__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(d241e7d7fdb748945eb25c1a1da5fa6ce28171fa1e4bbc1101ad811f0dd690c1), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._%__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool), org.kframework.attributes.Location(Location(19,18,19,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d241e7d7fdb748945eb25c1a1da5fa6ce28171fa1e4bbc1101ad811f0dd690c1"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._%__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,18,19,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_&&__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_&&__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(0bdf23dcb14efe7a109dab35ebaa1458c0e22a1604571e0d9f59259d03ac8ae9), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._&&__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool), left, org.kframework.attributes.Location(Location(36,18,36,83)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict(1)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("0bdf23dcb14efe7a109dab35ebaa1458c0e22a1604571e0d9f59259d03ac8ae9"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._&&__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,18,36,83)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("1")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exps,KItem}(HOLE) #as _Gen7``~>`#freezer_(_)_FUN-UNTYPED-COMMON_Exp_ConstructorName_Exps1_`(inj{ConstructorName,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_(_)_FUN-UNTYPED-COMMON_Exp_ConstructorName_Exps`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(ede0fce16386493ee334f91f48fd289cb451736f04759968359bff9e84b2bbef), cool, cool-like, klabel(constructor), label(FUN-UNTYPED-COMMON.constructor2-cool), org.kframework.attributes.Location(Location(48,18,48,90)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), prefer, strict(2)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(kseq{}(inj{SortConstructorName{}, SortKItem{}}(VarK0:SortConstructorName{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(VarK0:SortConstructorName{},VarHOLE:SortExps{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("ede0fce16386493ee334f91f48fd289cb451736f04759968359bff9e84b2bbef"), cool{}(), cool-like{}(), klabel{}("constructor"), label{}("FUN-UNTYPED-COMMON.constructor2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(48,18,48,90)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), prefer{}(), strict{}("2")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_*__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_*__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(65fbba96581793f05432914dae4b8c7c53dd1174e0242235c75a59c7d42429c4), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._*__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool), org.kframework.attributes.Location(Location(17,18,17,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("65fbba96581793f05432914dae4b8c7c53dd1174e0242235c75a59c7d42429c4"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._*__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(17,18,17,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_*__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_*__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(c1d0a1889efbfcff861d0da39dadf2c2682e90a628367e924968ebf05ce8035e), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._*__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool), org.kframework.attributes.Location(Location(17,18,17,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c1d0a1889efbfcff861d0da39dadf2c2682e90a628367e924968ebf05ce8035e"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._*__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(17,18,17,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_+__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_+__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(e39abd9e07727d0459b599439ca7c0757b3bcffdf4380af3a6d0e7d1ef99e2de), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._+__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool), left, org.kframework.attributes.Location(Location(21,18,21,80)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e39abd9e07727d0459b599439ca7c0757b3bcffdf4380af3a6d0e7d1ef99e2de"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._+__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,18,21,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_+__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_+__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(7a6ee55635c83922249334d612c9747a79430be8c74e4a8bd54d8bd0ee988759), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._+__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool), left, org.kframework.attributes.Location(Location(21,18,21,80)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("7a6ee55635c83922249334d612c9747a79430be8c74e4a8bd54d8bd0ee988759"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._+__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,18,21,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_,__FUN-UNTYPED-COMMON_Exps_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exps,KItem}(`_,__FUN-UNTYPED-COMMON_Exps_Exp_Exps`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(324b7917cc467c626e105ea72b6837c049d5d0ae38d9b93199495987ee839ac9), cool, cool-like, klabel(exps), label(FUN-UNTYPED-COMMON.exps1-cool), org.kframework.attributes.Location(Location(9,20,9,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict, userList(*)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("324b7917cc467c626e105ea72b6837c049d5d0ae38d9b93199495987ee839ac9"), cool{}(), cool-like{}(), klabel{}("exps"), label{}("FUN-UNTYPED-COMMON.exps1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(9,20,9,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}(""), userList{}("*")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exps,KItem}(HOLE) #as _Gen7``~>`#freezer_,__FUN-UNTYPED-COMMON_Exps_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exps,KItem}(`_,__FUN-UNTYPED-COMMON_Exps_Exp_Exps`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(842659c4d803f4d0546e70fe9326182e8c6151090a855a33696e3c706d3b20e7), cool, cool-like, klabel(exps), label(FUN-UNTYPED-COMMON.exps2-cool), org.kframework.attributes.Location(Location(9,20,9,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict, userList(*)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("842659c4d803f4d0546e70fe9326182e8c6151090a855a33696e3c706d3b20e7"), cool{}(), cool-like{}(), klabel{}("exps"), label{}("FUN-UNTYPED-COMMON.exps2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(9,20,9,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}(""), userList{}("*")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_-__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_-__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(9fd5a6634d29f587fce0e24e181cc9ee4713a810913425b010b2afab2dd34f5c), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._-__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool), org.kframework.attributes.Location(Location(24,18,24,82)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), prefer, strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("9fd5a6634d29f587fce0e24e181cc9ee4713a810913425b010b2afab2dd34f5c"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._-__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,18,24,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), prefer{}(), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_-__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_-__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(716ff97d2a1b2d09eea2495814e5f6a865b2338c0cef752860dd90dd8fd3b213), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._-__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool), org.kframework.attributes.Location(Location(24,18,24,82)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), prefer, strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("716ff97d2a1b2d09eea2495814e5f6a865b2338c0cef752860dd90dd8fd3b213"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._-__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,18,24,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), prefer{}(), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_/__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_/__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(367b867b7ca178d2073b2c62b33076c7983f41fdc6220602ab694b602c46320a), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._/__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool), org.kframework.attributes.Location(Location(18,18,18,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("367b867b7ca178d2073b2c62b33076c7983f41fdc6220602ab694b602c46320a"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._/__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,18,18,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_/__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_/__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(d9748800cb00b9abe36a5bd10f3234592cd2acf55da9531791d2f83890e3c555), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._/__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool), org.kframework.attributes.Location(Location(18,18,18,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d9748800cb00b9abe36a5bd10f3234592cd2acf55da9531791d2f83890e3c555"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._/__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,18,18,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_:=__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_:=__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(d996578c28fd46dd10c36abb7440d1f6a8c0d7b7cfeda5d4b953d8f6ea46a224), cool, cool-like, label(FUN-UNTYPED-COMMON._:=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool), org.kframework.attributes.Location(Location(64,18,64,70)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d996578c28fd46dd10c36abb7440d1f6a8c0d7b7cfeda5d4b953d8f6ea46a224"), cool{}(), cool-like{}(), label{}("FUN-UNTYPED-COMMON._:=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(64,18,64,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_:=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_:=__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(06d5b1853834f2652433c9496466f83be26e0018e3d3b7e6ef6abc4fc749aba3), cool, cool-like, label(FUN-UNTYPED-COMMON._:=__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool), org.kframework.attributes.Location(Location(64,18,64,70)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("06d5b1853834f2652433c9496466f83be26e0018e3d3b7e6ef6abc4fc749aba3"), cool{}(), cool-like{}(), label{}("FUN-UNTYPED-COMMON._:=__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(64,18,64,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_;__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_;__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(2079554e4125a1751750e836108f091832400eb7498e455fa2c7b4f48845f426), cool, cool-like, label(FUN-UNTYPED-COMMON._;__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool), org.kframework.attributes.Location(Location(65,18,65,70)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), right, strict(1)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("2079554e4125a1751750e836108f091832400eb7498e455fa2c7b4f48845f426"), cool{}(), cool-like{}(), label{}("FUN-UNTYPED-COMMON._;__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(65,18,65,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), right{}(), strict{}("1")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_<=__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_<=__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(c0c1bffa1b61e3345adc430df03624bc37609b06264ec1e6d3bb7060d5ef56eb), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._<=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool), org.kframework.attributes.Location(Location(30,18,30,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c0c1bffa1b61e3345adc430df03624bc37609b06264ec1e6d3bb7060d5ef56eb"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._<=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(30,18,30,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_<=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_<=__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(3d7570fe34cbb191c8d4cd6cbbe826d3d99b6827bd57bc2df28e16b3fc3f4b6a), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._<=__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool), org.kframework.attributes.Location(Location(30,18,30,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("3d7570fe34cbb191c8d4cd6cbbe826d3d99b6827bd57bc2df28e16b3fc3f4b6a"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._<=__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(30,18,30,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_<__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_<__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(d74e09afedbffd327cb45562dff0b7b0590fb9c61849c54a4967ade5320c9aae), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._<__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool), org.kframework.attributes.Location(Location(29,18,29,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d74e09afedbffd327cb45562dff0b7b0590fb9c61849c54a4967ade5320c9aae"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._<__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,18,29,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_<__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_<__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(a603ae2ba19c693838f0808f25d5ceb796cda45bdd193f91070eaa679ed29ac0), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._<__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool), org.kframework.attributes.Location(Location(29,18,29,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("a603ae2ba19c693838f0808f25d5ceb796cda45bdd193f91070eaa679ed29ac0"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._<__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,18,29,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_==__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_==__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(5440d10b7559193fa905419ec2d3caf64614c9fd98032f7974d17a33f12259ff), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._==__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool), org.kframework.attributes.Location(Location(33,18,33,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("5440d10b7559193fa905419ec2d3caf64614c9fd98032f7974d17a33f12259ff"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._==__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(33,18,33,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_==__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_==__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(74fe0e4f67712d339b607d27121a1e88c828399b248f34440735b31236ddd1eb), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._==__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool), org.kframework.attributes.Location(Location(33,18,33,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("74fe0e4f67712d339b607d27121a1e88c828399b248f34440735b31236ddd1eb"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._==__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(33,18,33,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_>=__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_>=__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(22a722c832426d7ae7ec2fdaa140b4b30e876de6618f24fa2e315405dab0eb29), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._>=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool), org.kframework.attributes.Location(Location(32,18,32,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("22a722c832426d7ae7ec2fdaa140b4b30e876de6618f24fa2e315405dab0eb29"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._>=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,18,32,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_>=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_>=__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(1f556919674fe137d97d3797517d5e69860ce924fddec66048932414c960b946), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._>=__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool), org.kframework.attributes.Location(Location(32,18,32,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("1f556919674fe137d97d3797517d5e69860ce924fddec66048932414c960b946"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._>=__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,18,32,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_>__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_>__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(f800621834fb347740faf907e13c5e276301f4ed05cf7b1ef89a00d17bb56142), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._>__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool), org.kframework.attributes.Location(Location(31,18,31,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f800621834fb347740faf907e13c5e276301f4ed05cf7b1ef89a00d17bb56142"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._>__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(31,18,31,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_>__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_>__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(dbd64a782b58ce73a6b9c7211a36c45f771db91e8a6b4916e86824a80c2ba56d), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._>__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool), org.kframework.attributes.Location(Location(31,18,31,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("dbd64a782b58ce73a6b9c7211a36c45f771db91e8a6b4916e86824a80c2ba56d"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._>__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(31,18,31,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_^__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_^__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(725cd8d922fcc69c675783e66d6bdc01c3e55404d9ba57564b996986fe5efadf), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._^__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool), left, org.kframework.attributes.Location(Location(22,18,22,80)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("725cd8d922fcc69c675783e66d6bdc01c3e55404d9ba57564b996986fe5efadf"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._^__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(22,18,22,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_^__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_^__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(cfc6a2637efb8ebdb6b648a37b99a0e0e39c0dbe39759da6671c5aa83ee95cb8), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._^__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool), left, org.kframework.attributes.Location(Location(22,18,22,80)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("cfc6a2637efb8ebdb6b648a37b99a0e0e39c0dbe39759da6671c5aa83ee95cb8"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._^__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(22,18,22,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer___FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`___FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(e2ff998fd042a4fa4cb4884332a392b385c9356e7be6bf338fd945392655313b), cool, cool-like, klabel(apply), label(FUN-UNTYPED-COMMON.apply1-cool), left, org.kframework.attributes.Location(Location(51,18,51,84)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e2ff998fd042a4fa4cb4884332a392b385c9356e7be6bf338fd945392655313b"), cool{}(), cool-like{}(), klabel{}("apply"), label{}("FUN-UNTYPED-COMMON.apply1-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(51,18,51,84)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer___FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`___FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(ecf2d243fe330cdeede7ea0b3d8983362df706262877e8d1c7d05dedce04e804), cool, cool-like, klabel(apply), label(FUN-UNTYPED-COMMON.apply2-cool), left, org.kframework.attributes.Location(Location(51,18,51,84)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("ecf2d243fe330cdeede7ea0b3d8983362df706262877e8d1c7d05dedce04e804"), cool{}(), cool-like{}(), klabel{}("apply"), label{}("FUN-UNTYPED-COMMON.apply2-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(51,18,51,84)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezer_||__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_||__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(b9095097426f5a993bdeccada866523fbd8db894ef1fecb4d4d97952cda5f26c), arith, cool, cool-like, label(FUN-UNTYPED-COMMON._||__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool), left, org.kframework.attributes.Location(Location(37,18,37,83)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict(1)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b9095097426f5a993bdeccada866523fbd8db894ef1fecb4d4d97952cda5f26c"), cool{}(), cool-like{}(), group{}("arith"), label{}("FUN-UNTYPED-COMMON._||__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,18,37,83)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("1")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exps,KItem}(HOLE) #as _Gen7``~>`#freezerassignTo(_,_)_FUN-UNTYPED_KItem_Names_Exps1_`(inj{Names,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(`assignTo(_,_)_FUN-UNTYPED_KItem_Names_Exps`(K0,HOLE)~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(221cbe0cf30577db451af6ca7e873900e462fadf1ab407636fb8b608f872b7b6), cool, cool-like, klabel(assignTo), label(FUN-UNTYPED.assignTo2-cool), org.kframework.attributes.Location(Location(249,20,249,53)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict(2)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(kseq{}(inj{SortNames{}, SortKItem{}}(VarK0:SortNames{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(VarK0:SortNames{},VarHOLE:SortExps{}),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("221cbe0cf30577db451af6ca7e873900e462fadf1ab407636fb8b608f872b7b6"), cool{}(), cool-like{}(), klabel{}("assignTo"), label{}("FUN-UNTYPED.assignTo2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(249,20,249,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("2")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exps,KItem}(HOLE) #as _Gen7``~>`#freezerbindTo(_,_)_FUN-UNTYPED_KItem_Names_Exps1_`(inj{Names,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(`bindTo(_,_)_FUN-UNTYPED_KItem_Names_Exps`(K0,HOLE)~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(614ed29e252707996c64174914a5b206b0bcd66e88712c100d29553b81979ff8), cool, cool-like, klabel(bindTo), label(FUN-UNTYPED.bindTo2-cool), org.kframework.attributes.Location(Location(233,20,233,58)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict(2)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(kseq{}(inj{SortNames{}, SortKItem{}}(VarK0:SortNames{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(VarK0:SortNames{},VarHOLE:SortExps{}),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("614ed29e252707996c64174914a5b206b0bcd66e88712c100d29553b81979ff8"), cool{}(), cool-like{}(), klabel{}("bindTo"), label{}("FUN-UNTYPED.bindTo2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(233,20,233,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("2")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezerif_then_else__FUN-UNTYPED-COMMON_Exp_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1),inj{Exp,KItem}(K2))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`if_then_else__FUN-UNTYPED-COMMON_Exp_Exp_Exp_Exp`(HOLE,K1,K2))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(c8e0ba6a09b7785d3d0a4f48e7483e1dfe53125e1c923e4b5d1d3866071a88bd), cool, cool-like, label(FUN-UNTYPED-COMMON.if_then_else__FUN-UNTYPED-COMMON_Exp_Exp_Exp_Exp1-cool), org.kframework.attributes.Location(Location(38,18,38,63)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict(1)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}()),kseq{}(inj{SortExp{}, SortKItem{}}(VarK2:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{},VarK2:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c8e0ba6a09b7785d3d0a4f48e7483e1dfe53125e1c923e4b5d1d3866071a88bd"), cool{}(), cool-like{}(), label{}("FUN-UNTYPED-COMMON.if_then_else__FUN-UNTYPED-COMMON_Exp_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(38,18,38,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("1")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(HOLE) #as _Gen7``~>`#freezerprint__FUN-UNTYPED-COMMON_Exp_Exp0_`(.KList)~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`print__FUN-UNTYPED-COMMON_Exp_Exp`(HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen7)) ensures #token("true","Bool") [UNIQUE_ID(c0696317e623538a49badcc9fd50e41c88ddd3759dd97a94f9b86dbfd452d77e), cool, cool-like, label(FUN-UNTYPED-COMMON.print__FUN-UNTYPED-COMMON_Exp_Exp1-cool), org.kframework.attributes.Location(Location(103,20,103,54)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), print, strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),Var'Unds'Gen7:SortKItem{}),kseq{}(Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen7:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c0696317e623538a49badcc9fd50e41c88ddd3759dd97a94f9b86dbfd452d77e"), cool{}(), cool-like{}(), group{}("print"), label{}("FUN-UNTYPED-COMMON.print__FUN-UNTYPED-COMMON_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(103,20,103,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Val,KItem}(_Gen0) #as _Gen8``~>`setEnv(_)_FUN-UNTYPED_KItem_Map`(Rho)~>_DotVar2),`<env>`(_Gen1),_Gen2,_Gen3,_Gen4),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(_Gen8~>_DotVar2),`<env>`(Rho),_Gen2,_Gen3,_Gen4),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5093f4b7352b3e091e3b5a599da8ffb78ee8247b5b7eb4495cd26816e3ac013c), cool-like, org.kframework.attributes.Location(Location(231,8,231,69)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortVal{}, SortKItem{}}(Var'Unds'Gen0:SortVal{}),Var'Unds'Gen8:SortKItem{}),kseq{}(LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(VarRho:SortMap{}),Var'Unds'DotVar2:SortK{}))),Lbl'-LT-'env'-GT-'{}(Var'Unds'Gen1:SortMap{}),Var'Unds'Gen2:SortInputCell{},Var'Unds'Gen3:SortOutputCell{},Var'Unds'Gen4:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'Gen8:SortKItem{},Var'Unds'DotVar2:SortK{})),Lbl'-LT-'env'-GT-'{}(VarRho:SortMap{}),Var'Unds'Gen2:SortInputCell{},Var'Unds'Gen3:SortOutputCell{},Var'Unds'Gen4:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("5093f4b7352b3e091e3b5a599da8ffb78ee8247b5b7eb4495cd26816e3ac013c"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(231,8,231,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Exp,KItem}(`___FUN-UNTYPED-COMMON_Exp_Exp_Exp`(inj{Val,Exp}(`closure(_,_)_FUN-UNTYPED_Val_Map_Cases`(_Gen0,`_|__FUN-UNTYPED-COMMON_Cases_Case_Cases`(`_->__FUN-UNTYPED-COMMON_Case_Exp_Exp`(P,_Gen1),_Gen2))),inj{Val,Exp}(V))) #as _Gen10``~>_DotVar2),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{MatchResult,KItem}(`getMatching(_,_)_FUN-UNTYPED_MatchResult_Exp_Val`(P,V))~>_Gen10~>_DotVar2),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(74c33e74acdfc52faedafa97bfd12ea3d7f6e2fa2f85cf80eb315cdc255e145b), org.kframework.attributes.Location(Location(194,8,194,62)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortExp{}, SortKItem{}}(Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortVal{}, SortExp{}}(Lblclosure'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'Cases{}(Var'Unds'Gen0:SortMap{},Lbl'UndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Cases'Unds'Case'Unds'Cases{}(Lbl'Unds'-'-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Case'Unds'Exp'Unds'Exp{}(VarP:SortExp{},Var'Unds'Gen1:SortExp{}),Var'Unds'Gen2:SortCases{}))),inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'Gen10:SortKItem{}),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortInputCell{},Var'Unds'Gen5:SortOutputCell{},Var'Unds'Gen6:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMatchResult{}, SortKItem{}}(LblgetMatching'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Exp'Unds'Val{}(VarP:SortExp{},VarV:SortVal{})),kseq{}(Var'Unds'Gen10:SortKItem{},Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortInputCell{},Var'Unds'Gen5:SortOutputCell{},Var'Unds'Gen6:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("74c33e74acdfc52faedafa97bfd12ea3d7f6e2fa2f85cf80eb315cdc255e145b"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(194,8,194,62)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(`assignTo(_,_)_FUN-UNTYPED_KItem_Names_Exps`(K0,HOLE)~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezerassignTo(_,_)_FUN-UNTYPED_KItem_Names_Exps1_`(inj{Names,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(decaccf4aec88c95d6a2fc3048d67e46a8aa43db98b269abcc47d0f469f4e08f), heat, klabel(assignTo), label(FUN-UNTYPED.assignTo2-heat), org.kframework.attributes.Location(Location(249,20,249,53)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict(2)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(VarK0:SortNames{},VarHOLE:SortExps{}),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezerassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(kseq{}(inj{SortNames{}, SortKItem{}}(VarK0:SortNames{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("decaccf4aec88c95d6a2fc3048d67e46a8aa43db98b269abcc47d0f469f4e08f"), heat{}(), klabel{}("assignTo"), label{}("FUN-UNTYPED.assignTo2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(249,20,249,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("2")]

// rule `<generatedTop>`(`<T>`(`<k>`(`assignTo(_,_)_FUN-UNTYPED_KItem_Names_Exps`(`_,__FUN-UNTYPED-COMMON_Names_Name_Names`(X,Xs),inj{Vals,Exps}(`_,__FUN-UNTYPED-COMMON_Vals_Val_Vals`(V,Vs)))~>_DotVar2),`<env>`(`_Map_`(`_|->_`(inj{Name,KItem}(X),L),_DotVar3)) #as _Gen9,_Gen0,_Gen1,`<store>`(_DotVar4)),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(`assignTo(_,_)_FUN-UNTYPED_KItem_Names_Exps`(Xs,inj{Vals,Exps}(Vs))~>_DotVar2),_Gen9,_Gen0,_Gen1,`<store>`(`_Map_`(`_|->_`(L,inj{Val,KItem}(V)),_DotVar4))),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(522c3251984e16fbd9dfd009895ccfe13b858758a650ec5daae040b8a6f76671), org.kframework.attributes.Location(Location(252,8,254,46)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Names'Unds'Name'Unds'Names{}(VarX:SortName{},VarXs:SortNames{}),inj{SortVals{}, SortExps{}}(Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals{}(VarV:SortVal{},VarVs:SortVals{}))),Var'Unds'DotVar2:SortK{})),\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortName{}, SortKItem{}}(VarX:SortName{}),VarL:SortKItem{}),Var'Unds'DotVar3:SortMap{})),Var'Unds'Gen9:SortEnvCell{}),Var'Unds'Gen0:SortInputCell{},Var'Unds'Gen1:SortOutputCell{},Lbl'-LT-'store'-GT-'{}(Var'Unds'DotVar4:SortMap{})),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(VarXs:SortNames{},inj{SortVals{}, SortExps{}}(VarVs:SortVals{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen9:SortEnvCell{},Var'Unds'Gen0:SortInputCell{},Var'Unds'Gen1:SortOutputCell{},Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortVal{}, SortKItem{}}(VarV:SortVal{})),Var'Unds'DotVar4:SortMap{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("522c3251984e16fbd9dfd009895ccfe13b858758a650ec5daae040b8a6f76671"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(252,8,254,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(`assignTo(_,_)_FUN-UNTYPED_KItem_Names_Exps`(inj{Bottoms,Names}(`.List{"_,__FUN-UNTYPED-COMMON_Bottoms_Bottom_Bottoms"}_Bottoms`(.KList)),inj{Bottoms,Exps}(`.List{"_,__FUN-UNTYPED-COMMON_Bottoms_Bottom_Bottoms"}_Bottoms`(.KList)))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(16db70da2d6556db1a5e291d5c0fad92e05ae1cd494a125cfa43eee216af1765), org.kframework.attributes.Location(Location(251,8,251,47)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(inj{SortBottoms{}, SortNames{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms'QuotRBraUnds'Bottoms{}()),inj{SortBottoms{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms'QuotRBraUnds'Bottoms{}())),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar2:SortK{}),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("16db70da2d6556db1a5e291d5c0fad92e05ae1cd494a125cfa43eee216af1765"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(251,8,251,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(`bind(_)_FUN-UNTYPED_KItem_Names`(`_,__FUN-UNTYPED-COMMON_Names_Name_Names`(X,Xs))~>_DotVar2),`<env>`(Rho),_Gen0,_Gen1,_Gen2),`<generatedCounter>`(#Fresh))=>`<generatedTop>`(`<T>`(`<k>`(`bind(_)_FUN-UNTYPED_KItem_Names`(Xs)~>_DotVar2),`<env>`(`Map:update`(Rho,inj{Name,KItem}(X),inj{Int,KItem}(`freshInt(_)_INT_Int_Int`(`_+Int_`(#Fresh,#token("0","Int")))))),_Gen0,_Gen1,_Gen2),`<generatedCounter>`(`_+Int_`(#Fresh,#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e594dd839504341801d5818ae1c91d3022ceec481354489a4d933d3444e7817d), org.kframework.attributes.Location(Location(246,8,247,45)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Names'Unds'Name'Unds'Names{}(VarX:SortName{},VarXs:SortNames{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'env'-GT-'{}(VarRho:SortMap{}),Var'Unds'Gen0:SortInputCell{},Var'Unds'Gen1:SortOutputCell{},Var'Unds'Gen2:SortStoreCell{}),Lbl'-LT-'generatedCounter'-GT-'{}(Var'Hash'Fresh:SortInt{})),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(VarXs:SortNames{}),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'env'-GT-'{}(LblMap'Coln'update{}(VarRho:SortMap{},inj{SortName{}, SortKItem{}}(VarX:SortName{}),inj{SortInt{}, SortKItem{}}(LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(Lbl'UndsPlus'Int'Unds'{}(Var'Hash'Fresh:SortInt{},\dv{SortInt{}}("0")))))),Var'Unds'Gen0:SortInputCell{},Var'Unds'Gen1:SortOutputCell{},Var'Unds'Gen2:SortStoreCell{}),Lbl'-LT-'generatedCounter'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(Var'Hash'Fresh:SortInt{},\dv{SortInt{}}("1")))), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e594dd839504341801d5818ae1c91d3022ceec481354489a4d933d3444e7817d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(246,8,247,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(`bind(_)_FUN-UNTYPED_KItem_Names`(inj{Bottoms,Names}(`.List{"_,__FUN-UNTYPED-COMMON_Bottoms_Bottom_Bottoms"}_Bottoms`(.KList)))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7344bd4b48d8d2f8b158bc22801cee2e8df82c6468a1061ceb10b709643945b6), org.kframework.attributes.Location(Location(245,8,245,25)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(inj{SortBottoms{}, SortNames{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms'QuotRBraUnds'Bottoms{}())),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar2:SortK{}),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("7344bd4b48d8d2f8b158bc22801cee2e8df82c6468a1061ceb10b709643945b6"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(245,8,245,25)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(`bindMap(_)_FUN-UNTYPED_KItem_Map`(`.Map`(.KList))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8b80e8d8aee0da62c01b29a2be5badc3b3e373e2799e4512696aa90b025e0787), org.kframework.attributes.Location(Location(240,8,240,26)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Lbl'Stop'Map{}()),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar2:SortK{}),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("8b80e8d8aee0da62c01b29a2be5badc3b3e373e2799e4512696aa90b025e0787"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(240,8,240,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(`bindMap(_)_FUN-UNTYPED_KItem_Map`(`_Map_`(`_|->_`(inj{Name,KItem}(X),inj{Val,KItem}(V)),_Gen0))~>_DotVar2),`<env>`(Rho),_Gen1,_Gen2,`<store>`(_DotVar3)),`<generatedCounter>`(#Fresh))=>`<generatedTop>`(`<T>`(`<k>`(`bindMap(_)_FUN-UNTYPED_KItem_Map`(_Gen0)~>_DotVar2),`<env>`(`Map:update`(Rho,inj{Name,KItem}(X),inj{Int,KItem}(`freshInt(_)_INT_Int_Int`(`_+Int_`(#Fresh,#token("0","Int")))))),_Gen1,_Gen2,`<store>`(`_Map_`(`_|->_`(inj{Int,KItem}(`freshInt(_)_INT_Int_Int`(`_+Int_`(#Fresh,#token("0","Int")))),inj{Val,KItem}(V)),_DotVar3))),`<generatedCounter>`(`_+Int_`(#Fresh,#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b4f3ebaa2a1f324f2d62078df67d8a3fea8c01c5dd651a1c4d5ace54eaaac9cf), org.kframework.attributes.Location(Location(241,8,243,47)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortName{}, SortKItem{}}(VarX:SortName{}),inj{SortVal{}, SortKItem{}}(VarV:SortVal{})),Var'Unds'Gen0:SortMap{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'env'-GT-'{}(VarRho:SortMap{}),Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Lbl'-LT-'store'-GT-'{}(Var'Unds'DotVar3:SortMap{})),Lbl'-LT-'generatedCounter'-GT-'{}(Var'Hash'Fresh:SortInt{})),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(Var'Unds'Gen0:SortMap{}),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'env'-GT-'{}(LblMap'Coln'update{}(VarRho:SortMap{},inj{SortName{}, SortKItem{}}(VarX:SortName{}),inj{SortInt{}, SortKItem{}}(LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(Lbl'UndsPlus'Int'Unds'{}(Var'Hash'Fresh:SortInt{},\dv{SortInt{}}("0")))))),Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(Lbl'UndsPlus'Int'Unds'{}(Var'Hash'Fresh:SortInt{},\dv{SortInt{}}("0")))),inj{SortVal{}, SortKItem{}}(VarV:SortVal{})),Var'Unds'DotVar3:SortMap{}))),Lbl'-LT-'generatedCounter'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(Var'Hash'Fresh:SortInt{},\dv{SortInt{}}("1")))), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b4f3ebaa2a1f324f2d62078df67d8a3fea8c01c5dd651a1c4d5ace54eaaac9cf"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(241,8,243,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(`bindTo(_,_)_FUN-UNTYPED_KItem_Names_Exps`(K0,HOLE)~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezerbindTo(_,_)_FUN-UNTYPED_KItem_Names_Exps1_`(inj{Names,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(569e9a57f174dacd187e1eb383a0ae8c8a44a91ae2cc5a6eaee4b01c0fae3a47), heat, klabel(bindTo), label(FUN-UNTYPED.bindTo2-heat), org.kframework.attributes.Location(Location(233,20,233,58)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict(2)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(VarK0:SortNames{},VarHOLE:SortExps{}),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezerbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps1'Unds'{}(kseq{}(inj{SortNames{}, SortKItem{}}(VarK0:SortNames{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("569e9a57f174dacd187e1eb383a0ae8c8a44a91ae2cc5a6eaee4b01c0fae3a47"), heat{}(), klabel{}("bindTo"), label{}("FUN-UNTYPED.bindTo2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(233,20,233,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("2")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Name,KItem}(X)~>_DotVar2),`<env>`(`_Map_`(`_|->_`(inj{Name,KItem}(X),L),_DotVar3)) #as _Gen6,_Gen0,_Gen1,`<store>`(`_Map_`(`_|->_`(L,V),_DotVar4)) #as _Gen8),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(V~>_DotVar2),_Gen6,_Gen0,_Gen1,_Gen8),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5726661ad8bc31a96ce216e5772a9a6d2f537073cd6d79c7621a1f6699076f25), cool-like, org.kframework.attributes.Location(Location(161,8,163,38)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortName{}, SortKItem{}}(VarX:SortName{}),Var'Unds'DotVar2:SortK{})),\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortName{}, SortKItem{}}(VarX:SortName{}),VarL:SortKItem{}),Var'Unds'DotVar3:SortMap{})),Var'Unds'Gen6:SortEnvCell{}),Var'Unds'Gen0:SortInputCell{},Var'Unds'Gen1:SortOutputCell{},\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},VarV:SortKItem{}),Var'Unds'DotVar4:SortMap{})),Var'Unds'Gen8:SortStoreCell{})),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(VarV:SortKItem{},Var'Unds'DotVar2:SortK{})),Var'Unds'Gen6:SortEnvCell{},Var'Unds'Gen0:SortInputCell{},Var'Unds'Gen1:SortOutputCell{},Var'Unds'Gen8:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("5726661ad8bc31a96ce216e5772a9a6d2f537073cd6d79c7621a1f6699076f25"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(161,8,163,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`!__FUN-UNTYPED-COMMON_Exp_Exp`(HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer!__FUN-UNTYPED-COMMON_Exp_Exp0_`(.KList)~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(848b57586219dbf412568bcab030b76f4fdb311d0164b96c39f1935dc61139c6), arith, heat, label(FUN-UNTYPED-COMMON.!__FUN-UNTYPED-COMMON_Exp_Exp1-heat), org.kframework.attributes.Location(Location(35,18,35,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("848b57586219dbf412568bcab030b76f4fdb311d0164b96c39f1935dc61139c6"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON.!__FUN-UNTYPED-COMMON_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,18,35,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`!__FUN-UNTYPED-COMMON_Exp_Exp`(inj{Bool,Exp}(T)))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Bool,KItem}(`notBool_`(T))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d7b0cdbcf513e7aca1e9df214c78ddc2f17bd9c538ce7b175f293334d197a0b4), org.kframework.attributes.Location(Location(178,8,178,25)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'BangUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(inj{SortBool{}, SortExp{}}(VarT:SortBool{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(LblnotBool'Unds'{}(VarT:SortBool{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d7b0cdbcf513e7aca1e9df214c78ddc2f17bd9c538ce7b175f293334d197a0b4"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(178,8,178,25)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`&__FUN-UNTYPED-COMMON_Exp_Name`(X))~>_DotVar2),`<env>`(`_Map_`(`_|->_`(inj{Name,KItem}(X),L),_DotVar3)) #as _Gen8,_Gen0,_Gen1,_Gen2),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(L~>_DotVar2),_Gen8,_Gen0,_Gen1,_Gen2),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(aa87ccebe9e279818ef38acaf7d6546227fdd0982562502e2c3a166f937826bd), org.kframework.attributes.Location(Location(220,8,220,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Name{}(VarX:SortName{})),Var'Unds'DotVar2:SortK{})),\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortName{}, SortKItem{}}(VarX:SortName{}),VarL:SortKItem{}),Var'Unds'DotVar3:SortMap{})),Var'Unds'Gen8:SortEnvCell{}),Var'Unds'Gen0:SortInputCell{},Var'Unds'Gen1:SortOutputCell{},Var'Unds'Gen2:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(VarL:SortKItem{},Var'Unds'DotVar2:SortK{})),Var'Unds'Gen8:SortEnvCell{},Var'Unds'Gen0:SortInputCell{},Var'Unds'Gen1:SortOutputCell{},Var'Unds'Gen2:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("aa87ccebe9e279818ef38acaf7d6546227fdd0982562502e2c3a166f937826bd"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(220,8,220,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`-__FUN-UNTYPED-COMMON_Exp_Exp`(HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer-__FUN-UNTYPED-COMMON_Exp_Exp0_`(.KList)~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(833f65c7247732f8c7359b3f6fa7e5f7faba8571a889029c83ec9f140643c353), arith, heat, label(FUN-UNTYPED-COMMON.-__FUN-UNTYPED-COMMON_Exp_Exp1-heat), org.kframework.attributes.Location(Location(27,18,27,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("833f65c7247732f8c7359b3f6fa7e5f7faba8571a889029c83ec9f140643c353"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON.-__FUN-UNTYPED-COMMON_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,18,27,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`-__FUN-UNTYPED-COMMON_Exp_Exp`(inj{Int,Exp}(I)))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Int,KItem}(`_-Int_`(#token("0","Int"),I))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(048a0c6f097d0d00ff030e5ddd6123154ae58e3501b779366dcbf9122a740f92), org.kframework.attributes.Location(Location(171,8,171,23)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI:SortInt{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'Unds'-Int'Unds'{}(\dv{SortInt{}}("0"),VarI:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("048a0c6f097d0d00ff030e5ddd6123154ae58e3501b779366dcbf9122a740f92"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(171,8,171,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`@__FUN-UNTYPED-COMMON_Exp_Exp`(HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer@__FUN-UNTYPED-COMMON_Exp_Exp0_`(.KList)~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(aacd79b24011103292850d6deea8b0b70e49905e86cfdb650ecec2adb2e39dc1), heat, label(FUN-UNTYPED-COMMON.@__FUN-UNTYPED-COMMON_Exp_Exp1-heat), org.kframework.attributes.Location(Location(63,18,63,70)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("aacd79b24011103292850d6deea8b0b70e49905e86cfdb650ecec2adb2e39dc1"), heat{}(), label{}("FUN-UNTYPED-COMMON.@__FUN-UNTYPED-COMMON_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(63,18,63,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`@__FUN-UNTYPED-COMMON_Exp_Exp`(inj{Int,Exp}(L)))~>_DotVar2),_Gen0,_Gen1,_Gen2,`<store>`(`_Map_`(`_|->_`(inj{Int,KItem}(L),inj{Val,KItem}(V)),_DotVar3)) #as _Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Val,KItem}(V)~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen9),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4dedb423908c3149dd8bc3bc7137f689b2f28bc518627fa5013524ed8471a560), org.kframework.attributes.Location(Location(221,8,221,68)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'-AT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarL:SortInt{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortVal{}, SortKItem{}}(VarV:SortVal{})),Var'Unds'DotVar3:SortMap{})),Var'Unds'Gen9:SortStoreCell{})),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen9:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("4dedb423908c3149dd8bc3bc7137f689b2f28bc518627fa5013524ed8471a560"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(221,8,221,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`[_]_FUN-UNTYPED-COMMON_Exp_Exps`(HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer[_]_FUN-UNTYPED-COMMON_Exp_Exps0_`(.KList)~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(c10d06a4b76e9ff1f47fc24844fb217443eb7d75e3fe8d7e2e7c2d6e79892d7d), heat, klabel(list), label(FUN-UNTYPED-COMMON.list1-heat), org.kframework.attributes.Location(Location(39,18,39,81)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(VarHOLE:SortExps{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps0'Unds'{}(),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c10d06a4b76e9ff1f47fc24844fb217443eb7d75e3fe8d7e2e7c2d6e79892d7d"), heat{}(), klabel{}("list"), label{}("FUN-UNTYPED-COMMON.list1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(39,18,39,81)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_!=__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_!=__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(c614f2129c2c6e36d04bb183f751c60d1aadb3fb70f788708461c18def40817a), arith, heat, label(FUN-UNTYPED-COMMON._!=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat), org.kframework.attributes.Location(Location(34,18,34,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c614f2129c2c6e36d04bb183f751c60d1aadb3fb70f788708461c18def40817a"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._!=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,18,34,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_!=__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_!=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(a04b84c0196312897b31e3904fb69f896bfa81ce533f9b6195f98c24214ae3f2), arith, heat, label(FUN-UNTYPED-COMMON._!=__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat), org.kframework.attributes.Location(Location(34,18,34,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("a04b84c0196312897b31e3904fb69f896bfa81ce533f9b6195f98c24214ae3f2"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._!=__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,18,34,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_!=__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(inj{Val,Exp}(V1),inj{Val,Exp}(V2)))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Bool,KItem}(`_=/=K_`(inj{Val,KItem}(V1),inj{Val,KItem}(V2)))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dccd2287df6d3787c271891e85f1c24eefcdbc61d885d84252673d190f2e5e4f), org.kframework.attributes.Location(Location(177,8,177,38)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV1:SortVal{}),inj{SortVal{}, SortExp{}}(VarV2:SortVal{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV1:SortVal{}),dotk{}()),kseq{}(inj{SortVal{}, SortKItem{}}(VarV2:SortVal{}),dotk{}()))),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("dccd2287df6d3787c271891e85f1c24eefcdbc61d885d84252673d190f2e5e4f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(177,8,177,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_%__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_%__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(36a99258e2f3ed9ced5398f31d2696280ccf7770ad69b070e4beb84ede9bf1be), arith, heat, label(FUN-UNTYPED-COMMON._%__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat), org.kframework.attributes.Location(Location(19,18,19,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("36a99258e2f3ed9ced5398f31d2696280ccf7770ad69b070e4beb84ede9bf1be"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._%__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,18,19,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_%__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_%__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(dad69711642ae73e0c4f5ad132f19cd6deeec16ede633723ef4c22539f609317), arith, heat, label(FUN-UNTYPED-COMMON._%__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat), org.kframework.attributes.Location(Location(19,18,19,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("dad69711642ae73e0c4f5ad132f19cd6deeec16ede633723ef4c22539f609317"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._%__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,18,19,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_%__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Int,KItem}(`_%Int_`(I1,I2))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_=/=K_`(inj{Int,KItem}(I2),inj{Int,KItem}(#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(e5e6f5e304e97526ece8e3dd83e48f26a5b51db96e3084a1567ab91b1c49930b), org.kframework.attributes.Location(Location(167,8,167,44)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarI2:SortInt{}),dotk{}()),kseq{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),dotk{}())),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsPerc'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e5e6f5e304e97526ece8e3dd83e48f26a5b51db96e3084a1567ab91b1c49930b"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(167,8,167,44)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_&&__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_&&__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(572fd6c4775f9d744d3c6869255bd3b2c9591f79a289a282721a23cb03cbbe8d), arith, heat, label(FUN-UNTYPED-COMMON._&&__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat), left, org.kframework.attributes.Location(Location(36,18,36,83)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict(1)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("572fd6c4775f9d744d3c6869255bd3b2c9591f79a289a282721a23cb03cbbe8d"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._&&__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,18,36,83)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("1")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_&&__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(inj{Bool,Exp}(#token("false","Bool") #as _Gen11),_Gen0))~>_DotVar2),_Gen1,_Gen2,_Gen3,_Gen4),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Bool,KItem}(_Gen11)~>_DotVar2),_Gen1,_Gen2,_Gen3,_Gen4),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7d478831dedfb1233ad2fbf69452b1546878000a10a1e029cd6e37cc6ba29e69), org.kframework.attributes.Location(Location(180,8,180,27)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortBool{}, SortExp{}}(\and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen11:SortBool{})),Var'Unds'Gen0:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortInputCell{},Var'Unds'Gen3:SortOutputCell{},Var'Unds'Gen4:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Var'Unds'Gen11:SortBool{}),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortInputCell{},Var'Unds'Gen3:SortOutputCell{},Var'Unds'Gen4:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("7d478831dedfb1233ad2fbf69452b1546878000a10a1e029cd6e37cc6ba29e69"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(180,8,180,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_&&__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(inj{Bool,Exp}(#token("true","Bool")),E))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(E)~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(af76f0a1ecd3c43b8e9598474a0b8dd54d9a9140e591358ab8be1ddb7db978f9), org.kframework.attributes.Location(Location(179,8,179,23)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortBool{}, SortExp{}}(\dv{SortBool{}}("true")),VarE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarE:SortExp{}),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("af76f0a1ecd3c43b8e9598474a0b8dd54d9a9140e591358ab8be1ddb7db978f9"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(179,8,179,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_(_)_FUN-UNTYPED-COMMON_Exp_ConstructorName_Exps`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_(_)_FUN-UNTYPED-COMMON_Exp_ConstructorName_Exps1_`(inj{ConstructorName,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(54d8788b7b7c8a6eb4667ea707725a6dd00a13cdddcd52c9196eae839a75cbd0), heat, klabel(constructor), label(FUN-UNTYPED-COMMON.constructor2-heat), org.kframework.attributes.Location(Location(48,18,48,90)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), prefer, strict(2)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(VarK0:SortConstructorName{},VarHOLE:SortExps{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps1'Unds'{}(kseq{}(inj{SortConstructorName{}, SortKItem{}}(VarK0:SortConstructorName{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("54d8788b7b7c8a6eb4667ea707725a6dd00a13cdddcd52c9196eae839a75cbd0"), heat{}(), klabel{}("constructor"), label{}("FUN-UNTYPED-COMMON.constructor2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(48,18,48,90)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), prefer{}(), strict{}("2")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_*__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_*__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(5d5b6f2c59138c7a828ccae5cac1c57c5bd878062944b500406deec1c2880709), arith, heat, label(FUN-UNTYPED-COMMON._*__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat), org.kframework.attributes.Location(Location(17,18,17,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("5d5b6f2c59138c7a828ccae5cac1c57c5bd878062944b500406deec1c2880709"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._*__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(17,18,17,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_*__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_*__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(97c11372bf2ff87b7839ca951e704760682c7bf5b13b639debc180936140d255), arith, heat, label(FUN-UNTYPED-COMMON._*__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat), org.kframework.attributes.Location(Location(17,18,17,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("97c11372bf2ff87b7839ca951e704760682c7bf5b13b639debc180936140d255"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._*__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(17,18,17,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_*__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Int,KItem}(`_*Int_`(I1,I2))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(aaeaec2e1ff19356f9232772fd1084a706fa4e499de199ef4b5aa8af85291c8a), org.kframework.attributes.Location(Location(165,8,165,29)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsStar'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("aaeaec2e1ff19356f9232772fd1084a706fa4e499de199ef4b5aa8af85291c8a"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(165,8,165,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_+__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_+__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(1c8dcaa1f80dd40f2196fc424f9d71b44d62c22b0b115fe4210f3e8ad9d89ebb), arith, heat, label(FUN-UNTYPED-COMMON._+__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat), left, org.kframework.attributes.Location(Location(21,18,21,80)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("1c8dcaa1f80dd40f2196fc424f9d71b44d62c22b0b115fe4210f3e8ad9d89ebb"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._+__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,18,21,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_+__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_+__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(590e7fedae2263c67f8d0990257151624b0ed87572830a5ee12abf05c515bf99), arith, heat, label(FUN-UNTYPED-COMMON._+__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat), left, org.kframework.attributes.Location(Location(21,18,21,80)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("590e7fedae2263c67f8d0990257151624b0ed87572830a5ee12abf05c515bf99"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._+__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,18,21,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_+__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Int,KItem}(`_+Int_`(I1,I2))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fc12e50bd4b210a5042e679aba9ba2acd823e69d20c5a92951337fe7f417afe6), org.kframework.attributes.Location(Location(168,8,168,29)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("fc12e50bd4b210a5042e679aba9ba2acd823e69d20c5a92951337fe7f417afe6"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,8,168,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exps,KItem}(`_,__FUN-UNTYPED-COMMON_Exps_Exp_Exps`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_,__FUN-UNTYPED-COMMON_Exps_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(f4eab7433f87815f26f05152b5b8c74e0d225068661e2b2a9c65a341d065bdc2), heat, klabel(exps), label(FUN-UNTYPED-COMMON.exps1-heat), org.kframework.attributes.Location(Location(9,20,9,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict, userList(*)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f4eab7433f87815f26f05152b5b8c74e0d225068661e2b2a9c65a341d065bdc2"), heat{}(), klabel{}("exps"), label{}("FUN-UNTYPED-COMMON.exps1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(9,20,9,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}(""), userList{}("*")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exps,KItem}(`_,__FUN-UNTYPED-COMMON_Exps_Exp_Exps`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_,__FUN-UNTYPED-COMMON_Exps_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(d1f6f4b4d95e83f5f5629558a76ae58c3dabd2e16f001a36a61bf86e57d5c14f), heat, klabel(exps), label(FUN-UNTYPED-COMMON.exps2-heat), org.kframework.attributes.Location(Location(9,20,9,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict, userList(*)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d1f6f4b4d95e83f5f5629558a76ae58c3dabd2e16f001a36a61bf86e57d5c14f"), heat{}(), klabel{}("exps"), label{}("FUN-UNTYPED-COMMON.exps2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(9,20,9,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}(""), userList{}("*")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_-__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_-__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(8ab9f1df6dc6828639c5472d6471a96d736d0773c6cded766d7c58bdfc2b05aa), arith, heat, label(FUN-UNTYPED-COMMON._-__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat), org.kframework.attributes.Location(Location(24,18,24,82)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), prefer, strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("8ab9f1df6dc6828639c5472d6471a96d736d0773c6cded766d7c58bdfc2b05aa"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._-__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,18,24,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), prefer{}(), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_-__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_-__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(37c08d8896783d6c189b4a9bc397254586edd046a9fa7ad1d9b0fe912099f2ce), arith, heat, label(FUN-UNTYPED-COMMON._-__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat), org.kframework.attributes.Location(Location(24,18,24,82)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), prefer, strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("37c08d8896783d6c189b4a9bc397254586edd046a9fa7ad1d9b0fe912099f2ce"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._-__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,18,24,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), prefer{}(), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_-__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Int,KItem}(`_-Int_`(I1,I2))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(15e47458c831d00cde4124cf7e46a6b5eebfc954b9d1c80e1f480f14da8f3b22), org.kframework.attributes.Location(Location(170,8,170,29)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("15e47458c831d00cde4124cf7e46a6b5eebfc954b9d1c80e1f480f14da8f3b22"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(170,8,170,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_/__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_/__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(bbf06a9ed4a60c9b28b6ce614041ced3d62bfd3b838185ed2e86c7fa57ed6f9d), arith, heat, label(FUN-UNTYPED-COMMON._/__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat), org.kframework.attributes.Location(Location(18,18,18,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("bbf06a9ed4a60c9b28b6ce614041ced3d62bfd3b838185ed2e86c7fa57ed6f9d"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._/__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,18,18,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_/__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_/__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(71cb5757d93e478331827e04f0d83b241d801f4c22860ff0150c92d9839eeb42), arith, heat, label(FUN-UNTYPED-COMMON._/__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat), org.kframework.attributes.Location(Location(18,18,18,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("71cb5757d93e478331827e04f0d83b241d801f4c22860ff0150c92d9839eeb42"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._/__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,18,18,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_/__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Int,KItem}(`_/Int_`(I1,I2))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_=/=K_`(inj{Int,KItem}(I2),inj{Int,KItem}(#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(d70c636018b703fc8125cda605829e5452f006b7a9329d976a0abaa38f5f432d), org.kframework.attributes.Location(Location(166,8,166,44)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarI2:SortInt{}),dotk{}()),kseq{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),dotk{}())),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsSlsh'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d70c636018b703fc8125cda605829e5452f006b7a9329d976a0abaa38f5f432d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(166,8,166,44)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_:=__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_:=__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(824a6753aa4b5b6f4721a85555caa3192a3448a25497f741d3b1b560ab650655), heat, label(FUN-UNTYPED-COMMON._:=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat), org.kframework.attributes.Location(Location(64,18,64,70)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("824a6753aa4b5b6f4721a85555caa3192a3448a25497f741d3b1b560ab650655"), heat{}(), label{}("FUN-UNTYPED-COMMON._:=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(64,18,64,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_:=__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_:=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(4c8833cb9b8e23eed1c3d0828e0d41d57faec350f90368057974fd3dce180585), heat, label(FUN-UNTYPED-COMMON._:=__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat), org.kframework.attributes.Location(Location(64,18,64,70)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("4c8833cb9b8e23eed1c3d0828e0d41d57faec350f90368057974fd3dce180585"), heat{}(), label{}("FUN-UNTYPED-COMMON._:=__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(64,18,64,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_:=__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(inj{Int,Exp}(L),inj{Val,Exp}(V)))~>_DotVar2),_Gen1,_Gen2,_Gen3,`<store>`(`_Map_`(`_|->_`(inj{Int,KItem}(L),_Gen0),_DotVar3))),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Val,KItem}(V)~>_DotVar2),_Gen1,_Gen2,_Gen3,`<store>`(`_Map_`(`_|->_`(inj{Int,KItem}(L),inj{Val,KItem}(V)),_DotVar3))),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4a6d61856a2341a6c4dbaeec9ce342dbc9a4ed5dd5fb9cce0c2853131168db40), org.kframework.attributes.Location(Location(222,8,222,76)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsColnEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarL:SortInt{}),inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortInputCell{},Var'Unds'Gen3:SortOutputCell{},Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),Var'Unds'Gen0:SortKItem{}),Var'Unds'DotVar3:SortMap{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortInputCell{},Var'Unds'Gen3:SortOutputCell{},Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortVal{}, SortKItem{}}(VarV:SortVal{})),Var'Unds'DotVar3:SortMap{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("4a6d61856a2341a6c4dbaeec9ce342dbc9a4ed5dd5fb9cce0c2853131168db40"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(222,8,222,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_;__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_;__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(473a8bb644363d95d7b0b059937d3781b4b704053954399439c83c2b959af639), heat, label(FUN-UNTYPED-COMMON._;__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat), org.kframework.attributes.Location(Location(65,18,65,70)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), right, strict(1)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("473a8bb644363d95d7b0b059937d3781b4b704053954399439c83c2b959af639"), heat{}(), label{}("FUN-UNTYPED-COMMON._;__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(65,18,65,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), right{}(), strict{}("1")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_;__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(inj{Val,Exp}(_V),E))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(E)~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f9a4594b036a9ccc2865a77708de759160d9a7a66f977776f09329c0e3643cb7), org.kframework.attributes.Location(Location(223,8,223,22)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSClnUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortVal{}, SortExp{}}(Var'Unds'V:SortVal{}),VarE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarE:SortExp{}),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f9a4594b036a9ccc2865a77708de759160d9a7a66f977776f09329c0e3643cb7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(223,8,223,22)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_<=__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<=__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(b86d5e7dfa2e3dd8338ccc95ac5de2b6842fec38b76dbe3da38bf76e346f85ac), arith, heat, label(FUN-UNTYPED-COMMON._<=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat), org.kframework.attributes.Location(Location(30,18,30,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b86d5e7dfa2e3dd8338ccc95ac5de2b6842fec38b76dbe3da38bf76e346f85ac"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._<=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(30,18,30,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_<=__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(932f1fef964f2d2a75075dab9461183ca595d92d32e59192904bcede577431d9), arith, heat, label(FUN-UNTYPED-COMMON._<=__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat), org.kframework.attributes.Location(Location(30,18,30,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("932f1fef964f2d2a75075dab9461183ca595d92d32e59192904bcede577431d9"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._<=__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(30,18,30,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_<=__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Bool,KItem}(`_<=Int_`(I1,I2))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6f00ea7dbd066b27389e251d9f9d5f42a3f65529a379ea7d80195e438f30c353), org.kframework.attributes.Location(Location(173,8,173,31)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("6f00ea7dbd066b27389e251d9f9d5f42a3f65529a379ea7d80195e438f30c353"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(173,8,173,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_<__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(db0764122a89a80eee7f2f2a6df6b28180612e86ebd61de6aa76129adeb9ed50), arith, heat, label(FUN-UNTYPED-COMMON._<__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat), org.kframework.attributes.Location(Location(29,18,29,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("db0764122a89a80eee7f2f2a6df6b28180612e86ebd61de6aa76129adeb9ed50"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._<__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,18,29,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_<__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(2f94907419e674d085e818f7c1040b73bce1cc958f6c05831395179a6482acf4), arith, heat, label(FUN-UNTYPED-COMMON._<__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat), org.kframework.attributes.Location(Location(29,18,29,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("2f94907419e674d085e818f7c1040b73bce1cc958f6c05831395179a6482acf4"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._<__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,18,29,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_<__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Bool,KItem}(`_<Int_`(I1,I2))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2db6bbf568e197449f9500c47cba70222e3dcdabf9fc96e1c216bc196c74a970), org.kframework.attributes.Location(Location(172,8,172,29)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-LT-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("2db6bbf568e197449f9500c47cba70222e3dcdabf9fc96e1c216bc196c74a970"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(172,8,172,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_==__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_==__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(6348197ffd259cdbc1e24e50251ac6fda98c3a481f59d6bdf97e6408b0aabc55), arith, heat, label(FUN-UNTYPED-COMMON._==__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat), org.kframework.attributes.Location(Location(33,18,33,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("6348197ffd259cdbc1e24e50251ac6fda98c3a481f59d6bdf97e6408b0aabc55"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._==__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(33,18,33,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_==__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_==__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(b60b3f1b40db85e33f63ff6a01e50a1f38b188fb5c6da2cba9c77e1ac0b3df19), arith, heat, label(FUN-UNTYPED-COMMON._==__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat), org.kframework.attributes.Location(Location(33,18,33,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b60b3f1b40db85e33f63ff6a01e50a1f38b188fb5c6da2cba9c77e1ac0b3df19"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._==__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(33,18,33,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_==__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(inj{Val,Exp}(V1),inj{Val,Exp}(V2)))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Bool,KItem}(`_==K_`(inj{Val,KItem}(V1),inj{Val,KItem}(V2)))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(86a4d29f1ec12e7ef41a5497444ad254546fc30cacce8e71ebea54174dfb0df8), org.kframework.attributes.Location(Location(176,8,176,37)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV1:SortVal{}),inj{SortVal{}, SortExp{}}(VarV2:SortVal{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV1:SortVal{}),dotk{}()),kseq{}(inj{SortVal{}, SortKItem{}}(VarV2:SortVal{}),dotk{}()))),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("86a4d29f1ec12e7ef41a5497444ad254546fc30cacce8e71ebea54174dfb0df8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(176,8,176,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_>=__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>=__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(e9e8cd469c41922e785b8d17267f75ac7189ed883cce05c54d601f0eaf0174f1), arith, heat, label(FUN-UNTYPED-COMMON._>=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat), org.kframework.attributes.Location(Location(32,18,32,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e9e8cd469c41922e785b8d17267f75ac7189ed883cce05c54d601f0eaf0174f1"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._>=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,18,32,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_>=__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>=__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(67904a49b298d70355adf6b1bcdc24940ce632b71f3d3c1a59663cb7c28b4d0e), arith, heat, label(FUN-UNTYPED-COMMON._>=__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat), org.kframework.attributes.Location(Location(32,18,32,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("67904a49b298d70355adf6b1bcdc24940ce632b71f3d3c1a59663cb7c28b4d0e"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._>=__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,18,32,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_>=__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Bool,KItem}(`_>=Int_`(I1,I2))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d5e6d03e4ecdae3d4c4cbd7a42370b4fe7a19581d8a0efc2a5952db1f9cd4dbc), org.kframework.attributes.Location(Location(175,8,175,31)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d5e6d03e4ecdae3d4c4cbd7a42370b4fe7a19581d8a0efc2a5952db1f9cd4dbc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(175,8,175,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_>__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(c23f3912376e079f760f0da91e999a2210f64cb10de30b68022614ce37b294ab), arith, heat, label(FUN-UNTYPED-COMMON._>__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat), org.kframework.attributes.Location(Location(31,18,31,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c23f3912376e079f760f0da91e999a2210f64cb10de30b68022614ce37b294ab"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._>__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(31,18,31,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_>__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(43ec7a3b65bb0d0ad6be7508ef26db313745bb06cf501a6f5716902e03b69c8c), arith, heat, label(FUN-UNTYPED-COMMON._>__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat), org.kframework.attributes.Location(Location(31,18,31,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("43ec7a3b65bb0d0ad6be7508ef26db313745bb06cf501a6f5716902e03b69c8c"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._>__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(31,18,31,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_>__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Bool,KItem}(`_>Int_`(I1,I2))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(863096a9514639a9a58b216680102e7373f24bea81be5e0b8c9fe1167cc422f1), org.kframework.attributes.Location(Location(174,8,174,29)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-GT-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("863096a9514639a9a58b216680102e7373f24bea81be5e0b8c9fe1167cc422f1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(174,8,174,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_^__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_^__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(7f0293de8db687fe9079d9a475f1d3b96f37f4a4e5f2bf14261ba886b25436dd), arith, heat, label(FUN-UNTYPED-COMMON._^__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat), left, org.kframework.attributes.Location(Location(22,18,22,80)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("7f0293de8db687fe9079d9a475f1d3b96f37f4a4e5f2bf14261ba886b25436dd"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._^__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(22,18,22,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_^__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_^__FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(c001728e20b4e2e94c7fe4e511b3137d27a55e110f612d3fb8a0f65ed92f86ab), arith, heat, label(FUN-UNTYPED-COMMON._^__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat), left, org.kframework.attributes.Location(Location(22,18,22,80)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c001728e20b4e2e94c7fe4e511b3137d27a55e110f612d3fb8a0f65ed92f86ab"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._^__FUN-UNTYPED-COMMON_Exp_Exp_Exp2-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(22,18,22,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_^__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(inj{String,Exp}(S1),inj{String,Exp}(S2)))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{String,KItem}(`_+String__STRING-COMMON_String_String_String`(S1,S2))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(21597a226ef63071f8f00f726f4d920d46ca7b7c10de6e2be3dabbec1553b650), org.kframework.attributes.Location(Location(169,8,169,32)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsXor-UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortString{}, SortExp{}}(VarS1:SortString{}),inj{SortString{}, SortExp{}}(VarS2:SortString{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortString{}, SortKItem{}}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("21597a226ef63071f8f00f726f4d920d46ca7b7c10de6e2be3dabbec1553b650"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(169,8,169,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`___FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer___FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(e9c51339eaf9ea6c888243ee1ea0017a455c39a69a10d6c7dc79235beacfb635), heat, klabel(apply), label(FUN-UNTYPED-COMMON.apply1-heat), left, org.kframework.attributes.Location(Location(51,18,51,84)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e9c51339eaf9ea6c888243ee1ea0017a455c39a69a10d6c7dc79235beacfb635"), heat{}(), klabel{}("apply"), label{}("FUN-UNTYPED-COMMON.apply1-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(51,18,51,84)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`___FUN-UNTYPED-COMMON_Exp_Exp_Exp`(K0,HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer___FUN-UNTYPED-COMMON_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(8bddc617f79270536140117eccc8f7d80cb30106c951cee2a53d2b7d412fa9f5), heat, klabel(apply), label(FUN-UNTYPED-COMMON.apply2-heat), left, org.kframework.attributes.Location(Location(51,18,51,84)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("8bddc617f79270536140117eccc8f7d80cb30106c951cee2a53d2b7d412fa9f5"), heat{}(), klabel{}("apply"), label{}("FUN-UNTYPED-COMMON.apply2-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(51,18,51,84)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`___FUN-UNTYPED-COMMON_Exp_Exp_Exp`(inj{Val,Exp}(`___FUN-UNTYPED-COMMON_Val_Cons_Val`(`cons_FUN-UNTYPED-COMMON_Cons`(.KList),V)),inj{Val,Exp}(`[_]_FUN-UNTYPED-COMMON_Val_Vals`(Vs))))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Val,KItem}(`[_]_FUN-UNTYPED-COMMON_Val_Vals`(`_,__FUN-UNTYPED-COMMON_Vals_Val_Vals`(V,Vs)))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d6f45dcdd9f7504752f7be199a472f698dac3f11e47e5ae0a328d1cca4bd315a), org.kframework.attributes.Location(Location(187,8,187,38)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortVal{}, SortExp{}}(Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Cons'Unds'Val{}(Lblcons'Unds'FUN-UNTYPED-COMMON'Unds'Cons{}(),VarV:SortVal{})),inj{SortVal{}, SortExp{}}(Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Vals{}(VarVs:SortVals{})))),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Vals{}(Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals{}(VarV:SortVal{},VarVs:SortVals{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d6f45dcdd9f7504752f7be199a472f698dac3f11e47e5ae0a328d1cca4bd315a"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(187,8,187,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`___FUN-UNTYPED-COMMON_Exp_Exp_Exp`(inj{Val,Exp}(`callcc_FUN-UNTYPED-COMMON_Val`(.KList)),inj{Val,Exp}(V) #as _Gen10))~>K),`<env>`(Rho) #as _Gen11,_Gen0,_Gen1,_Gen2),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`___FUN-UNTYPED-COMMON_Exp_Exp_Exp`(_Gen10,inj{Val,Exp}(`cc(_,_)_FUN-UNTYPED_Val_Map_K`(Rho,K))))~>K),_Gen11,_Gen0,_Gen1,_Gen2),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9426669756afc44c3cfcb326a7dd9127e902d74afa114b87486ff7cea96b3c6d), org.kframework.attributes.Location(Location(226,8,226,69)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortVal{}, SortExp{}}(Lblcallcc'Unds'FUN-UNTYPED-COMMON'Unds'Val{}()),\and{SortExp{}}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}),Var'Unds'Gen10:SortExp{}))),VarK:SortK{})),\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(VarRho:SortMap{}),Var'Unds'Gen11:SortEnvCell{}),Var'Unds'Gen0:SortInputCell{},Var'Unds'Gen1:SortOutputCell{},Var'Unds'Gen2:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(Var'Unds'Gen10:SortExp{},inj{SortVal{}, SortExp{}}(Lblcc'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'K{}(VarRho:SortMap{},VarK:SortK{})))),VarK:SortK{})),Var'Unds'Gen11:SortEnvCell{},Var'Unds'Gen0:SortInputCell{},Var'Unds'Gen1:SortOutputCell{},Var'Unds'Gen2:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("9426669756afc44c3cfcb326a7dd9127e902d74afa114b87486ff7cea96b3c6d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(226,8,226,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`___FUN-UNTYPED-COMMON_Exp_Exp_Exp`(inj{Val,Exp}(`cc(_,_)_FUN-UNTYPED_Val_Map_K`(Rho,K)),inj{Val,Exp}(V)))~>_Gen0),`<env>`(_Gen1),_Gen2,_Gen3,_Gen4),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Val,KItem}(V)~>K),`<env>`(Rho),_Gen2,_Gen3,_Gen4),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(17cc055abd1c7364dbcc57bfe5e2f5cdc7cb0d8578d3e7169b88751a9e9b5451), org.kframework.attributes.Location(Location(227,8,227,70)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortVal{}, SortExp{}}(Lblcc'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'K{}(VarRho:SortMap{},VarK:SortK{})),inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'Gen0:SortK{})),Lbl'-LT-'env'-GT-'{}(Var'Unds'Gen1:SortMap{}),Var'Unds'Gen2:SortInputCell{},Var'Unds'Gen3:SortOutputCell{},Var'Unds'Gen4:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),VarK:SortK{})),Lbl'-LT-'env'-GT-'{}(VarRho:SortMap{}),Var'Unds'Gen2:SortInputCell{},Var'Unds'Gen3:SortOutputCell{},Var'Unds'Gen4:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("17cc055abd1c7364dbcc57bfe5e2f5cdc7cb0d8578d3e7169b88751a9e9b5451"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(227,8,227,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_||__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(HOLE,K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_||__FUN-UNTYPED-COMMON_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(76b33c2fa0a0d76c73478b836d4b8e5db0f35e30dbc3568d1812743af5a8f2c3), arith, heat, label(FUN-UNTYPED-COMMON._||__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat), left, org.kframework.attributes.Location(Location(37,18,37,83)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict(1)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("76b33c2fa0a0d76c73478b836d4b8e5db0f35e30dbc3568d1812743af5a8f2c3"), group{}("arith"), heat{}(), label{}("FUN-UNTYPED-COMMON._||__FUN-UNTYPED-COMMON_Exp_Exp_Exp1-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,18,37,83)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("1")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_||__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(inj{Bool,Exp}(#token("false","Bool")),E))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(E)~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1db245447c0b2d7356ca4c3aeea43bf00e431b6415781cc0a75f7603a443acd8), org.kframework.attributes.Location(Location(182,8,182,23)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortBool{}, SortExp{}}(\dv{SortBool{}}("false")),VarE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarE:SortExp{}),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("1db245447c0b2d7356ca4c3aeea43bf00e431b6415781cc0a75f7603a443acd8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(182,8,182,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`_||__FUN-UNTYPED-COMMON_Exp_Exp_Exp`(inj{Bool,Exp}(#token("true","Bool")),_Gen0))~>_DotVar2),_Gen1,_Gen2,_Gen3,_Gen4),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Bool,KItem}(#token("true","Bool"))~>_DotVar2),_Gen1,_Gen2,_Gen3,_Gen4),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8eb35084ecc3aa75cb3bf299e422b7988f17ad89f34622257a318612b5ea95df), org.kframework.attributes.Location(Location(181,8,181,26)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortBool{}, SortExp{}}(\dv{SortBool{}}("true")),Var'Unds'Gen0:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortInputCell{},Var'Unds'Gen3:SortOutputCell{},Var'Unds'Gen4:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(\dv{SortBool{}}("true")),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortInputCell{},Var'Unds'Gen3:SortOutputCell{},Var'Unds'Gen4:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("8eb35084ecc3aa75cb3bf299e422b7988f17ad89f34622257a318612b5ea95df"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(181,8,181,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`fun__FUN-UNTYPED-COMMON_Exp_Cases`(Cases))~>_DotVar2),`<env>`(Rho) #as _Gen8,_Gen0,_Gen1,_Gen2),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Val,KItem}(`closure(_,_)_FUN-UNTYPED_Val_Map_Cases`(Rho,Cases))~>_DotVar2),_Gen8,_Gen0,_Gen1,_Gen2),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0cc1932784bc3bd42582b7d43fd61044b63c4062d132298088cee5329f34f89d), org.kframework.attributes.Location(Location(192,8,192,69)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(VarCases:SortCases{})),Var'Unds'DotVar2:SortK{})),\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(VarRho:SortMap{}),Var'Unds'Gen8:SortEnvCell{}),Var'Unds'Gen0:SortInputCell{},Var'Unds'Gen1:SortOutputCell{},Var'Unds'Gen2:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lblclosure'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'Cases{}(VarRho:SortMap{},VarCases:SortCases{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen8:SortEnvCell{},Var'Unds'Gen0:SortInputCell{},Var'Unds'Gen1:SortOutputCell{},Var'Unds'Gen2:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("0cc1932784bc3bd42582b7d43fd61044b63c4062d132298088cee5329f34f89d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(192,8,192,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`if_then_else__FUN-UNTYPED-COMMON_Exp_Exp_Exp_Exp`(HOLE,K1,K2))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerif_then_else__FUN-UNTYPED-COMMON_Exp_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1),inj{Exp,KItem}(K2))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(fa75d133715c4a30863e325ab76c6c852b56032ce936c4cb81b756ff9154c5df), heat, label(FUN-UNTYPED-COMMON.if_then_else__FUN-UNTYPED-COMMON_Exp_Exp_Exp_Exp1-heat), org.kframework.attributes.Location(Location(38,18,38,63)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), strict(1)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{},VarK2:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}()),kseq{}(inj{SortExp{}, SortKItem{}}(VarK2:SortExp{}),dotk{}())),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("fa75d133715c4a30863e325ab76c6c852b56032ce936c4cb81b756ff9154c5df"), heat{}(), label{}("FUN-UNTYPED-COMMON.if_then_else__FUN-UNTYPED-COMMON_Exp_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(38,18,38,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("1")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`if_then_else__FUN-UNTYPED-COMMON_Exp_Exp_Exp_Exp`(inj{Bool,Exp}(#token("false","Bool")),_Gen0,E))~>_DotVar2),_Gen1,_Gen2,_Gen3,_Gen4),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(E)~>_DotVar2),_Gen1,_Gen2,_Gen3,_Gen4),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5176de71a735e211977357c111a4e3656ee51e9b44b2de5d773f24f1c8bbd111), org.kframework.attributes.Location(Location(185,8,185,35)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortBool{}, SortExp{}}(\dv{SortBool{}}("false")),Var'Unds'Gen0:SortExp{},VarE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortInputCell{},Var'Unds'Gen3:SortOutputCell{},Var'Unds'Gen4:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarE:SortExp{}),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortInputCell{},Var'Unds'Gen3:SortOutputCell{},Var'Unds'Gen4:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("5176de71a735e211977357c111a4e3656ee51e9b44b2de5d773f24f1c8bbd111"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(185,8,185,35)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`if_then_else__FUN-UNTYPED-COMMON_Exp_Exp_Exp_Exp`(inj{Bool,Exp}(#token("true","Bool")),E,_Gen0))~>_DotVar2),_Gen1,_Gen2,_Gen3,_Gen4),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(E)~>_DotVar2),_Gen1,_Gen2,_Gen3,_Gen4),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1513d5d48e6ea259238c57476722144173b7c1dcf41b413a81103a0a25d45914), org.kframework.attributes.Location(Location(184,8,184,35)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblif'Unds'then'Unds'else'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortBool{}, SortExp{}}(\dv{SortBool{}}("true")),VarE:SortExp{},Var'Unds'Gen0:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortInputCell{},Var'Unds'Gen3:SortOutputCell{},Var'Unds'Gen4:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarE:SortExp{}),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortInputCell{},Var'Unds'Gen3:SortOutputCell{},Var'Unds'Gen4:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("1513d5d48e6ea259238c57476722144173b7c1dcf41b413a81103a0a25d45914"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(184,8,184,35)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`let_in__FUN-UNTYPED-COMMON_Exp_Bindings_Exp`(Bs,E))~>_DotVar2),`<env>`(Rho) #as _Gen8,_Gen0,_Gen1,_Gen2),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(`bindTo(_,_)_FUN-UNTYPED_KItem_Names_Exps`(`names(_)_FUN-UNTYPED_Names_Bindings`(Bs),`exps(_)_FUN-UNTYPED_Exps_Bindings`(Bs))~>inj{Exp,KItem}(E)~>`setEnv(_)_FUN-UNTYPED_KItem_Map`(Rho)~>_DotVar2),_Gen8,_Gen0,_Gen1,_Gen2),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3e89ffe2df46daba9ea16b4fcdefdb773b8301b03dac30bd4e819d04901bf570), org.kframework.attributes.Location(Location(204,8,206,24)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllet'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(VarBs:SortBindings{},VarE:SortExp{})),Var'Unds'DotVar2:SortK{})),\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(VarRho:SortMap{}),Var'Unds'Gen8:SortEnvCell{}),Var'Unds'Gen0:SortInputCell{},Var'Unds'Gen1:SortOutputCell{},Var'Unds'Gen2:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Lblnames'LParUndsRParUnds'FUN-UNTYPED'Unds'Names'Unds'Bindings{}(VarBs:SortBindings{}),Lblexps'LParUndsRParUnds'FUN-UNTYPED'Unds'Exps'Unds'Bindings{}(VarBs:SortBindings{})),kseq{}(inj{SortExp{}, SortKItem{}}(VarE:SortExp{}),kseq{}(LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(VarRho:SortMap{}),Var'Unds'DotVar2:SortK{})))),Var'Unds'Gen8:SortEnvCell{},Var'Unds'Gen0:SortInputCell{},Var'Unds'Gen1:SortOutputCell{},Var'Unds'Gen2:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("3e89ffe2df46daba9ea16b4fcdefdb773b8301b03dac30bd4e819d04901bf570"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(204,8,206,24)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`letrec_in__FUN-UNTYPED-COMMON_Exp_Bindings_Exp`(Bs,E))~>_DotVar2),`<env>`(Rho) #as _Gen8,_Gen0,_Gen1,_Gen2),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(`bind(_)_FUN-UNTYPED_KItem_Names`(`names(_)_FUN-UNTYPED_Names_Bindings`(Bs))~>`assignTo(_,_)_FUN-UNTYPED_KItem_Names_Exps`(`names(_)_FUN-UNTYPED_Names_Bindings`(Bs),`exps(_)_FUN-UNTYPED_Exps_Bindings`(Bs))~>inj{Exp,KItem}(E)~>`setEnv(_)_FUN-UNTYPED_KItem_Map`(Rho)~>_DotVar2),_Gen8,_Gen0,_Gen1,_Gen2),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4b5739469bef080d0786568c9be4b0e9b4f1417ea6bd22b81dfbc3a573f87f1c), org.kframework.attributes.Location(Location(208,8,210,24)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblletrec'Unds'in'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Bindings'Unds'Exp{}(VarBs:SortBindings{},VarE:SortExp{})),Var'Unds'DotVar2:SortK{})),\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(VarRho:SortMap{}),Var'Unds'Gen8:SortEnvCell{}),Var'Unds'Gen0:SortInputCell{},Var'Unds'Gen1:SortOutputCell{},Var'Unds'Gen2:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lblbind'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names{}(Lblnames'LParUndsRParUnds'FUN-UNTYPED'Unds'Names'Unds'Bindings{}(VarBs:SortBindings{})),kseq{}(LblassignTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Lblnames'LParUndsRParUnds'FUN-UNTYPED'Unds'Names'Unds'Bindings{}(VarBs:SortBindings{}),Lblexps'LParUndsRParUnds'FUN-UNTYPED'Unds'Exps'Unds'Bindings{}(VarBs:SortBindings{})),kseq{}(inj{SortExp{}, SortKItem{}}(VarE:SortExp{}),kseq{}(LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(VarRho:SortMap{}),Var'Unds'DotVar2:SortK{}))))),Var'Unds'Gen8:SortEnvCell{},Var'Unds'Gen0:SortInputCell{},Var'Unds'Gen1:SortOutputCell{},Var'Unds'Gen2:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("4b5739469bef080d0786568c9be4b0e9b4f1417ea6bd22b81dfbc3a573f87f1c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(208,8,210,24)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{MatchResult,KItem}(`matchFailure_FUN-UNTYPED_MatchResult`(.KList))~>inj{Exp,KItem}(`___FUN-UNTYPED-COMMON_Exp_Exp_Exp`(inj{Val,Exp}(`closure(_,_)_FUN-UNTYPED_Val_Map_Cases`(_Gen0,`_|__FUN-UNTYPED-COMMON_Cases_Case_Cases`(`_->__FUN-UNTYPED-COMMON_Case_Exp_Exp`(_Gen1,_Gen2),Cs))),_Gen3))~>_DotVar2),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`___FUN-UNTYPED-COMMON_Exp_Exp_Exp`(inj{Val,Exp}(`closure(_,_)_FUN-UNTYPED_Val_Map_Cases`(_Gen0,Cs)),_Gen3))~>_DotVar2),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d9970f753627791a43c83e6cecc7c1fbfe38bb9d81af736eb8827598f8e961e7), org.kframework.attributes.Location(Location(198,8,198,68)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMatchResult{}, SortKItem{}}(LblmatchFailure'Unds'FUN-UNTYPED'Unds'MatchResult{}()),kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortVal{}, SortExp{}}(Lblclosure'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'Cases{}(Var'Unds'Gen0:SortMap{},Lbl'UndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Cases'Unds'Case'Unds'Cases{}(Lbl'Unds'-'-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Case'Unds'Exp'Unds'Exp{}(Var'Unds'Gen1:SortExp{},Var'Unds'Gen2:SortExp{}),VarCs:SortCases{}))),Var'Unds'Gen3:SortExp{})),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortInputCell{},Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortVal{}, SortExp{}}(Lblclosure'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'Cases{}(Var'Unds'Gen0:SortMap{},VarCs:SortCases{})),Var'Unds'Gen3:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortInputCell{},Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d9970f753627791a43c83e6cecc7c1fbfe38bb9d81af736eb8827598f8e961e7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(198,8,198,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{MatchResult,KItem}(`matchResult(_)_FUN-UNTYPED_MatchResult_Map`(M))~>`bindTo(_,_)_FUN-UNTYPED_KItem_Names_Exps`(_Gen0,inj{Vals,Exps}(_Gen1))~>_DotVar2),_Gen2,_Gen3,_Gen4,_Gen5),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(`bindMap(_)_FUN-UNTYPED_KItem_Map`(M)~>_DotVar2),_Gen2,_Gen3,_Gen4,_Gen5),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5c3267e949b7722f3ba989990ef303aeba84955081f7b2b776a4f179de076c32), org.kframework.attributes.Location(Location(238,8,238,67)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMatchResult{}, SortKItem{}}(LblmatchResult'LParUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Map{}(VarM:SortMap{})),kseq{}(LblbindTo'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Names'Unds'Exps{}(Var'Unds'Gen0:SortNames{},inj{SortVals{}, SortExps{}}(Var'Unds'Gen1:SortVals{})),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortInputCell{},Var'Unds'Gen4:SortOutputCell{},Var'Unds'Gen5:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(VarM:SortMap{}),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortInputCell{},Var'Unds'Gen4:SortOutputCell{},Var'Unds'Gen5:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("5c3267e949b7722f3ba989990ef303aeba84955081f7b2b776a4f179de076c32"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(238,8,238,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{MatchResult,KItem}(`matchResult(_)_FUN-UNTYPED_MatchResult_Map`(M))~>inj{Exp,KItem}(`___FUN-UNTYPED-COMMON_Exp_Exp_Exp`(inj{Val,Exp}(`closure(_,_)_FUN-UNTYPED_Val_Map_Cases`(Rho,`_|__FUN-UNTYPED-COMMON_Cases_Case_Cases`(`_->__FUN-UNTYPED-COMMON_Case_Exp_Exp`(_Gen0,E),_Gen1))),_Gen2))~>_DotVar2),`<env>`(Rho'),_Gen3,_Gen4,_Gen5),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(`bindMap(_)_FUN-UNTYPED_KItem_Map`(M)~>inj{Exp,KItem}(E)~>`setEnv(_)_FUN-UNTYPED_KItem_Map`(Rho')~>_DotVar2),`<env>`(Rho),_Gen3,_Gen4,_Gen5),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(32b0766937dc1f1e0fac92a95d46133bc469a20a25eb0f389080dc7c58d9c85c), org.kframework.attributes.Location(Location(195,8,197,32)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMatchResult{}, SortKItem{}}(LblmatchResult'LParUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Map{}(VarM:SortMap{})),kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortVal{}, SortExp{}}(Lblclosure'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'Val'Unds'Map'Unds'Cases{}(VarRho:SortMap{},Lbl'UndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Cases'Unds'Case'Unds'Cases{}(Lbl'Unds'-'-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Case'Unds'Exp'Unds'Exp{}(Var'Unds'Gen0:SortExp{},VarE:SortExp{}),Var'Unds'Gen1:SortCases{}))),Var'Unds'Gen2:SortExp{})),Var'Unds'DotVar2:SortK{}))),Lbl'-LT-'env'-GT-'{}(VarRho'Apos':SortMap{}),Var'Unds'Gen3:SortInputCell{},Var'Unds'Gen4:SortOutputCell{},Var'Unds'Gen5:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblbindMap'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(VarM:SortMap{}),kseq{}(inj{SortExp{}, SortKItem{}}(VarE:SortExp{}),kseq{}(LblsetEnv'LParUndsRParUnds'FUN-UNTYPED'Unds'KItem'Unds'Map{}(VarRho'Apos':SortMap{}),Var'Unds'DotVar2:SortK{})))),Lbl'-LT-'env'-GT-'{}(VarRho:SortMap{}),Var'Unds'Gen3:SortInputCell{},Var'Unds'Gen4:SortOutputCell{},Var'Unds'Gen5:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("32b0766937dc1f1e0fac92a95d46133bc469a20a25eb0f389080dc7c58d9c85c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(195,8,197,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`print__FUN-UNTYPED-COMMON_Exp_Exp`(HOLE))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerprint__FUN-UNTYPED-COMMON_Exp_Exp0_`(.KList)~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(a022230eeb8203a0dc290737d8fc86fad51dc23b0ce05727c2dbb6d354de2ec9), heat, label(FUN-UNTYPED-COMMON.print__FUN-UNTYPED-COMMON_Exp_Exp1-heat), org.kframework.attributes.Location(Location(103,20,103,54)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), print, strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Var'Unds'Gen2:SortOutputCell{},Var'Unds'Gen3:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("a022230eeb8203a0dc290737d8fc86fad51dc23b0ce05727c2dbb6d354de2ec9"), group{}("print"), heat{}(), label{}("FUN-UNTYPED-COMMON.print__FUN-UNTYPED-COMMON_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(103,20,103,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`print__FUN-UNTYPED-COMMON_Exp_Exp`(inj{Val,Exp}(V)))~>_DotVar2),_Gen0,_Gen1,`<output>`(_DotVar3),_Gen2),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Val,KItem}(V)~>_DotVar2),_Gen0,_Gen1,`<output>`(`_List_`(_DotVar3,`ListItem`(inj{Val,KItem}(V)))),_Gen2),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(50938554197a943fc258f53a5214731bfd652ea2db552207696d05324d1859e8), org.kframework.attributes.Location(Location(212,8,213,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), print]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblprint'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Lbl'-LT-'output'-GT-'{}(Var'Unds'DotVar3:SortList{}),Var'Unds'Gen2:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortInputCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Var'Unds'DotVar3:SortList{},LblListItem{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{})))),Var'Unds'Gen2:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("50938554197a943fc258f53a5214731bfd652ea2db552207696d05324d1859e8"), group{}("print"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(212,8,213,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Exp,KItem}(`read_FUN-UNTYPED-COMMON_Exp`(.KList))~>_DotVar2),_Gen0,`<input>`(`_List_`(`ListItem`(inj{Int,KItem}(I)),_DotVar3)),_Gen1,_Gen2),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Int,KItem}(I)~>_DotVar2),_Gen0,`<input>`(_DotVar3),_Gen1,_Gen2),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(310dfeaacfb33df250932d6727b15dd72eff64105825e49b8541204f8f5d3114), org.kframework.attributes.Location(Location(215,8,216,52)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), read]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblread'Unds'FUN-UNTYPED-COMMON'Unds'Exp{}()),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{})),Var'Unds'DotVar3:SortList{})),Var'Unds'Gen1:SortOutputCell{},Var'Unds'Gen2:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{}),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortEnvCell{},Lbl'-LT-'input'-GT-'{}(Var'Unds'DotVar3:SortList{}),Var'Unds'Gen1:SortOutputCell{},Var'Unds'Gen2:SortStoreCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("310dfeaacfb33df250932d6727b15dd72eff64105825e49b8541204f8f5d3114"), group{}("read"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(215,8,216,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `Bool2String(_)_STRING-COMMON_String_Bool`(#token("false","Bool"))=>#token("\"false\"","String") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cca4780e4e7660055f781b9643f3125234a0f4f08ba76cacf8e5a18fe7fc999f), org.kframework.attributes.Location(Location(1764,8,1764,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(X0:SortBool{}),
     \and{SortString{}} (
       \dv{SortString{}}("false"),
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("cca4780e4e7660055f781b9643f3125234a0f4f08ba76cacf8e5a18fe7fc999f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1764,8,1764,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `Bool2String(_)_STRING-COMMON_String_Bool`(#token("true","Bool"))=>#token("\"true\"","String") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(365df37345a5a44ac061f8741369c7bd74a49f0f6e7b716be0374806dd1add3d), org.kframework.attributes.Location(Location(1763,8,1763,36)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(X0:SortBool{}),
     \and{SortString{}} (
       \dv{SortString{}}("true"),
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("365df37345a5a44ac061f8741369c7bd74a49f0f6e7b716be0374806dd1add3d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1763,8,1763,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `String2Bool(_)_STRING-COMMON_Bool_String`(#token("\"false\"","String"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b73b5c8e0ae45020f2b9b8170d366691fee01a63763b79653a2075703ec4e835), org.kframework.attributes.Location(Location(1770,8,1770,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            \dv{SortString{}}("false")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String{}(X0:SortString{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b73b5c8e0ae45020f2b9b8170d366691fee01a63763b79653a2075703ec4e835"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1770,8,1770,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `String2Bool(_)_STRING-COMMON_Bool_String`(#token("\"true\"","String"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(27a5d1d7872d61f82556a4e44bda13846dde7dc2d9c54304d7858de9a8b9d6b8), org.kframework.attributes.Location(Location(1769,8,1769,36)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            \dv{SortString{}}("true")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String{}(X0:SortString{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("27a5d1d7872d61f82556a4e44bda13846dde7dc2d9c54304d7858de9a8b9d6b8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1769,8,1769,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `[_|_]_FUN-UNTYPED-COMMON_Exp_Exps_Exp`(`_,__FUN-UNTYPED-COMMON_Exps_Exp_Exps`(E1,`_,__FUN-UNTYPED-COMMON_Exps_Exp_Exps`(E2,Es) #as _Gen1),T)=>`[_|_]_FUN-UNTYPED-COMMON_Exp_Exps_Exp`(`_,__FUN-UNTYPED-COMMON_Exps_Exp_Exps`(E1,inj{Vals,Exps}(`.List{"_,__FUN-UNTYPED-COMMON_Vals_Val_Vals"}_Vals`(.KList))),`[_|_]_FUN-UNTYPED-COMMON_Exp_Exps_Exp`(_Gen1,T)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eaaa0e30fdd81585a06511149548dacc077dfdc8fece8ed634cb4abf41c9bb95), anywhere, org.kframework.attributes.Location(Location(116,8,116,43)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortExps{}, R} (
            X0:SortExps{},
            Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps{}(VarE1:SortExp{},\and{SortExps{}}(Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps{}(VarE2:SortExp{},VarEs:SortExps{}),Var'Unds'Gen1:SortExps{}))
          ),\and{R} (
          \in{SortExp{}, R} (
            X1:SortExp{},
            VarT:SortExp{}
          ),
          \top{R} ()
        ))),
    \equals{SortExp{},R} (
      Lbl'LSqBUndsPipeUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps'Unds'Exp{}(X0:SortExps{},X1:SortExp{}),
     \and{SortExp{}} (
       Lbl'LSqBUndsPipeUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps'Unds'Exp{}(Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps{}(VarE1:SortExp{},inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())),Lbl'LSqBUndsPipeUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps'Unds'Exp{}(Var'Unds'Gen1:SortExps{},VarT:SortExp{})),
        \top{SortExp{}}())))
  [UNIQUE'Unds'ID{}("eaaa0e30fdd81585a06511149548dacc077dfdc8fece8ed634cb4abf41c9bb95"), anywhere{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(116,8,116,43)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_->__FUN-UNTYPED-COMMON_Case_Exp_Exp`(`___FUN-UNTYPED-COMMON_Exp_Exp_Exp`(P1,P2),E)=>`_->__FUN-UNTYPED-COMMON_Case_Exp_Exp`(P1,`fun__FUN-UNTYPED-COMMON_Exp_Cases`(`_|__FUN-UNTYPED-COMMON_Cases_Case_Cases`(`_->__FUN-UNTYPED-COMMON_Case_Exp_Exp`(P2,E),`.List{"_|__FUN-UNTYPED-COMMON_Cases_Case_Cases"}_Cases`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(364bdd05087d57fb78967d4a11f1802303a96b8264b73ee8e59df379ac0bcd19), anywhere, org.kframework.attributes.Location(Location(118,8,118,39)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortExp{}, R} (
            X0:SortExp{},
            Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarP1:SortExp{},VarP2:SortExp{})
          ),\and{R} (
          \in{SortExp{}, R} (
            X1:SortExp{},
            VarE:SortExp{}
          ),
          \top{R} ()
        ))),
    \equals{SortCase{},R} (
      Lbl'Unds'-'-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Case'Unds'Exp'Unds'Exp{}(X0:SortExp{},X1:SortExp{}),
     \and{SortCase{}} (
       Lbl'Unds'-'-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Case'Unds'Exp'Unds'Exp{}(VarP1:SortExp{},Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Lbl'UndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Cases'Unds'Case'Unds'Cases{}(Lbl'Unds'-'-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Case'Unds'Exp'Unds'Exp{}(VarP2:SortExp{},VarE:SortExp{}),Lbl'Stop'List'LBraQuotUndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Cases'Unds'Case'Unds'Cases'QuotRBraUnds'Cases{}()))),
        \top{SortCase{}}())))
  [UNIQUE'Unds'ID{}("364bdd05087d57fb78967d4a11f1802303a96b8264b73ee8e59df379ac0bcd19"), anywhere{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(118,8,118,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_<=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING-COMMON_Bool_String_String`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9e50fb4dcba1212ee863c170298cb8b555f39fb3b4bcb649f3d1d8e321accc80), org.kframework.attributes.Location(Location(1863,8,1863,63)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9e50fb4dcba1212ee863c170298cb8b555f39fb3b4bcb649f3d1d8e321accc80"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1863,8,1863,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_=/=Bool_`(B1,B2)=>`notBool_`(`_==Bool_`(B1,B2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(31fe72efcfddcd8588a11d9d10c1b1a9f96ae3da46b647d4cb9d1e8b1bd1654f), org.kframework.attributes.Location(Location(1150,8,1150,57)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB1:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB2:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Bool'Unds'{}(VarB1:SortBool{},VarB2:SortBool{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("31fe72efcfddcd8588a11d9d10c1b1a9f96ae3da46b647d4cb9d1e8b1bd1654f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1150,8,1150,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_=/=Int_`(I1,I2)=>`notBool_`(`_==Int_`(I1,I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4de6e05b11cdbed7ef5cb4c952127924661af4744c1e495370e1c8a962ba7be3), org.kframework.attributes.Location(Location(1429,8,1429,53)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'Int'Unds'{}(X0:SortInt{},X1:SortInt{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("4de6e05b11cdbed7ef5cb4c952127924661af4744c1e495370e1c8a962ba7be3"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1429,8,1429,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_=/=K_`(K1,K2)=>`notBool_`(`_==K_`(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bccaba7335e4cd77501a0667f2f7b3eb4a2105d5f60d804915dd4b1b08902c0c), org.kframework.attributes.Location(Location(2302,8,2302,45)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK1:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            VarK2:SortK{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'K'Unds'{}(X0:SortK{},X1:SortK{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("bccaba7335e4cd77501a0667f2f7b3eb4a2105d5f60d804915dd4b1b08902c0c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2302,8,2302,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_=/=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_==String__STRING-COMMON_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f390a9b650f3de0e3a93773a46e65aae3decdeb2a10906058f204f031681c9b7), org.kframework.attributes.Location(Location(1843,8,1843,65)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f390a9b650f3de0e3a93773a46e65aae3decdeb2a10906058f204f031681c9b7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1843,8,1843,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_=__FUN-UNTYPED-COMMON_Binding_Exp_Exp`(`___FUN-UNTYPED-COMMON_Exp_Exp_Exp`(F,P),E)=>`_=__FUN-UNTYPED-COMMON_Binding_Exp_Exp`(F,`fun__FUN-UNTYPED-COMMON_Exp_Cases`(`_|__FUN-UNTYPED-COMMON_Cases_Case_Cases`(`_->__FUN-UNTYPED-COMMON_Case_Exp_Exp`(P,E),`.List{"_|__FUN-UNTYPED-COMMON_Cases_Case_Cases"}_Cases`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(36333e3290aa07ebe7adce3aaeabf754e6f9a97164037479926bcd53b4826d0b), anywhere, org.kframework.attributes.Location(Location(119,8,119,33)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortExp{}, R} (
            X0:SortExp{},
            Lbl'UndsUndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exp'Unds'Exp{}(VarF:SortExp{},VarP:SortExp{})
          ),\and{R} (
          \in{SortExp{}, R} (
            X1:SortExp{},
            VarE:SortExp{}
          ),
          \top{R} ()
        ))),
    \equals{SortBinding{},R} (
      Lbl'UndsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Binding'Unds'Exp'Unds'Exp{}(X0:SortExp{},X1:SortExp{}),
     \and{SortBinding{}} (
       Lbl'UndsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Binding'Unds'Exp'Unds'Exp{}(VarF:SortExp{},Lblfun'UndsUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Cases{}(Lbl'UndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Cases'Unds'Case'Unds'Cases{}(Lbl'Unds'-'-GT-UndsUnds'FUN-UNTYPED-COMMON'Unds'Case'Unds'Exp'Unds'Exp{}(VarP:SortExp{},VarE:SortExp{}),Lbl'Stop'List'LBraQuotUndsPipeUndsUnds'FUN-UNTYPED-COMMON'Unds'Cases'Unds'Case'Unds'Cases'QuotRBraUnds'Cases{}()))),
        \top{SortBinding{}}())))
  [UNIQUE'Unds'ID{}("36333e3290aa07ebe7adce3aaeabf754e6f9a97164037479926bcd53b4826d0b"), anywhere{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(119,8,119,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_>=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING-COMMON_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b376ffb0925555ed27696d73fc8fe43306e2005e4cf6ad819e860958992f9f17), org.kframework.attributes.Location(Location(1865,8,1865,63)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b376ffb0925555ed27696d73fc8fe43306e2005e4cf6ad819e860958992f9f17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1865,8,1865,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_>String__STRING-COMMON_Bool_String_String`(S1,S2)=>`_<String__STRING-COMMON_Bool_String_String`(S2,S1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8e5353c0a58491f8613ad7a35d0833206c342df0c91773e42485e52f4dad0cd0), org.kframework.attributes.Location(Location(1864,8,1864,52)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{}),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("8e5353c0a58491f8613ad7a35d0833206c342df0c91773e42485e52f4dad0cd0"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1864,8,1864,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_andBool_`(#token("false","Bool") #as _Gen1,_Gen0)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(61fbef33b3611f1cc2aaf3b5e8ddec4a0f434c557278c38461c65c8722743497), org.kframework.attributes.Location(Location(1123,8,1123,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("61fbef33b3611f1cc2aaf3b5e8ddec4a0f434c557278c38461c65c8722743497"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1123,8,1123,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_andBool_`(B,#token("true","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e8d4ca75a690151f99f8904b068db555782f5599b11230a9d0b97a71afb6fc98), org.kframework.attributes.Location(Location(1122,8,1122,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("e8d4ca75a690151f99f8904b068db555782f5599b11230a9d0b97a71afb6fc98"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1122,8,1122,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_andBool_`(_Gen0,#token("false","Bool") #as _Gen1)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9c183fae7de06f560180386d14d29c609cadf0c98266ce2adbecb50100a1daca), org.kframework.attributes.Location(Location(1124,8,1124,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9c183fae7de06f560180386d14d29c609cadf0c98266ce2adbecb50100a1daca"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1124,8,1124,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_andBool_`(#token("true","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b9db8dba12010819161cc42dadccd0adf0100a47c21f884ae66c0a3d5483a1f), org.kframework.attributes.Location(Location(1121,8,1121,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5b9db8dba12010819161cc42dadccd0adf0100a47c21f884ae66c0a3d5483a1f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1121,8,1121,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_andThenBool_`(#token("false","Bool") #as _Gen1,_Gen0)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b729746be7bf2183d9eff138d97078a7c9489def6d8b2e1495c41ce3954997d), org.kframework.attributes.Location(Location(1128,8,1128,36)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5b729746be7bf2183d9eff138d97078a7c9489def6d8b2e1495c41ce3954997d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1128,8,1128,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_andThenBool_`(K,#token("true","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(82ac30b094be9b12206773d87b60274e929a41ca595f4674be1d37eeff873d7c), org.kframework.attributes.Location(Location(1127,8,1127,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarK:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("82ac30b094be9b12206773d87b60274e929a41ca595f4674be1d37eeff873d7c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1127,8,1127,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_andThenBool_`(_Gen0,#token("false","Bool") #as _Gen1)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0508592878b546cbc6eeda6ec7b322584eea5c6d6eea3f72be8418fe4f7149b2), org.kframework.attributes.Location(Location(1129,8,1129,36)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0508592878b546cbc6eeda6ec7b322584eea5c6d6eea3f72be8418fe4f7149b2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1129,8,1129,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_andThenBool_`(#token("true","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(78a3191cbbdec57b0f411f41291076c8124bb0d9b6b57905674b2c6858d78689), org.kframework.attributes.Location(Location(1126,8,1126,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarK:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("78a3191cbbdec57b0f411f41291076c8124bb0d9b6b57905674b2c6858d78689"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1126,8,1126,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_divInt_`(I1,I2)=>`_/Int_`(`_-Int_`(I1,`_modInt_`(I1,I2)),I2) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(83dcf9bc8c69f131715bc7a92d06c99b9a2b5f4c4fdafb69e6fdb2f1822712d4), org.kframework.attributes.Location(Location(1418,8,1419,23)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      Lbl'Unds'divInt'Unds'{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       Lbl'UndsSlsh'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),VarI2:SortInt{}),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("83dcf9bc8c69f131715bc7a92d06c99b9a2b5f4c4fdafb69e6fdb2f1822712d4"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1418,8,1419,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `_dividesInt__INT-COMMON_Bool_Int_Int`(I1,I2)=>`_==Int_`(`_%Int_`(I2,I1),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fd8facae0061fe5bc5c406f7ad2ed5d8d21960bf1118c9b240451253064dadb5), org.kframework.attributes.Location(Location(1430,8,1430,58)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortBool{}} (
       Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},VarI1:SortInt{}),\dv{SortInt{}}("0")),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("fd8facae0061fe5bc5c406f7ad2ed5d8d21960bf1118c9b240451253064dadb5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1430,8,1430,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_impliesBool_`(B,#token("false","Bool"))=>`notBool_`(B) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(022c562a21d72cedfb795607d2249b8ad14b66399b720b3b2f4a05a1da08df96), org.kframework.attributes.Location(Location(1148,8,1148,45)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(VarB:SortBool{}),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("022c562a21d72cedfb795607d2249b8ad14b66399b720b3b2f4a05a1da08df96"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1148,8,1148,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_impliesBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(99ba64afc26a739953df142ccd4b486bba68107fce8c9aa356d40afa7a988712), org.kframework.attributes.Location(Location(1147,8,1147,39)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("99ba64afc26a739953df142ccd4b486bba68107fce8c9aa356d40afa7a988712"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1147,8,1147,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_impliesBool_`(#token("false","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(55bb5c83c9563c712537b95401c0a5c88255fd7cdbd18b2d4358c54aee80660e), org.kframework.attributes.Location(Location(1146,8,1146,40)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("55bb5c83c9563c712537b95401c0a5c88255fd7cdbd18b2d4358c54aee80660e"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1146,8,1146,40)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_impliesBool_`(#token("true","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(da818c43c21c5fb2cced7e02a74b6b4191d323de2967a671b961ad28550f3c7d), org.kframework.attributes.Location(Location(1145,8,1145,36)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("da818c43c21c5fb2cced7e02a74b6b4191d323de2967a671b961ad28550f3c7d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1145,8,1145,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_modInt_`(I1,I2)=>`_%Int_`(`_+Int_`(`_%Int_`(I1,`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(adfacb58b0678a49f66186954229939a953c9849d5b08edc8f887c0d7514b2c6), concrete, org.kframework.attributes.Location(Location(1421,5,1424,23)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \equals{SortInt{},R} (
      Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
     \and{SortInt{}} (
       Lbl'UndsPerc'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI1:SortInt{},LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("adfacb58b0678a49f66186954229939a953c9849d5b08edc8f887c0d7514b2c6"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1421,5,1424,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), simplification{}()]

// rule `_orBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d7245713da157cf997438091f92bb78eb51a6cefa568bb0d30560ce08d647f26), org.kframework.attributes.Location(Location(1138,8,1138,32)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("d7245713da157cf997438091f92bb78eb51a6cefa568bb0d30560ce08d647f26"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1138,8,1138,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_orBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(47860d52c18a441b229449cd89d5464256137dc32deb5551effbac0482c883f3), org.kframework.attributes.Location(Location(1136,8,1136,34)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("47860d52c18a441b229449cd89d5464256137dc32deb5551effbac0482c883f3"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1136,8,1136,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_orBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(991a3290bc7b6dca75d676a72a848ec6b2bd2827fb0e9626252aa1507394ca1b), org.kframework.attributes.Location(Location(1137,8,1137,32)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("991a3290bc7b6dca75d676a72a848ec6b2bd2827fb0e9626252aa1507394ca1b"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1137,8,1137,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_orBool_`(#token("true","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(71744528cdad83bc729990d3af3b544d27b09630b2615ca707dd2fc6ec93e7c2), org.kframework.attributes.Location(Location(1135,8,1135,34)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("71744528cdad83bc729990d3af3b544d27b09630b2615ca707dd2fc6ec93e7c2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1135,8,1135,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_orElseBool_`(K,#token("false","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(684b0444a1f711d49ff1502423a3346fb26958697423db488b05d25081fc0480), org.kframework.attributes.Location(Location(1143,8,1143,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarK:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("684b0444a1f711d49ff1502423a3346fb26958697423db488b05d25081fc0480"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1143,8,1143,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_orElseBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c9eccff94ecf6e810c600d4536bf1701485c13c3456c6b98c0cdab0fe7c5af14), org.kframework.attributes.Location(Location(1141,8,1141,33)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("c9eccff94ecf6e810c600d4536bf1701485c13c3456c6b98c0cdab0fe7c5af14"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1141,8,1141,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_orElseBool_`(#token("false","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eb8c85dac19a5951f694b65269c2b17c80d6d126d6a367958e4a5d736a880ecf), org.kframework.attributes.Location(Location(1142,8,1142,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarK:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("eb8c85dac19a5951f694b65269c2b17c80d6d126d6a367958e4a5d736a880ecf"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1142,8,1142,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_orElseBool_`(#token("true","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(354bd0860c7f38b59e285c935fd2ea553ebddbabb4973342ad25f0dac6ea7bf6), org.kframework.attributes.Location(Location(1140,8,1140,33)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("354bd0860c7f38b59e285c935fd2ea553ebddbabb4973342ad25f0dac6ea7bf6"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1140,8,1140,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_xorBool_`(B,B)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a6d91cd75cd777b0d4db536b3e4b20578e74fe650e644b55294da95fd2dba7f), org.kframework.attributes.Location(Location(1133,8,1133,38)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9a6d91cd75cd777b0d4db536b3e4b20578e74fe650e644b55294da95fd2dba7f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1133,8,1133,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_xorBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7a2851f9d4ea4bd3f35070ee029fc3bdca36e361f7ee54addeff9d10ddeb7c75), org.kframework.attributes.Location(Location(1132,8,1132,38)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("7a2851f9d4ea4bd3f35070ee029fc3bdca36e361f7ee54addeff9d10ddeb7c75"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1132,8,1132,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_xorBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(73513655c09a595907ab9d26d67e27f01d14a3435743b77000c02d10f35c05bf), org.kframework.attributes.Location(Location(1131,8,1131,38)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("73513655c09a595907ab9d26d67e27f01d14a3435743b77000c02d10f35c05bf"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1131,8,1131,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_|Set__SET_Set_Set_Set`(S1,S2)=>`_Set_`(S1,`Set:difference`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e9a710d8d1ca5c799420161879cbbff926de45a5bddd820d646f51d43eb67e62), concrete, org.kframework.attributes.Location(Location(749,8,749,45)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortSet{}, R} (
            X0:SortSet{},
            VarS1:SortSet{}
          ),\and{R} (
          \in{SortSet{}, R} (
            X1:SortSet{},
            VarS2:SortSet{}
          ),
          \top{R} ()
        ))),
    \equals{SortSet{},R} (
      Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(X0:SortSet{},X1:SortSet{}),
     \and{SortSet{}} (
       Lbl'Unds'Set'Unds'{}(VarS1:SortSet{},LblSet'Coln'difference{}(VarS2:SortSet{},VarS1:SortSet{})),
        \top{SortSet{}}())))
  [UNIQUE'Unds'ID{}("e9a710d8d1ca5c799420161879cbbff926de45a5bddd820d646f51d43eb67e62"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(749,8,749,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_modInt_`(`_>>Int_`(I,IDX),`_<<Int_`(#token("1","Int"),LEN)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(147fc15c2ec6c36de1a9c0cad6212b8acd8b224f21c0aeabd36726e9c8a06119), org.kframework.attributes.Location(Location(1414,8,1414,85)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarLEN:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{},X2:SortInt{}),
     \and{SortInt{}} (
       Lbl'Unds'modInt'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarI:SortInt{},VarIDX:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{})),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("147fc15c2ec6c36de1a9c0cad6212b8acd8b224f21c0aeabd36726e9c8a06119"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1414,8,1414,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToCount)=>`_+Int_`(#token("1","Int"),`countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToCount)),`lengthString(_)_STRING-COMMON_Int_String`(Source)),ToCount)) requires `_>=Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(628cff029a6d79e4c99999c0309f91ab8cb12f0ba549bb3faa850f96304c970e), org.kframework.attributes.Location(Location(1874,8,1875,60)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToCount:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortInt{}} (
       Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("1"),LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToCount:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{})),VarToCount:SortString{})),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("628cff029a6d79e4c99999c0309f91ab8cb12f0ba549bb3faa850f96304c970e"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1874,8,1875,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToCount)=>#token("0","Int") requires `_<Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(1c726cd81629c2e5f411539a7f9b4d297e8600e5d71a5d235d287e3001f3ec84), org.kframework.attributes.Location(Location(1872,8,1873,59)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToCount:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortInt{}} (
       \dv{SortInt{}}("0"),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("1c726cd81629c2e5f411539a7f9b4d297e8600e5d71a5d235d287e3001f3ec84"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1872,8,1873,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `exps(_)_FUN-UNTYPED_Exps_Bindings`(`.List{"_and__FUN-UNTYPED-COMMON_Bindings_Binding_Bindings"}_Bindings`(.KList))=>inj{Bottoms,Exps}(`.List{"_,__FUN-UNTYPED-COMMON_Bottoms_Bottom_Bottoms"}_Bottoms`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b42e5777abbecde33374111432e419a4d71a86ded7723e1dd65495568b49877d), org.kframework.attributes.Location(Location(261,8,261,32)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBindings{}, R} (
            X0:SortBindings{},
            Lbl'Stop'List'LBraQuotUnds'and'UndsUnds'FUN-UNTYPED-COMMON'Unds'Bindings'Unds'Binding'Unds'Bindings'QuotRBraUnds'Bindings{}()
          ),
          \top{R} ()
        )),
    \equals{SortExps{},R} (
      Lblexps'LParUndsRParUnds'FUN-UNTYPED'Unds'Exps'Unds'Bindings{}(X0:SortBindings{}),
     \and{SortExps{}} (
       inj{SortBottoms{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms'QuotRBraUnds'Bottoms{}()),
        \top{SortExps{}}())))
  [UNIQUE'Unds'ID{}("b42e5777abbecde33374111432e419a4d71a86ded7723e1dd65495568b49877d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(261,8,261,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `exps(_)_FUN-UNTYPED_Exps_Bindings`(`_and__FUN-UNTYPED-COMMON_Bindings_Binding_Bindings`(`_=__FUN-UNTYPED-COMMON_Binding_Exp_Exp`(inj{Name,Exp}(_Gen0),E),Bs))=>`_,__FUN-UNTYPED-COMMON_Exps_Exp_Exps`(E,`exps(_)_FUN-UNTYPED_Exps_Bindings`(Bs)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(46519074be60d9c8cea5b9c08254ba1d29190a0d8a6f11d399f06b0216f3c850), org.kframework.attributes.Location(Location(262,8,262,43)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBindings{}, R} (
            X0:SortBindings{},
            Lbl'Unds'and'UndsUnds'FUN-UNTYPED-COMMON'Unds'Bindings'Unds'Binding'Unds'Bindings{}(Lbl'UndsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Binding'Unds'Exp'Unds'Exp{}(inj{SortName{}, SortExp{}}(Var'Unds'Gen0:SortName{}),VarE:SortExp{}),VarBs:SortBindings{})
          ),
          \top{R} ()
        )),
    \equals{SortExps{},R} (
      Lblexps'LParUndsRParUnds'FUN-UNTYPED'Unds'Exps'Unds'Bindings{}(X0:SortBindings{}),
     \and{SortExps{}} (
       Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps{}(VarE:SortExp{},Lblexps'LParUndsRParUnds'FUN-UNTYPED'Unds'Exps'Unds'Bindings{}(VarBs:SortBindings{})),
        \top{SortExps{}}())))
  [UNIQUE'Unds'ID{}("46519074be60d9c8cea5b9c08254ba1d29190a0d8a6f11d399f06b0216f3c850"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(262,8,262,43)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,S2,I)=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),#token("-1","Int")),`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I),`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I),#token("-1","Int")),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`minInt(_,_)_INT-COMMON_Int_Int_Int`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I)))) requires `_=/=String__STRING-COMMON_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(9a3b7d1924363894c859ceb6bcec34fb944f01a5e0c90679d41b8430990b7295), org.kframework.attributes.Location(Location(1867,8,1867,431)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}),Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{})))),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("9a3b7d1924363894c859ceb6bcec34fb944f01a5e0c90679d41b8430990b7295"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1867,8,1867,431)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(_Gen0,#token("\"\"","String"),_Gen1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5a6cf981f0ec2494854cd3e517b0cf645a1c9762c92a14849adfca9a6a553117), org.kframework.attributes.Location(Location(1868,8,1868,32)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            Var'Unds'Gen0:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            \dv{SortString{}}("")
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            Var'Unds'Gen1:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       \dv{SortInt{}}("-1"),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("5a6cf981f0ec2494854cd3e517b0cf645a1c9762c92a14849adfca9a6a553117"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1868,8,1868,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `freshId(_)_ID-COMMON_Id_Int`(I)=>`String2Id(_)_ID-COMMON_Id_String`(`_+String__STRING-COMMON_String_String_String`(#token("\"_\"","String"),`Int2String(_)_STRING-COMMON_String_Int`(I))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3965c8e65257ebae926d601fa8ac672d34e4c211d73ba594c571c6bc5960f3de), org.kframework.attributes.Location(Location(2246,8,2246,62)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )),
    \equals{SortId{},R} (
      LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int{}(X0:SortInt{}),
     \and{SortId{}} (
       LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(\dv{SortString{}}("_"),LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(VarI:SortInt{}))),
        \top{SortId{}}())))
  [UNIQUE'Unds'ID{}("3965c8e65257ebae926d601fa8ac672d34e4c211d73ba594c571c6bc5960f3de"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2246,8,2246,62)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `freshInt(_)_INT_Int_Int`(I)=>I requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cf2cb8f038b4bdc4edb1334a3b8ced9cd296a7af43f0a1916e082a4e1aefa08b), org.kframework.attributes.Location(Location(1433,8,1433,28)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(X0:SortInt{}),
     \and{SortInt{}} (
       VarI:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("cf2cb8f038b4bdc4edb1334a3b8ced9cd296a7af43f0a1916e082a4e1aefa08b"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1433,8,1433,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule getGeneratedCounterCell(`<generatedTop>`(_DotVar0,Cell))=>Cell requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9ef5eb9b9e6bbd7436911fad20615821f61e06e742dd27773001ab0664bd1de3)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortGeneratedTopCell{}, R} (
            X0:SortGeneratedTopCell{},
            Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'DotVar0:SortTCell{},VarCell:SortGeneratedCounterCell{})
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedCounterCell{},R} (
      LblgetGeneratedCounterCell{}(X0:SortGeneratedTopCell{}),
     \and{SortGeneratedCounterCell{}} (
       VarCell:SortGeneratedCounterCell{},
        \top{SortGeneratedCounterCell{}}())))
  [UNIQUE'Unds'ID{}("9ef5eb9b9e6bbd7436911fad20615821f61e06e742dd27773001ab0664bd1de3")]

// rule `getMatching(_,_)_FUN-UNTYPED_MatchResult_Exp_Val`(_Gen0,_Gen1)=>`matchFailure_FUN-UNTYPED_MatchResult`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(40cb0fcadd168a7176900d5d44593c23520fdc7eb63d529b62ffc699f5de1d59), org.kframework.attributes.Location(Location(283,8,283,41)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen2:SortName{},
          \exists{R} (Var'Unds'Gen3:SortVal{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortExp{}, R} (
                  X0:SortExp{},
                  inj{SortName{}, SortExp{}}(Var'Unds'Gen2:SortName{})
                ),\and{R} (
                \in{SortVal{}, R} (
                  X1:SortVal{},
                  Var'Unds'Gen3:SortVal{}
                ),
                \top{R} ()
              ))
          ))),
          \or{R} (
          \exists{R} (Var'Unds'Gen6:SortBool{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortExp{}, R} (
                  X0:SortExp{},
                  inj{SortBool{}, SortExp{}}(Var'Unds'Gen6:SortBool{})
                ),\and{R} (
                \in{SortVal{}, R} (
                  X1:SortVal{},
                  inj{SortBool{}, SortVal{}}(Var'Unds'Gen6:SortBool{})
                ),
                \top{R} ()
              ))
          )),
          \or{R} (
          \exists{R} (Var'Unds'Gen7:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortExp{}, R} (
                  X0:SortExp{},
                  inj{SortInt{}, SortExp{}}(Var'Unds'Gen7:SortInt{})
                ),\and{R} (
                \in{SortVal{}, R} (
                  X1:SortVal{},
                  inj{SortInt{}, SortVal{}}(Var'Unds'Gen7:SortInt{})
                ),
                \top{R} ()
              ))
          )),
          \or{R} (
          \exists{R} (Var'Unds'Gen9:SortExps{},
          \exists{R} (Var'Unds'Gen8:SortConstructorName{},
          \exists{R} (Var'Unds'Gen10:SortVals{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortExp{}, R} (
                  X0:SortExp{},
                  Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(Var'Unds'Gen8:SortConstructorName{},Var'Unds'Gen9:SortExps{})
                ),\and{R} (
                \in{SortVal{}, R} (
                  X1:SortVal{},
                  Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'ConstructorName'Unds'Vals{}(Var'Unds'Gen8:SortConstructorName{},Var'Unds'Gen10:SortVals{})
                ),
                \top{R} ()
              ))
          )))),
          \or{R} (
          \exists{R} (Var'Unds'Gen12:SortVals{},
          \exists{R} (Var'Unds'Gen11:SortExps{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortExp{}, R} (
                  X0:SortExp{},
                  Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(Var'Unds'Gen11:SortExps{})
                ),\and{R} (
                \in{SortVal{}, R} (
                  X1:SortVal{},
                  Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Vals{}(Var'Unds'Gen12:SortVals{})
                ),
                \top{R} ()
              ))
          ))),
          \or{R} (
          \exists{R} (Var'Unds'Gen13:SortConstructorName{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortExp{}, R} (
                  X0:SortExp{},
                  inj{SortConstructorName{}, SortExp{}}(Var'Unds'Gen13:SortConstructorName{})
                ),\and{R} (
                \in{SortVal{}, R} (
                  X1:SortVal{},
                  inj{SortConstructorName{}, SortVal{}}(Var'Unds'Gen13:SortConstructorName{})
                ),
                \top{R} ()
              ))
          )),
          \or{R} (
          \exists{R} (Var'Unds'Gen14:SortExp{},
          \exists{R} (Var'Unds'Gen19:SortVals{},
          \exists{R} (Var'Unds'Gen17:SortExp{},
          \exists{R} (Var'Unds'Gen18:SortVal{},
          \exists{R} (Var'Unds'Gen16:SortExps{},
          \exists{R} (Var'Unds'Gen15:SortBottoms{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortExp{}, R} (
                  X0:SortExp{},
                  Lbl'LSqBUndsPipeUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps'Unds'Exp{}(Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps{}(Var'Unds'Gen14:SortExp{},\and{SortExps{}}(inj{SortBottoms{}, SortExps{}}(\and{SortBottoms{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms'QuotRBraUnds'Bottoms{}(),Var'Unds'Gen15:SortBottoms{})),Var'Unds'Gen16:SortExps{})),Var'Unds'Gen17:SortExp{})
                ),\and{R} (
                \in{SortVal{}, R} (
                  X1:SortVal{},
                  Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Vals{}(Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals{}(Var'Unds'Gen18:SortVal{},Var'Unds'Gen19:SortVals{}))
                ),
                \top{R} ()
              ))
          ))))))),
          \or{R} (
          \exists{R} (Var'Unds'Gen20:SortString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortExp{}, R} (
                  X0:SortExp{},
                  inj{SortString{}, SortExp{}}(Var'Unds'Gen20:SortString{})
                ),\and{R} (
                \in{SortVal{}, R} (
                  X1:SortVal{},
                  inj{SortString{}, SortVal{}}(Var'Unds'Gen20:SortString{})
                ),
                \top{R} ()
              ))
          )),
          \bottom{R}()
        ))))))))
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortExp{}, R} (
            X0:SortExp{},
            Var'Unds'Gen0:SortExp{}
          ),\and{R} (
          \in{SortVal{}, R} (
            X1:SortVal{},
            Var'Unds'Gen1:SortVal{}
          ),
          \top{R} ()
        ))
    )),
    \equals{SortMatchResult{},R} (
      LblgetMatching'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Exp'Unds'Val{}(X0:SortExp{},X1:SortVal{}),
     \and{SortMatchResult{}} (
       LblmatchFailure'Unds'FUN-UNTYPED'Unds'MatchResult{}(),
        \top{SortMatchResult{}}())))
  [UNIQUE'Unds'ID{}("40cb0fcadd168a7176900d5d44593c23520fdc7eb63d529b62ffc699f5de1d59"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(283,8,283,41)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), owise{}()]

// rule `getMatching(_,_)_FUN-UNTYPED_MatchResult_Exp_Val`(`[_]_FUN-UNTYPED-COMMON_Exp_Exps`(Es),`[_]_FUN-UNTYPED-COMMON_Val_Vals`(Vs))=>`getMatchingAux(_,_)_FUN-UNTYPED_MatchResult_Exps_Vals`(Es,Vs) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(137153d4094fe93d9ef6bbe8e14ae1ec56f3d6b99a4af8e2ec8e511418156837), org.kframework.attributes.Location(Location(277,8,277,85)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortExp{}, R} (
            X0:SortExp{},
            Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps{}(VarEs:SortExps{})
          ),\and{R} (
          \in{SortVal{}, R} (
            X1:SortVal{},
            Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Vals{}(VarVs:SortVals{})
          ),
          \top{R} ()
        ))),
    \equals{SortMatchResult{},R} (
      LblgetMatching'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Exp'Unds'Val{}(X0:SortExp{},X1:SortVal{}),
     \and{SortMatchResult{}} (
       LblgetMatchingAux'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Exps'Unds'Vals{}(VarEs:SortExps{},VarVs:SortVals{}),
        \top{SortMatchResult{}}())))
  [UNIQUE'Unds'ID{}("137153d4094fe93d9ef6bbe8e14ae1ec56f3d6b99a4af8e2ec8e511418156837"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(277,8,277,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `getMatching(_,_)_FUN-UNTYPED_MatchResult_Exp_Val`(`[_|_]_FUN-UNTYPED-COMMON_Exp_Exps_Exp`(`_,__FUN-UNTYPED-COMMON_Exps_Exp_Exps`(H,inj{Bottoms,Exps}(`.List{"_,__FUN-UNTYPED-COMMON_Bottoms_Bottom_Bottoms"}_Bottoms`(.KList) #as _Gen3) #as _Gen2),T),`[_]_FUN-UNTYPED-COMMON_Val_Vals`(`_,__FUN-UNTYPED-COMMON_Vals_Val_Vals`(V,Vs)))=>`getMatchingAux(_,_)_FUN-UNTYPED_MatchResult_Exps_Vals`(`_,__FUN-UNTYPED-COMMON_Exps_Exp_Exps`(H,`_,__FUN-UNTYPED-COMMON_Exps_Exp_Exps`(T,_Gen2)),`_,__FUN-UNTYPED-COMMON_Vals_Val_Vals`(V,`_,__FUN-UNTYPED-COMMON_Vals_Val_Vals`(`[_]_FUN-UNTYPED-COMMON_Val_Vals`(Vs),inj{Bottoms,Vals}(_Gen3)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(358a8c05ce74879bc8568d0f2a8012dcf7b597ffbc88664514c0fd388d2e3053), org.kframework.attributes.Location(Location(296,8,297,41)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortExp{}, R} (
            X0:SortExp{},
            Lbl'LSqBUndsPipeUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'Exps'Unds'Exp{}(Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps{}(VarH:SortExp{},\and{SortExps{}}(inj{SortBottoms{}, SortExps{}}(\and{SortBottoms{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms'QuotRBraUnds'Bottoms{}(),Var'Unds'Gen3:SortBottoms{})),Var'Unds'Gen2:SortExps{})),VarT:SortExp{})
          ),\and{R} (
          \in{SortVal{}, R} (
            X1:SortVal{},
            Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Vals{}(Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals{}(VarV:SortVal{},VarVs:SortVals{}))
          ),
          \top{R} ()
        ))),
    \equals{SortMatchResult{},R} (
      LblgetMatching'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Exp'Unds'Val{}(X0:SortExp{},X1:SortVal{}),
     \and{SortMatchResult{}} (
       LblgetMatchingAux'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Exps'Unds'Vals{}(Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps{}(VarH:SortExp{},Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps{}(VarT:SortExp{},Var'Unds'Gen2:SortExps{})),Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals{}(VarV:SortVal{},Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals{}(Lbl'LSqBUndsRSqBUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'Vals{}(VarVs:SortVals{}),inj{SortBottoms{}, SortVals{}}(Var'Unds'Gen3:SortBottoms{})))),
        \top{SortMatchResult{}}())))
  [UNIQUE'Unds'ID{}("358a8c05ce74879bc8568d0f2a8012dcf7b597ffbc88664514c0fd388d2e3053"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(296,8,297,41)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `getMatching(_,_)_FUN-UNTYPED_MatchResult_Exp_Val`(`_(_)_FUN-UNTYPED-COMMON_Exp_ConstructorName_Exps`(C,Es),`_(_)_FUN-UNTYPED-COMMON_Val_ConstructorName_Vals`(C,Vs))=>`getMatchingAux(_,_)_FUN-UNTYPED_MatchResult_Exps_Vals`(Es,Vs) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(499b814397c02475dfd08a53eeb67ed245d6ecb983c65c7af7ca8939f3145e90), org.kframework.attributes.Location(Location(276,8,276,85)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortExp{}, R} (
            X0:SortExp{},
            Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Exp'Unds'ConstructorName'Unds'Exps{}(VarC:SortConstructorName{},VarEs:SortExps{})
          ),\and{R} (
          \in{SortVal{}, R} (
            X1:SortVal{},
            Lbl'UndsLParUndsRParUnds'FUN-UNTYPED-COMMON'Unds'Val'Unds'ConstructorName'Unds'Vals{}(VarC:SortConstructorName{},VarVs:SortVals{})
          ),
          \top{R} ()
        ))),
    \equals{SortMatchResult{},R} (
      LblgetMatching'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Exp'Unds'Val{}(X0:SortExp{},X1:SortVal{}),
     \and{SortMatchResult{}} (
       LblgetMatchingAux'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Exps'Unds'Vals{}(VarEs:SortExps{},VarVs:SortVals{}),
        \top{SortMatchResult{}}())))
  [UNIQUE'Unds'ID{}("499b814397c02475dfd08a53eeb67ed245d6ecb983c65c7af7ca8939f3145e90"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(276,8,276,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `getMatching(_,_)_FUN-UNTYPED_MatchResult_Exp_Val`(inj{Bool,Exp}(B),inj{Bool,Val}(B))=>`matchResult(_)_FUN-UNTYPED_MatchResult_Map`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dc4abdbab1a76f02c11d6303c6a0650e456d0dd3be79dcd658abf0a12bf275ef), org.kframework.attributes.Location(Location(279,8,279,62)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortExp{}, R} (
            X0:SortExp{},
            inj{SortBool{}, SortExp{}}(VarB:SortBool{})
          ),\and{R} (
          \in{SortVal{}, R} (
            X1:SortVal{},
            inj{SortBool{}, SortVal{}}(VarB:SortBool{})
          ),
          \top{R} ()
        ))),
    \equals{SortMatchResult{},R} (
      LblgetMatching'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Exp'Unds'Val{}(X0:SortExp{},X1:SortVal{}),
     \and{SortMatchResult{}} (
       LblmatchResult'LParUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Map{}(Lbl'Stop'Map{}()),
        \top{SortMatchResult{}}())))
  [UNIQUE'Unds'ID{}("dc4abdbab1a76f02c11d6303c6a0650e456d0dd3be79dcd658abf0a12bf275ef"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(279,8,279,62)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `getMatching(_,_)_FUN-UNTYPED_MatchResult_Exp_Val`(inj{ConstructorName,Exp}(C),inj{ConstructorName,Val}(C))=>`matchResult(_)_FUN-UNTYPED_MatchResult_Map`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(613652b0aa75af771e520be473ab67651f094ffc8c6c2ba5461965c2837ca4ec), org.kframework.attributes.Location(Location(278,8,278,62)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortExp{}, R} (
            X0:SortExp{},
            inj{SortConstructorName{}, SortExp{}}(VarC:SortConstructorName{})
          ),\and{R} (
          \in{SortVal{}, R} (
            X1:SortVal{},
            inj{SortConstructorName{}, SortVal{}}(VarC:SortConstructorName{})
          ),
          \top{R} ()
        ))),
    \equals{SortMatchResult{},R} (
      LblgetMatching'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Exp'Unds'Val{}(X0:SortExp{},X1:SortVal{}),
     \and{SortMatchResult{}} (
       LblmatchResult'LParUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Map{}(Lbl'Stop'Map{}()),
        \top{SortMatchResult{}}())))
  [UNIQUE'Unds'ID{}("613652b0aa75af771e520be473ab67651f094ffc8c6c2ba5461965c2837ca4ec"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(278,8,278,62)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `getMatching(_,_)_FUN-UNTYPED_MatchResult_Exp_Val`(inj{Int,Exp}(I),inj{Int,Val}(I))=>`matchResult(_)_FUN-UNTYPED_MatchResult_Map`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(940ac0f2408aa31eb0fcf4241c4ac7b95dd3a0caf0015087519c9cbb323370f0), org.kframework.attributes.Location(Location(280,8,280,62)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortExp{}, R} (
            X0:SortExp{},
            inj{SortInt{}, SortExp{}}(VarI:SortInt{})
          ),\and{R} (
          \in{SortVal{}, R} (
            X1:SortVal{},
            inj{SortInt{}, SortVal{}}(VarI:SortInt{})
          ),
          \top{R} ()
        ))),
    \equals{SortMatchResult{},R} (
      LblgetMatching'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Exp'Unds'Val{}(X0:SortExp{},X1:SortVal{}),
     \and{SortMatchResult{}} (
       LblmatchResult'LParUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Map{}(Lbl'Stop'Map{}()),
        \top{SortMatchResult{}}())))
  [UNIQUE'Unds'ID{}("940ac0f2408aa31eb0fcf4241c4ac7b95dd3a0caf0015087519c9cbb323370f0"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(280,8,280,62)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `getMatching(_,_)_FUN-UNTYPED_MatchResult_Exp_Val`(inj{Name,Exp}(N),V)=>`matchResult(_)_FUN-UNTYPED_MatchResult_Map`(`_|->_`(inj{Name,KItem}(N),inj{Val,KItem}(V))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e8f7923cf998719ae2cdc6cb73ef2490b3d5b2b5bb018f202b875325043c685b), org.kframework.attributes.Location(Location(282,8,282,58)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortExp{}, R} (
            X0:SortExp{},
            inj{SortName{}, SortExp{}}(VarN:SortName{})
          ),\and{R} (
          \in{SortVal{}, R} (
            X1:SortVal{},
            VarV:SortVal{}
          ),
          \top{R} ()
        ))),
    \equals{SortMatchResult{},R} (
      LblgetMatching'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Exp'Unds'Val{}(X0:SortExp{},X1:SortVal{}),
     \and{SortMatchResult{}} (
       LblmatchResult'LParUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Map{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortName{}, SortKItem{}}(VarN:SortName{}),inj{SortVal{}, SortKItem{}}(VarV:SortVal{}))),
        \top{SortMatchResult{}}())))
  [UNIQUE'Unds'ID{}("e8f7923cf998719ae2cdc6cb73ef2490b3d5b2b5bb018f202b875325043c685b"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(282,8,282,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `getMatching(_,_)_FUN-UNTYPED_MatchResult_Exp_Val`(inj{String,Exp}(S),inj{String,Val}(S))=>`matchResult(_)_FUN-UNTYPED_MatchResult_Map`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(45a92894454717f78f73b61d04bfc766f34ce2fd4c9cf9df07ea876b2a7d98bb), org.kframework.attributes.Location(Location(281,8,281,62)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortExp{}, R} (
            X0:SortExp{},
            inj{SortString{}, SortExp{}}(VarS:SortString{})
          ),\and{R} (
          \in{SortVal{}, R} (
            X1:SortVal{},
            inj{SortString{}, SortVal{}}(VarS:SortString{})
          ),
          \top{R} ()
        ))),
    \equals{SortMatchResult{},R} (
      LblgetMatching'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Exp'Unds'Val{}(X0:SortExp{},X1:SortVal{}),
     \and{SortMatchResult{}} (
       LblmatchResult'LParUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Map{}(Lbl'Stop'Map{}()),
        \top{SortMatchResult{}}())))
  [UNIQUE'Unds'ID{}("45a92894454717f78f73b61d04bfc766f34ce2fd4c9cf9df07ea876b2a7d98bb"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(281,8,281,62)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `getMatchingAux(_,_)_FUN-UNTYPED_MatchResult_Exps_Vals`(_Gen0,_Gen1)=>`matchFailure_FUN-UNTYPED_MatchResult`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c1c14ca3f0089e4c2a0b88966bb69993c31d64cc99be20073f0fbffac04b47c7), org.kframework.attributes.Location(Location(287,8,287,44)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen2:SortExp{},
          \exists{R} (Var'Unds'Gen3:SortExps{},
          \exists{R} (Var'Unds'Gen5:SortVals{},
          \exists{R} (Var'Unds'Gen4:SortVal{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortExps{}, R} (
                  X0:SortExps{},
                  Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps{}(Var'Unds'Gen2:SortExp{},Var'Unds'Gen3:SortExps{})
                ),\and{R} (
                \in{SortVals{}, R} (
                  X1:SortVals{},
                  Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals{}(Var'Unds'Gen4:SortVal{},Var'Unds'Gen5:SortVals{})
                ),
                \top{R} ()
              ))
          ))))),
          \or{R} (
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortExps{}, R} (
                  X0:SortExps{},
                  inj{SortBottoms{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms'QuotRBraUnds'Bottoms{}())
                ),\and{R} (
                \in{SortVals{}, R} (
                  X1:SortVals{},
                  inj{SortBottoms{}, SortVals{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms'QuotRBraUnds'Bottoms{}())
                ),
                \top{R} ()
              ))
          ),
          \bottom{R}()
        ))
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortExps{}, R} (
            X0:SortExps{},
            Var'Unds'Gen0:SortExps{}
          ),\and{R} (
          \in{SortVals{}, R} (
            X1:SortVals{},
            Var'Unds'Gen1:SortVals{}
          ),
          \top{R} ()
        ))
    )),
    \equals{SortMatchResult{},R} (
      LblgetMatchingAux'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Exps'Unds'Vals{}(X0:SortExps{},X1:SortVals{}),
     \and{SortMatchResult{}} (
       LblmatchFailure'Unds'FUN-UNTYPED'Unds'MatchResult{}(),
        \top{SortMatchResult{}}())))
  [UNIQUE'Unds'ID{}("c1c14ca3f0089e4c2a0b88966bb69993c31d64cc99be20073f0fbffac04b47c7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(287,8,287,44)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), owise{}()]

// rule `getMatchingAux(_,_)_FUN-UNTYPED_MatchResult_Exps_Vals`(`_,__FUN-UNTYPED-COMMON_Exps_Exp_Exps`(E,Es),`_,__FUN-UNTYPED-COMMON_Vals_Val_Vals`(V,Vs))=>`mergeMatching(_,_)_FUN-UNTYPED_MatchResult_MatchResult_MatchResult`(`getMatching(_,_)_FUN-UNTYPED_MatchResult_Exp_Val`(E,V),`getMatchingAux(_,_)_FUN-UNTYPED_MatchResult_Exps_Vals`(Es,Vs)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cc256d80a8cecadcda6ec9fb40428cc99316a39aca6eaea3ac6d66dc47a27211), org.kframework.attributes.Location(Location(285,8,285,118)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortExps{}, R} (
            X0:SortExps{},
            Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Exps'Unds'Exp'Unds'Exps{}(VarE:SortExp{},VarEs:SortExps{})
          ),\and{R} (
          \in{SortVals{}, R} (
            X1:SortVals{},
            Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Vals'Unds'Val'Unds'Vals{}(VarV:SortVal{},VarVs:SortVals{})
          ),
          \top{R} ()
        ))),
    \equals{SortMatchResult{},R} (
      LblgetMatchingAux'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Exps'Unds'Vals{}(X0:SortExps{},X1:SortVals{}),
     \and{SortMatchResult{}} (
       LblmergeMatching'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'MatchResult'Unds'MatchResult{}(LblgetMatching'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Exp'Unds'Val{}(VarE:SortExp{},VarV:SortVal{}),LblgetMatchingAux'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Exps'Unds'Vals{}(VarEs:SortExps{},VarVs:SortVals{})),
        \top{SortMatchResult{}}())))
  [UNIQUE'Unds'ID{}("cc256d80a8cecadcda6ec9fb40428cc99316a39aca6eaea3ac6d66dc47a27211"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(285,8,285,118)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `getMatchingAux(_,_)_FUN-UNTYPED_MatchResult_Exps_Vals`(inj{Bottoms,Exps}(`.List{"_,__FUN-UNTYPED-COMMON_Bottoms_Bottom_Bottoms"}_Bottoms`(.KList)),inj{Bottoms,Vals}(`.List{"_,__FUN-UNTYPED-COMMON_Bottoms_Bottom_Bottoms"}_Bottoms`(.KList)))=>`matchResult(_)_FUN-UNTYPED_MatchResult_Map`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(03ed9012e15edb8131f2926b0fc4872007bd841b0c6472c2de7852319c1982d9), org.kframework.attributes.Location(Location(286,8,286,79)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortExps{}, R} (
            X0:SortExps{},
            inj{SortBottoms{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms'QuotRBraUnds'Bottoms{}())
          ),\and{R} (
          \in{SortVals{}, R} (
            X1:SortVals{},
            inj{SortBottoms{}, SortVals{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms'QuotRBraUnds'Bottoms{}())
          ),
          \top{R} ()
        ))),
    \equals{SortMatchResult{},R} (
      LblgetMatchingAux'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Exps'Unds'Vals{}(X0:SortExps{},X1:SortVals{}),
     \and{SortMatchResult{}} (
       LblmatchResult'LParUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Map{}(Lbl'Stop'Map{}()),
        \top{SortMatchResult{}}())))
  [UNIQUE'Unds'ID{}("03ed9012e15edb8131f2926b0fc4872007bd841b0c6472c2de7852319c1982d9"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(286,8,286,79)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule initEnvCell(.KList)=>`<env>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(00d428bbba5e1be4a85aba1c6d8e92413cb67f2b9e9b8fc00940b647db49b07a), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortEnvCell{},R} (
      LblinitEnvCell{}(),
     \and{SortEnvCell{}} (
       Lbl'-LT-'env'-GT-'{}(Lbl'Stop'Map{}()),
        \top{SortEnvCell{}}())))
  [UNIQUE'Unds'ID{}("00d428bbba5e1be4a85aba1c6d8e92413cb67f2b9e9b8fc00940b647db49b07a"), initializer{}()]

// rule initGeneratedCounterCell(.KList)=>`<generatedCounter>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5de11f6b50c4684c0e05b773f809d756f4ce9c03a4f24e23a9cddaf3fa31f553), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortGeneratedCounterCell{},R} (
      LblinitGeneratedCounterCell{}(),
     \and{SortGeneratedCounterCell{}} (
       Lbl'-LT-'generatedCounter'-GT-'{}(\dv{SortInt{}}("0")),
        \top{SortGeneratedCounterCell{}}())))
  [UNIQUE'Unds'ID{}("5de11f6b50c4684c0e05b773f809d756f4ce9c03a4f24e23a9cddaf3fa31f553"), initializer{}()]

// rule initGeneratedTopCell(Init)=>`<generatedTop>`(initTCell(Init),initGeneratedCounterCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6bc7582a7d8c6574a248b085ad3bdecafbf86539963d4e752be82fb1c857fb28), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCell{},R} (
      LblinitGeneratedTopCell{}(X0:SortMap{}),
     \and{SortGeneratedTopCell{}} (
       Lbl'-LT-'generatedTop'-GT-'{}(LblinitTCell{}(VarInit:SortMap{}),LblinitGeneratedCounterCell{}()),
        \top{SortGeneratedTopCell{}}())))
  [UNIQUE'Unds'ID{}("6bc7582a7d8c6574a248b085ad3bdecafbf86539963d4e752be82fb1c857fb28"), initializer{}()]

// rule initInputCell(Init)=>`<input>`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(`project:String`(`Map:lookup`(Init,inj{KConfigVar,KItem}(#token("$STDIN","KConfigVar")))))))),`ListItem`(inj{String,KItem}(`project:String`(`Map:lookup`(Init,inj{KConfigVar,KItem}(#token("$IO","KConfigVar"))))))),`ListItem`(inj{Stream,KItem}(`#istream(_)_K-IO_Stream_Int`(`#stdin_K-IO_Int`(.KList)))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(02dab0fdd06e535dc7414d9921d25b84e5e7b2a5ed0e971b567aee1acbd0ef48), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortInputCell{},R} (
      LblinitInputCell{}(X0:SortMap{}),
     \and{SortInputCell{}} (
       Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(Lblproject'Coln'String{}(kseq{}(LblMap'Coln'lookup{}(VarInit:SortMap{},inj{SortKConfigVar{}, SortKItem{}}(\dv{SortKConfigVar{}}("$STDIN"))),dotk{}()))),dotk{}())))),LblListItem{}(inj{SortString{}, SortKItem{}}(Lblproject'Coln'String{}(kseq{}(LblMap'Coln'lookup{}(VarInit:SortMap{},inj{SortKConfigVar{}, SortKItem{}}(\dv{SortKConfigVar{}}("$IO"))),dotk{}()))))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}()))))),
        \top{SortInputCell{}}())))
  [UNIQUE'Unds'ID{}("02dab0fdd06e535dc7414d9921d25b84e5e7b2a5ed0e971b567aee1acbd0ef48"), initializer{}()]

// rule initKCell(Init)=>`<k>`(inj{Exp,KItem}(`project:Exp`(`Map:lookup`(Init,inj{KConfigVar,KItem}(#token("$PGM","KConfigVar")))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0708978885290eac9fd6647e7f8578594241e8c0c6ee97e8d8735f9732f4ab5c), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortKCell{},R} (
      LblinitKCell{}(X0:SortMap{}),
     \and{SortKCell{}} (
       Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblproject'Coln'Exp{}(kseq{}(LblMap'Coln'lookup{}(VarInit:SortMap{},inj{SortKConfigVar{}, SortKItem{}}(\dv{SortKConfigVar{}}("$PGM"))),dotk{}()))),dotk{}())),
        \top{SortKCell{}}())))
  [UNIQUE'Unds'ID{}("0708978885290eac9fd6647e7f8578594241e8c0c6ee97e8d8735f9732f4ab5c"), initializer{}()]

// rule initOutputCell(Init)=>`<output>`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(`#stdout_K-IO_Int`(.KList)))),`ListItem`(inj{String,KItem}(`project:String`(`Map:lookup`(Init,inj{KConfigVar,KItem}(#token("$IO","KConfigVar"))))))),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(#token("\"\"","String"))))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fe4bbac01b7ae18be478d157df9368bcc1dd048a5bfb0e334cd02c0fc7d3c6a2), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortOutputCell{},R} (
      LblinitOutputCell{}(X0:SortMap{}),
     \and{SortOutputCell{}} (
       Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}()))),LblListItem{}(inj{SortString{}, SortKItem{}}(Lblproject'Coln'String{}(kseq{}(LblMap'Coln'lookup{}(VarInit:SortMap{},inj{SortKConfigVar{}, SortKItem{}}(\dv{SortKConfigVar{}}("$IO"))),dotk{}()))))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("")),dotk{}())))))),
        \top{SortOutputCell{}}())))
  [UNIQUE'Unds'ID{}("fe4bbac01b7ae18be478d157df9368bcc1dd048a5bfb0e334cd02c0fc7d3c6a2"), initializer{}()]

// rule initStoreCell(.KList)=>`<store>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(25c9fd48ffb4ae6d3301adb7ee16d732c9e7eff638e62fef57a687c62281f5ee), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortStoreCell{},R} (
      LblinitStoreCell{}(),
     \and{SortStoreCell{}} (
       Lbl'-LT-'store'-GT-'{}(Lbl'Stop'Map{}()),
        \top{SortStoreCell{}}())))
  [UNIQUE'Unds'ID{}("25c9fd48ffb4ae6d3301adb7ee16d732c9e7eff638e62fef57a687c62281f5ee"), initializer{}()]

// rule initTCell(Init)=>`<T>`(initKCell(Init),initEnvCell(.KList),initInputCell(Init),initOutputCell(Init),initStoreCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c94b477bf9a06cd26e9bb7679908aff74ae9d12d297d6f809380b9703e36267c), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortTCell{},R} (
      LblinitTCell{}(X0:SortMap{}),
     \and{SortTCell{}} (
       Lbl'-LT-'T'-GT-'{}(LblinitKCell{}(VarInit:SortMap{}),LblinitEnvCell{}(),LblinitInputCell{}(VarInit:SortMap{}),LblinitOutputCell{}(VarInit:SortMap{}),LblinitStoreCell{}()),
        \top{SortTCell{}}())))
  [UNIQUE'Unds'ID{}("c94b477bf9a06cd26e9bb7679908aff74ae9d12d297d6f809380b9703e36267c"), initializer{}()]

// rule isBinding(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d427bee25f3af8ad92f2f7163c3710298a5ee90fbeedf4c0e928b206252db849), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortBinding{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBinding{}, SortKItem{}}(Var'Unds'Gen1:SortBinding{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBinding{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("d427bee25f3af8ad92f2f7163c3710298a5ee90fbeedf4c0e928b206252db849"), owise{}()]

// rule isBinding(inj{Binding,KItem}(Binding))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cd286989b06f2c7a1ec932c923fc918fe7ddfaeb49855068648a27c993db9935)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBinding{}, SortKItem{}}(VarBinding:SortBinding{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBinding{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("cd286989b06f2c7a1ec932c923fc918fe7ddfaeb49855068648a27c993db9935")]

// rule isBindings(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0dc52b173d582833600f56a0b898288ae0c98ae0c076c322b57c8e98a2073d59), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortBindings{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBindings{}, SortKItem{}}(Var'Unds'Gen1:SortBindings{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBindings{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0dc52b173d582833600f56a0b898288ae0c98ae0c076c322b57c8e98a2073d59"), owise{}()]

// rule isBindings(inj{Bindings,KItem}(Bindings))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(561a8ca4612d1717902a71552de3ec7c078ae79ae4fc96a2357e099a1685b5f3)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBindings{}, SortKItem{}}(VarBindings:SortBindings{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBindings{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("561a8ca4612d1717902a71552de3ec7c078ae79ae4fc96a2357e099a1685b5f3")]

// rule isBool(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7f8273ebd616814dbf1acdd96b9534fbaa5b0491bfd05a61916e5015ad4a37ab), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortBool{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBool{}, SortKItem{}}(Var'Unds'Gen1:SortBool{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBool{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("7f8273ebd616814dbf1acdd96b9534fbaa5b0491bfd05a61916e5015ad4a37ab"), owise{}()]

// rule isBool(inj{Bool,KItem}(Bool))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dadad716b2f6a82fa4b2cc8f903a1b8f1f6e8cfa63f18b72a7cb35110bdcff77)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBool{}, SortKItem{}}(VarBool:SortBool{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBool{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("dadad716b2f6a82fa4b2cc8f903a1b8f1f6e8cfa63f18b72a7cb35110bdcff77")]

// rule isBottom(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(699c7aed4387ce5b3c71634906a846b713a62d7bc5ed10e977bc010c117e4ebe), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortBottom{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBottom{}, SortKItem{}}(Var'Unds'Gen0:SortBottom{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBottom{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("699c7aed4387ce5b3c71634906a846b713a62d7bc5ed10e977bc010c117e4ebe"), owise{}()]

// rule isBottom(inj{Bottom,KItem}(Bottom))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(98dbca506af24593b056975d97aecee2945030fb791977c7fc6d6ed76dacb9b7)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBottom{}, SortKItem{}}(VarBottom:SortBottom{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBottom{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("98dbca506af24593b056975d97aecee2945030fb791977c7fc6d6ed76dacb9b7")]

// rule isBottoms(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(76e2554cf597015d7e10d2dbca795f46749fb709b7f184d9bca8e8aa1bd14d29), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortBottoms{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBottoms{}, SortKItem{}}(Var'Unds'Gen0:SortBottoms{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBottoms{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("76e2554cf597015d7e10d2dbca795f46749fb709b7f184d9bca8e8aa1bd14d29"), owise{}()]

// rule isBottoms(inj{Bottoms,KItem}(Bottoms))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(12645f8051b187d2534d491a94654a34408f02aafb75310756e381fa27757bf5)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBottoms{}, SortKItem{}}(VarBottoms:SortBottoms{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBottoms{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("12645f8051b187d2534d491a94654a34408f02aafb75310756e381fa27757bf5")]

// rule isCase(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(53cae49a6b8119db8b2116b8276baaa40de340fc1a856f34c501255670db9e4e), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortCase{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCase{}, SortKItem{}}(Var'Unds'Gen0:SortCase{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisCase{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("53cae49a6b8119db8b2116b8276baaa40de340fc1a856f34c501255670db9e4e"), owise{}()]

// rule isCase(inj{Case,KItem}(Case))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fbc2b6efb6b9cb6ef023cb509aba8e035205159558cf671ef2f7b29d4a1391dd)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCase{}, SortKItem{}}(VarCase:SortCase{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisCase{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("fbc2b6efb6b9cb6ef023cb509aba8e035205159558cf671ef2f7b29d4a1391dd")]

// rule isCases(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(aae999d29df73a4e37f0d65975c816bebfe8199a8854fd57df3ce28dbee68569), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortCases{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCases{}, SortKItem{}}(Var'Unds'Gen1:SortCases{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisCases{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("aae999d29df73a4e37f0d65975c816bebfe8199a8854fd57df3ce28dbee68569"), owise{}()]

// rule isCases(inj{Cases,KItem}(Cases))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(344e7225e7f6718620c6198fb897736af75791cc658a7604619e63b78d891d70)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCases{}, SortKItem{}}(VarCases:SortCases{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisCases{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("344e7225e7f6718620c6198fb897736af75791cc658a7604619e63b78d891d70")]

// rule isCons(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cbe747a466226e2516504d679ec92275d2c5d325da1de4c646b5db3d34f27ae8), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortCons{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCons{}, SortKItem{}}(Var'Unds'Gen0:SortCons{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisCons{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("cbe747a466226e2516504d679ec92275d2c5d325da1de4c646b5db3d34f27ae8"), owise{}()]

// rule isCons(inj{Cons,KItem}(Cons))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(10fb56198cf67f3c39f1be733ab84e7aef37a14403407d6c41829de4d6077df4)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCons{}, SortKItem{}}(VarCons:SortCons{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisCons{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("10fb56198cf67f3c39f1be733ab84e7aef37a14403407d6c41829de4d6077df4")]

// rule isConstructorName(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(70063fb76a0b2579e237f62ed7da4c11b4f22e6c88b9482a87580bda9d476dee), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortConstructorName{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortConstructorName{}, SortKItem{}}(Var'Unds'Gen1:SortConstructorName{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisConstructorName{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("70063fb76a0b2579e237f62ed7da4c11b4f22e6c88b9482a87580bda9d476dee"), owise{}()]

// rule isConstructorName(inj{ConstructorName,KItem}(ConstructorName))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(28b2980c54e86d1c4cf39fc2a67dfb86b6a2d113e791d844eb1d752a7e017778)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortConstructorName{}, SortKItem{}}(VarConstructorName:SortConstructorName{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisConstructorName{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("28b2980c54e86d1c4cf39fc2a67dfb86b6a2d113e791d844eb1d752a7e017778")]

// rule isEnvCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8a960c8f9cadc95b68b218aedab99c4a8de14751b7c1687cf3452eed5933eddb), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortEnvCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortEnvCell{}, SortKItem{}}(Var'Unds'Gen0:SortEnvCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisEnvCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("8a960c8f9cadc95b68b218aedab99c4a8de14751b7c1687cf3452eed5933eddb"), owise{}()]

// rule isEnvCell(inj{EnvCell,KItem}(EnvCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b5df359932869a7148a60c91069b0bd8bd4c747deff9948cc9b5abe368811236)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEnvCell{}, SortKItem{}}(VarEnvCell:SortEnvCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisEnvCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b5df359932869a7148a60c91069b0bd8bd4c747deff9948cc9b5abe368811236")]

// rule isEnvCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(898db9bb9cecb296461b4101a9cb111e665d5dbc884af3c81a5278f77dac8df9), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortEnvCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortEnvCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortEnvCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisEnvCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("898db9bb9cecb296461b4101a9cb111e665d5dbc884af3c81a5278f77dac8df9"), owise{}()]

// rule isEnvCellOpt(inj{EnvCellOpt,KItem}(EnvCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7d5b22845313dff6f784ac0e578d3b7433b454aa2be3a9a6d389705cbbd1c0dc)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEnvCellOpt{}, SortKItem{}}(VarEnvCellOpt:SortEnvCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisEnvCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("7d5b22845313dff6f784ac0e578d3b7433b454aa2be3a9a6d389705cbbd1c0dc")]

// rule isExp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3762fda3bb594dc94f3bc1b73e6be837dcb235b3eb61c39b1e9b4081559b2706), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortExp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen1:SortExp{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisExp{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("3762fda3bb594dc94f3bc1b73e6be837dcb235b3eb61c39b1e9b4081559b2706"), owise{}()]

// rule isExp(inj{Exp,KItem}(Exp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5113a02f7660a72f8eec77fb75db8556ae809f64d13e8478319e14b277319d5c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExp{}, SortKItem{}}(VarExp:SortExp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisExp{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5113a02f7660a72f8eec77fb75db8556ae809f64d13e8478319e14b277319d5c")]

// rule isExps(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d0d46452d4bfb35e897e38e44708739df735761145705017013d71d14a824db0), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortExps{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortExps{}, SortKItem{}}(Var'Unds'Gen1:SortExps{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisExps{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("d0d46452d4bfb35e897e38e44708739df735761145705017013d71d14a824db0"), owise{}()]

// rule isExps(inj{Exps,KItem}(Exps))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5e8cbdfdf9c482f9ff6f11c69b77e56f646c4d81c94b35164a4228a6e5c51104)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExps{}, SortKItem{}}(VarExps:SortExps{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisExps{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5e8cbdfdf9c482f9ff6f11c69b77e56f646c4d81c94b35164a4228a6e5c51104")]

// rule isFloat(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2a794de414a5b222c2b378d31aee70dd82d84237a3ab65881c92100c0bf5cb57), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortFloat{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFloat{}, SortKItem{}}(Var'Unds'Gen1:SortFloat{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisFloat{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2a794de414a5b222c2b378d31aee70dd82d84237a3ab65881c92100c0bf5cb57"), owise{}()]

// rule isFloat(inj{Float,KItem}(Float))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d74a36c34f45e0bf74d89fdd362f124478ab18934b5786ff4aabfe527643c5f0)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFloat{}, SortKItem{}}(VarFloat:SortFloat{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisFloat{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("d74a36c34f45e0bf74d89fdd362f124478ab18934b5786ff4aabfe527643c5f0")]

// rule isGeneratedCounterCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7d501e1637f26769ad3b9439efef0285daa79523b0d071b3a792972ce92e4fe2), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortGeneratedCounterCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(Var'Unds'Gen0:SortGeneratedCounterCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("7d501e1637f26769ad3b9439efef0285daa79523b0d071b3a792972ce92e4fe2"), owise{}()]

// rule isGeneratedCounterCell(inj{GeneratedCounterCell,KItem}(GeneratedCounterCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f7b6a3dbee5a80d5eeba727f40009876995660d4052a45fc50c55f88c5fc1a7c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarGeneratedCounterCell:SortGeneratedCounterCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f7b6a3dbee5a80d5eeba727f40009876995660d4052a45fc50c55f88c5fc1a7c")]

// rule isGeneratedCounterCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(55e7759c7640aa41fef8271d53c6dd8668aa497704539a65577604ada709c5df), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortGeneratedCounterCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortGeneratedCounterCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("55e7759c7640aa41fef8271d53c6dd8668aa497704539a65577604ada709c5df"), owise{}()]

// rule isGeneratedCounterCellOpt(inj{GeneratedCounterCellOpt,KItem}(GeneratedCounterCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a4ff3e170677e099d4b28085658942cb10fcf871aa99abcdf73927596c180f12)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarGeneratedCounterCellOpt:SortGeneratedCounterCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a4ff3e170677e099d4b28085658942cb10fcf871aa99abcdf73927596c180f12")]

// rule isGeneratedTopCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ec16314688c4b2d204af490e243a3e83a2e82fbc74988c3574b997cc9ca56816), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortGeneratedTopCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(Var'Unds'Gen1:SortGeneratedTopCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("ec16314688c4b2d204af490e243a3e83a2e82fbc74988c3574b997cc9ca56816"), owise{}()]

// rule isGeneratedTopCell(inj{GeneratedTopCell,KItem}(GeneratedTopCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3bcf423225700e329d0533cfd806eb9bab91f9d8de0979c8d8e381fe5d076bb2)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarGeneratedTopCell:SortGeneratedTopCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("3bcf423225700e329d0533cfd806eb9bab91f9d8de0979c8d8e381fe5d076bb2")]

// rule isGeneratedTopCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1f022b25cc5a2adbe99fbae6b50007c803258a5749eb01e05c86096f7b35c0df), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortGeneratedTopCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortGeneratedTopCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1f022b25cc5a2adbe99fbae6b50007c803258a5749eb01e05c86096f7b35c0df"), owise{}()]

// rule isGeneratedTopCellFragment(inj{GeneratedTopCellFragment,KItem}(GeneratedTopCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(559f2cdc0ab425bb065cc3174f4a1af4d9ca834f762a814cf3dfbf9a9d7f8271)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarGeneratedTopCellFragment:SortGeneratedTopCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("559f2cdc0ab425bb065cc3174f4a1af4d9ca834f762a814cf3dfbf9a9d7f8271")]

// rule isIOError(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(20991c3332591ac971b290eb3a8cf0b0bcda5515745e9df3f1aef203db197006), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortIOError{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIOError{}, SortKItem{}}(Var'Unds'Gen0:SortIOError{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIOError{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("20991c3332591ac971b290eb3a8cf0b0bcda5515745e9df3f1aef203db197006"), owise{}()]

// rule isIOError(inj{IOError,KItem}(IOError))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(af1461e241b050082a392e02da8a0d27eb78de77d591d7b2a949770399eea7d0)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOError{}, SortKItem{}}(VarIOError:SortIOError{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIOError{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("af1461e241b050082a392e02da8a0d27eb78de77d591d7b2a949770399eea7d0")]

// rule isIOFile(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0512dee3542dc027fbb3e8109dd7eda0d57c779d50e74dc69a69de93a12e6d63), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortIOFile{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIOFile{}, SortKItem{}}(Var'Unds'Gen1:SortIOFile{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIOFile{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0512dee3542dc027fbb3e8109dd7eda0d57c779d50e74dc69a69de93a12e6d63"), owise{}()]

// rule isIOFile(inj{IOFile,KItem}(IOFile))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e265f4f40b46b033479ce783a161791d2f3390b848921b8d137e83f3f513fc0a)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOFile{}, SortKItem{}}(VarIOFile:SortIOFile{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIOFile{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("e265f4f40b46b033479ce783a161791d2f3390b848921b8d137e83f3f513fc0a")]

// rule isIOInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a8647511396f0c9a09435045b00a5e7b4372d1d771597873d8bd8dc687456707), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortIOInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIOInt{}, SortKItem{}}(Var'Unds'Gen1:SortIOInt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIOInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a8647511396f0c9a09435045b00a5e7b4372d1d771597873d8bd8dc687456707"), owise{}()]

// rule isIOInt(inj{IOInt,KItem}(IOInt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e744736c885f38e99587884080e17e1ddd231da39bcbdcb445d10f52b6675232)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOInt{}, SortKItem{}}(VarIOInt:SortIOInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIOInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("e744736c885f38e99587884080e17e1ddd231da39bcbdcb445d10f52b6675232")]

// rule isIOString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c2c1cfa5b8d1f4508bc208f23ab583f3e9b32659aec4f64e0228e3704bd22a07), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortIOString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIOString{}, SortKItem{}}(Var'Unds'Gen0:SortIOString{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIOString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("c2c1cfa5b8d1f4508bc208f23ab583f3e9b32659aec4f64e0228e3704bd22a07"), owise{}()]

// rule isIOString(inj{IOString,KItem}(IOString))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(febfbad427936ffed4a4f974d1061ec9b65a4d6751c5a4e0e31661905c3f9e1e)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOString{}, SortKItem{}}(VarIOString:SortIOString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIOString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("febfbad427936ffed4a4f974d1061ec9b65a4d6751c5a4e0e31661905c3f9e1e")]

// rule isId(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(79aa211b9cca8ff345580e936f59ebe000c9a0be28b59d063bd40ac3b72d72de), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortId{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortId{}, SortKItem{}}(Var'Unds'Gen0:SortId{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisId{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("79aa211b9cca8ff345580e936f59ebe000c9a0be28b59d063bd40ac3b72d72de"), owise{}()]

// rule isId(inj{Id,KItem}(Id))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f024b5fa3f428dab8c832862d8a13219a64369be25641326400611b32ae8843d)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortId{}, SortKItem{}}(VarId:SortId{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisId{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f024b5fa3f428dab8c832862d8a13219a64369be25641326400611b32ae8843d")]

// rule isInputCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0f3f6de85272a791e98f8c9a8d73d1d4dc93b38084061bfdd39cf4d531202358), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortInputCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortInputCell{}, SortKItem{}}(Var'Unds'Gen0:SortInputCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisInputCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0f3f6de85272a791e98f8c9a8d73d1d4dc93b38084061bfdd39cf4d531202358"), owise{}()]

// rule isInputCell(inj{InputCell,KItem}(InputCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e058fe7a35081745ba8f9c117af82e0e2fe525547b2b5337f892d7e7269f224c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInputCell{}, SortKItem{}}(VarInputCell:SortInputCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisInputCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("e058fe7a35081745ba8f9c117af82e0e2fe525547b2b5337f892d7e7269f224c")]

// rule isInputCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6fbfb117c75d43597c9668d723891287171264654854dce7138606d5531e55a9), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortInputCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortInputCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortInputCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisInputCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("6fbfb117c75d43597c9668d723891287171264654854dce7138606d5531e55a9"), owise{}()]

// rule isInputCellOpt(inj{InputCellOpt,KItem}(InputCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d50d1f05284690b014b97774f94290c5860fb6ad5058073acdda34fc877681f3)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInputCellOpt{}, SortKItem{}}(VarInputCellOpt:SortInputCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisInputCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("d50d1f05284690b014b97774f94290c5860fb6ad5058073acdda34fc877681f3")]

// rule isInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5c9850befff40cc79151dbc5a8999b5ffaad767f244ed97f9f29b56b7170bf24), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortInt{}, SortKItem{}}(Var'Unds'Gen0:SortInt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5c9850befff40cc79151dbc5a8999b5ffaad767f244ed97f9f29b56b7170bf24"), owise{}()]

// rule isInt(inj{Int,KItem}(Int))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(92664aa821c8898ff16b4e72ad0bdf363f755c7660d28dcb69c129a2c94bc6b5)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInt{}, SortKItem{}}(VarInt:SortInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("92664aa821c8898ff16b4e72ad0bdf363f755c7660d28dcb69c129a2c94bc6b5")]

// rule isK(K)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(16ff77cff0ef50026a8b3f4614b87bda465701918596b7ad2280baffff56f847)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisK{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("16ff77cff0ef50026a8b3f4614b87bda465701918596b7ad2280baffff56f847")]

// rule isKCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1668e9146ab7dd7867682198dd9dddc0c7c88d8f9fad9ed2366229fc4db18733), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKCell{}, SortKItem{}}(Var'Unds'Gen1:SortKCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1668e9146ab7dd7867682198dd9dddc0c7c88d8f9fad9ed2366229fc4db18733"), owise{}()]

// rule isKCell(inj{KCell,KItem}(KCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2695222b1238f711f8a356c0a1bc0ac418d7bd78fd3282e7c60882e2631a46df)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCell{}, SortKItem{}}(VarKCell:SortKCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2695222b1238f711f8a356c0a1bc0ac418d7bd78fd3282e7c60882e2631a46df")]

// rule isKCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fa44a9c94132ade195fc2cb566fa82471e4592c977a49183ac2142c5062701ca), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortKCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortKCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("fa44a9c94132ade195fc2cb566fa82471e4592c977a49183ac2142c5062701ca"), owise{}()]

// rule isKCellOpt(inj{KCellOpt,KItem}(KCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1516473b1e153a368c273997543a4378ad451e5e828db8e289f4447f7e5228a5)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarKCellOpt:SortKCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1516473b1e153a368c273997543a4378ad451e5e828db8e289f4447f7e5228a5")]

// rule isKConfigVar(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f1c02853e001635e66a06d14d1cd322a996f4acbe38a7f9c88df6c97ea6a4677), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKConfigVar{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKConfigVar{}, SortKItem{}}(Var'Unds'Gen1:SortKConfigVar{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKConfigVar{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f1c02853e001635e66a06d14d1cd322a996f4acbe38a7f9c88df6c97ea6a4677"), owise{}()]

// rule isKConfigVar(inj{KConfigVar,KItem}(KConfigVar))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0ef0a00bb321f2c2a62a3239327de70ecb8e907a950cd20034c46b84e040ebcd)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKConfigVar{}, SortKItem{}}(VarKConfigVar:SortKConfigVar{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKConfigVar{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0ef0a00bb321f2c2a62a3239327de70ecb8e907a950cd20034c46b84e040ebcd")]

// rule isKItem(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f766beabd3e632a98e221201d003f26f45f1feef2aff6da0ab07edde06a5d99d), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKItem{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(Var'Unds'Gen1:SortKItem{},dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKItem{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f766beabd3e632a98e221201d003f26f45f1feef2aff6da0ab07edde06a5d99d"), owise{}()]

// rule isKItem(KItem)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ed3c25a7dab5e5fbc101589e2fa74ac91aa107f051d22a01378222d08643373c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(VarKItem:SortKItem{},dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKItem{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("ed3c25a7dab5e5fbc101589e2fa74ac91aa107f051d22a01378222d08643373c")]

// rule isKResult(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b74c72133f88a5a621a948f57a9e1abd3144eb8d539c42ea330b3898a93cef77), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortKResult{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKResult{}, SortKItem{}}(Var'Unds'Gen0:SortKResult{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKResult{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b74c72133f88a5a621a948f57a9e1abd3144eb8d539c42ea330b3898a93cef77"), owise{}()]

// rule isKResult(inj{KResult,KItem}(KResult))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f4c2469bcff9527515b6d36f16040307917bda61067d10b85fb531e142483bee)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKResult{}, SortKItem{}}(VarKResult:SortKResult{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKResult{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f4c2469bcff9527515b6d36f16040307917bda61067d10b85fb531e142483bee")]

// rule isList(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0b6d1ffc254fbf57473abfe22e81bcfa646561c43d4e2cc175eab60cfb2b68aa), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortList{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortList{}, SortKItem{}}(Var'Unds'Gen1:SortList{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisList{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0b6d1ffc254fbf57473abfe22e81bcfa646561c43d4e2cc175eab60cfb2b68aa"), owise{}()]

// rule isList(inj{List,KItem}(List))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7d4dddf5bbdb61cfd11fb9be1071be7bd551cf186607cf6f493cfade3221c446)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortList{}, SortKItem{}}(VarList:SortList{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisList{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("7d4dddf5bbdb61cfd11fb9be1071be7bd551cf186607cf6f493cfade3221c446")]

// rule isMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5da72349a323db3019243ab26f08b728d336c1a52aecaa0bcb7de4adae14bd71), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMap{}, SortKItem{}}(Var'Unds'Gen1:SortMap{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5da72349a323db3019243ab26f08b728d336c1a52aecaa0bcb7de4adae14bd71"), owise{}()]

// rule isMap(inj{Map,KItem}(Map))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4879c0fcf6b7d7f3d6b751e4f460f8dced005a44ae5ff600cffcea784cf58795)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMap{}, SortKItem{}}(VarMap:SortMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("4879c0fcf6b7d7f3d6b751e4f460f8dced005a44ae5ff600cffcea784cf58795")]

// rule isMatchResult(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(73a3ade9738ecd89da5d4b702454fe33c05c036e2a0e8c7d880281ab376c2040), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortMatchResult{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMatchResult{}, SortKItem{}}(Var'Unds'Gen1:SortMatchResult{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisMatchResult{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("73a3ade9738ecd89da5d4b702454fe33c05c036e2a0e8c7d880281ab376c2040"), owise{}()]

// rule isMatchResult(inj{MatchResult,KItem}(MatchResult))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bff57d992e088564ab71352f7303ace729c2d67e9a3a1f752eec62c8a661314e)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMatchResult{}, SortKItem{}}(VarMatchResult:SortMatchResult{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisMatchResult{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("bff57d992e088564ab71352f7303ace729c2d67e9a3a1f752eec62c8a661314e")]

// rule isName(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8a5f71433be6bb3bca2bb60c378d763b307e63e4943442240da989245f0b13ae), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortName{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortName{}, SortKItem{}}(Var'Unds'Gen0:SortName{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisName{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("8a5f71433be6bb3bca2bb60c378d763b307e63e4943442240da989245f0b13ae"), owise{}()]

// rule isName(inj{Name,KItem}(Name))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cbb44e542abcc552caf768c61317b1c236c9d330f6b5ba7ba04e5f7ce14a0361)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortName{}, SortKItem{}}(VarName:SortName{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisName{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("cbb44e542abcc552caf768c61317b1c236c9d330f6b5ba7ba04e5f7ce14a0361")]

// rule isNames(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f47ff415eae969e44b7a54ca9b6a98e4e0b716529d2de6e293e0d88bf419ced3), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortNames{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortNames{}, SortKItem{}}(Var'Unds'Gen0:SortNames{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisNames{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f47ff415eae969e44b7a54ca9b6a98e4e0b716529d2de6e293e0d88bf419ced3"), owise{}()]

// rule isNames(inj{Names,KItem}(Names))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f6e221790e25f95d1a0fc2b0d8f4dffe1bca717bd8fb43c36580beda1ef1e299)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNames{}, SortKItem{}}(VarNames:SortNames{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisNames{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f6e221790e25f95d1a0fc2b0d8f4dffe1bca717bd8fb43c36580beda1ef1e299")]

// rule isOutputCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f92332c8ffedead3afae8c15e2891ee2ee8bbd82a47d04f8149d0f82c1c60de9), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortOutputCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOutputCell{}, SortKItem{}}(Var'Unds'Gen0:SortOutputCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisOutputCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f92332c8ffedead3afae8c15e2891ee2ee8bbd82a47d04f8149d0f82c1c60de9"), owise{}()]

// rule isOutputCell(inj{OutputCell,KItem}(OutputCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(054241e86a136983b3863c6210fcd33d06af3fe717735eec0904da6fc0a80f32)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOutputCell{}, SortKItem{}}(VarOutputCell:SortOutputCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisOutputCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("054241e86a136983b3863c6210fcd33d06af3fe717735eec0904da6fc0a80f32")]

// rule isOutputCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0429fbc63cdca18e8570183a69d291b55ff380ce968bb5c5d4a17ac97ed47508), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortOutputCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOutputCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortOutputCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisOutputCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0429fbc63cdca18e8570183a69d291b55ff380ce968bb5c5d4a17ac97ed47508"), owise{}()]

// rule isOutputCellOpt(inj{OutputCellOpt,KItem}(OutputCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0d87738599cd93822056eaa8b6a2b9967cd14d8f1b0aeb94c9ad20168a7162d2)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOutputCellOpt{}, SortKItem{}}(VarOutputCellOpt:SortOutputCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisOutputCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0d87738599cd93822056eaa8b6a2b9967cd14d8f1b0aeb94c9ad20168a7162d2")]

// rule isSet(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4bb33358689dc4ec69171f146dc69c169560a878b09ca872d2c4da9e2dbd0d5e), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortSet{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortSet{}, SortKItem{}}(Var'Unds'Gen0:SortSet{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("4bb33358689dc4ec69171f146dc69c169560a878b09ca872d2c4da9e2dbd0d5e"), owise{}()]

// rule isSet(inj{Set,KItem}(Set))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f205bc460bdb728b4c3458643699be30d519db4d8b13e80e2c27082b9e846e80)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSet{}, SortKItem{}}(VarSet:SortSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f205bc460bdb728b4c3458643699be30d519db4d8b13e80e2c27082b9e846e80")]

// rule isStoreCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(33a0e6671e5516cd885d83ad5877873114fe441812c5347a4d52995f1ad94aab), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortStoreCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStoreCell{}, SortKItem{}}(Var'Unds'Gen1:SortStoreCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisStoreCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("33a0e6671e5516cd885d83ad5877873114fe441812c5347a4d52995f1ad94aab"), owise{}()]

// rule isStoreCell(inj{StoreCell,KItem}(StoreCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(263fb373387f648439377899d45b262e5c51926759bf2c8267de3417bbdadd55)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStoreCell{}, SortKItem{}}(VarStoreCell:SortStoreCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisStoreCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("263fb373387f648439377899d45b262e5c51926759bf2c8267de3417bbdadd55")]

// rule isStoreCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(493799ac8a682a7b22ef72f02ec608d4f9cc76e4570c8ba582dc23634b2b3686), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortStoreCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStoreCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortStoreCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisStoreCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("493799ac8a682a7b22ef72f02ec608d4f9cc76e4570c8ba582dc23634b2b3686"), owise{}()]

// rule isStoreCellOpt(inj{StoreCellOpt,KItem}(StoreCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2b6306e5c5c7ea25ad09bdafcc353f09f74824470ad9c87463c65ca63a636cd4)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStoreCellOpt{}, SortKItem{}}(VarStoreCellOpt:SortStoreCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisStoreCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2b6306e5c5c7ea25ad09bdafcc353f09f74824470ad9c87463c65ca63a636cd4")]

// rule isStream(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b9fdcc98671795de0892a224238b1cf1bc7c23c4ae78e3a8e2c9c24b975ea29b), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortStream{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStream{}, SortKItem{}}(Var'Unds'Gen0:SortStream{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisStream{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b9fdcc98671795de0892a224238b1cf1bc7c23c4ae78e3a8e2c9c24b975ea29b"), owise{}()]

// rule isStream(inj{Stream,KItem}(Stream))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(27e703343d82a904ab8f74cc74fe8c6870a94fa1f4df39e1c0230ae06e4783cc)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStream{}, SortKItem{}}(VarStream:SortStream{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisStream{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("27e703343d82a904ab8f74cc74fe8c6870a94fa1f4df39e1c0230ae06e4783cc")]

// rule isString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(771c9ac303cbf7ec1228dd7a6f0b5db7e43db7edb5d4582845e18d9d602cb63f), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortString{}, SortKItem{}}(Var'Unds'Gen0:SortString{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("771c9ac303cbf7ec1228dd7a6f0b5db7e43db7edb5d4582845e18d9d602cb63f"), owise{}()]

// rule isString(inj{String,KItem}(String))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(109ced650ead4a5092ddba090e1b8e181633ed0aa5c5f93bce9f88be215668ef)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortString{}, SortKItem{}}(VarString:SortString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("109ced650ead4a5092ddba090e1b8e181633ed0aa5c5f93bce9f88be215668ef")]

// rule isTCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1d1c115130d3315d664ea538bb035ac90d0288970bd6922514ad32b5c8dcf4c4), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortTCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTCell{}, SortKItem{}}(Var'Unds'Gen0:SortTCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1d1c115130d3315d664ea538bb035ac90d0288970bd6922514ad32b5c8dcf4c4"), owise{}()]

// rule isTCell(inj{TCell,KItem}(TCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0b19c6d63df1e9cd6abc786c6c34fbd1b1f97cae6bf9fdba7b1275a02bd51205)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCell{}, SortKItem{}}(VarTCell:SortTCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0b19c6d63df1e9cd6abc786c6c34fbd1b1f97cae6bf9fdba7b1275a02bd51205")]

// rule isTCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bb6f7ef44788d69ec6b84a650f582638cbb3a7ee5dc001b75deff061c3f2b869), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortTCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("bb6f7ef44788d69ec6b84a650f582638cbb3a7ee5dc001b75deff061c3f2b869"), owise{}()]

// rule isTCellFragment(inj{TCellFragment,KItem}(TCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f1c94b538b3ecdc44697da9f227c0650540c8f233c5dba13f94071522c756c76)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellFragment{}, SortKItem{}}(VarTCellFragment:SortTCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f1c94b538b3ecdc44697da9f227c0650540c8f233c5dba13f94071522c756c76")]

// rule isTCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a59defe6ac53b3129c2a5836b392863c76a0090b9aa2cd64999737194de1f55f), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortTCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a59defe6ac53b3129c2a5836b392863c76a0090b9aa2cd64999737194de1f55f"), owise{}()]

// rule isTCellOpt(inj{TCellOpt,KItem}(TCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2d9e2efc934a1108a68dec355c0ce9420ec8c2292a856744f5d9014a10f5888c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellOpt{}, SortKItem{}}(VarTCellOpt:SortTCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2d9e2efc934a1108a68dec355c0ce9420ec8c2292a856744f5d9014a10f5888c")]

// rule isType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0e253c0ab26906841e6d9cae62e4089a8f1d6048327c8b99c3a908f975123f08), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortType{}, SortKItem{}}(Var'Unds'Gen1:SortType{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisType{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0e253c0ab26906841e6d9cae62e4089a8f1d6048327c8b99c3a908f975123f08"), owise{}()]

// rule isType(inj{Type,KItem}(Type))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d677712c390bbd59e0bb13d7bbc0a80d772b2a419a7915fe8bdb0e02ba62ac7c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortType{}, SortKItem{}}(VarType:SortType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisType{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("d677712c390bbd59e0bb13d7bbc0a80d772b2a419a7915fe8bdb0e02ba62ac7c")]

// rule isTypeCase(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9e772fdf2fac9a4fa8a648f4ca0b24be7087850a2234aed11bd611cab76f258b), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTypeCase{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTypeCase{}, SortKItem{}}(Var'Unds'Gen1:SortTypeCase{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTypeCase{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9e772fdf2fac9a4fa8a648f4ca0b24be7087850a2234aed11bd611cab76f258b"), owise{}()]

// rule isTypeCase(inj{TypeCase,KItem}(TypeCase))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dbd3101ba693ad349769746fe032048d80897ea31655a9b26dd111ce8a710219)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypeCase{}, SortKItem{}}(VarTypeCase:SortTypeCase{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTypeCase{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("dbd3101ba693ad349769746fe032048d80897ea31655a9b26dd111ce8a710219")]

// rule isTypeCases(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6988c160e4659405d05174b8982e32099923e688957fcdb383285751cb1b1ffc), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTypeCases{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTypeCases{}, SortKItem{}}(Var'Unds'Gen1:SortTypeCases{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTypeCases{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("6988c160e4659405d05174b8982e32099923e688957fcdb383285751cb1b1ffc"), owise{}()]

// rule isTypeCases(inj{TypeCases,KItem}(TypeCases))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8d5313e58739a91662144697a22798d59bbc5d5ed14089ccd2bcc1d28a4a006d)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypeCases{}, SortKItem{}}(VarTypeCases:SortTypeCases{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTypeCases{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("8d5313e58739a91662144697a22798d59bbc5d5ed14089ccd2bcc1d28a4a006d")]

// rule isTypeName(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4331413a9a3a88efeb4b15b2e397959622a03a94b4a4a37fdc48135096a5a222), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortTypeName{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTypeName{}, SortKItem{}}(Var'Unds'Gen0:SortTypeName{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTypeName{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("4331413a9a3a88efeb4b15b2e397959622a03a94b4a4a37fdc48135096a5a222"), owise{}()]

// rule isTypeName(inj{TypeName,KItem}(TypeName))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(13426f14022acf56aa311cdd5683c7a4c81a3d98b57e2a80186de0c2861ad9da)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypeName{}, SortKItem{}}(VarTypeName:SortTypeName{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTypeName{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("13426f14022acf56aa311cdd5683c7a4c81a3d98b57e2a80186de0c2861ad9da")]

// rule isTypeVar(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(16bd40950a16aa06cfcaaea96ac0ac0ef7b253f6c2d125d5c85ac0d361bb18df), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTypeVar{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTypeVar{}, SortKItem{}}(Var'Unds'Gen1:SortTypeVar{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTypeVar{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("16bd40950a16aa06cfcaaea96ac0ac0ef7b253f6c2d125d5c85ac0d361bb18df"), owise{}()]

// rule isTypeVar(inj{TypeVar,KItem}(TypeVar))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1528bc49d313bee3fb01ef0d0797763dc67be2f2459e7fd614a1d130e3ec3900)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypeVar{}, SortKItem{}}(VarTypeVar:SortTypeVar{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTypeVar{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1528bc49d313bee3fb01ef0d0797763dc67be2f2459e7fd614a1d130e3ec3900")]

// rule isTypeVars(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2943474c748cd11bec376215c6f3a727810f0f3f65dea2800527f44ae27ae9d6), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTypeVars{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTypeVars{}, SortKItem{}}(Var'Unds'Gen1:SortTypeVars{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTypeVars{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2943474c748cd11bec376215c6f3a727810f0f3f65dea2800527f44ae27ae9d6"), owise{}()]

// rule isTypeVars(inj{TypeVars,KItem}(TypeVars))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b4a3dbe63a2944765c1591404c80bc9b9df7cfdef36037d6c5ca61e10a01cda6)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypeVars{}, SortKItem{}}(VarTypeVars:SortTypeVars{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTypeVars{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b4a3dbe63a2944765c1591404c80bc9b9df7cfdef36037d6c5ca61e10a01cda6")]

// rule isTypes(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f9b1f5921f732d8ee27d5de2168bcb0e527fc0a160dfdaf52fea4038715ce89e), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortTypes{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTypes{}, SortKItem{}}(Var'Unds'Gen0:SortTypes{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTypes{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f9b1f5921f732d8ee27d5de2168bcb0e527fc0a160dfdaf52fea4038715ce89e"), owise{}()]

// rule isTypes(inj{Types,KItem}(Types))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(30cb4df680d159045abe65b2bc6f1f4f953a4d7f7e8eb85f9e732f57318a3033)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypes{}, SortKItem{}}(VarTypes:SortTypes{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTypes{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("30cb4df680d159045abe65b2bc6f1f4f953a4d7f7e8eb85f9e732f57318a3033")]

// rule isVal(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4a97a3cdc97041f9c9ccf2aa7f3aae50aa8a477ddd2452cf26ea68d04ac2bdb8), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortVal{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortVal{}, SortKItem{}}(Var'Unds'Gen0:SortVal{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisVal{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("4a97a3cdc97041f9c9ccf2aa7f3aae50aa8a477ddd2452cf26ea68d04ac2bdb8"), owise{}()]

// rule isVal(inj{Val,KItem}(Val))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b5a0241c17a4586755b3028c3e3b0365371f29f68b2a247bb54c7837b5f7b8a3)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVal{}, SortKItem{}}(VarVal:SortVal{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisVal{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b5a0241c17a4586755b3028c3e3b0365371f29f68b2a247bb54c7837b5f7b8a3")]

// rule isVals(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b60354a36f9f38c177ed7c4c34a32eb139e654cff189be320efec8cd0579178b), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortVals{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortVals{}, SortKItem{}}(Var'Unds'Gen0:SortVals{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisVals{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b60354a36f9f38c177ed7c4c34a32eb139e654cff189be320efec8cd0579178b"), owise{}()]

// rule isVals(inj{Vals,KItem}(Vals))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(66a6d698755796480e7a58ce71677e50f8c057cfec148261225102b5f19e1c1b)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVals{}, SortKItem{}}(VarVals:SortVals{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisVals{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("66a6d698755796480e7a58ce71677e50f8c057cfec148261225102b5f19e1c1b")]

// rule `mergeMatching(_,_)_FUN-UNTYPED_MatchResult_MatchResult_MatchResult`(`matchFailure_FUN-UNTYPED_MatchResult`(.KList) #as _Gen1,`matchFailure_FUN-UNTYPED_MatchResult`(.KList) #as _Gen1)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(77cb854fed12af85dc79db4e106cc422ddb11f60a2c5dfad77f92403b8cac1bc), org.kframework.attributes.Location(Location(294,8,294,71)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMatchResult{}, R} (
            X0:SortMatchResult{},
            \and{SortMatchResult{}}(LblmatchFailure'Unds'FUN-UNTYPED'Unds'MatchResult{}(),Var'Unds'Gen1:SortMatchResult{})
          ),\and{R} (
          \in{SortMatchResult{}, R} (
            X1:SortMatchResult{},
            \and{SortMatchResult{}}(LblmatchFailure'Unds'FUN-UNTYPED'Unds'MatchResult{}(),Var'Unds'Gen1:SortMatchResult{})
          ),
          \top{R} ()
        ))),
    \equals{SortMatchResult{},R} (
      LblmergeMatching'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'MatchResult'Unds'MatchResult{}(X0:SortMatchResult{},X1:SortMatchResult{}),
     \and{SortMatchResult{}} (
       Var'Unds'Gen1:SortMatchResult{},
        \top{SortMatchResult{}}())))
  [UNIQUE'Unds'ID{}("77cb854fed12af85dc79db4e106cc422ddb11f60a2c5dfad77f92403b8cac1bc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(294,8,294,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `mergeMatching(_,_)_FUN-UNTYPED_MatchResult_MatchResult_MatchResult`(`matchFailure_FUN-UNTYPED_MatchResult`(.KList) #as _Gen1,`matchResult(_)_FUN-UNTYPED_MatchResult_Map`(_Gen0))=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0368b8d25b85b40271c399c2694182f8a776eeed85b1690e662facbf11869b43), org.kframework.attributes.Location(Location(293,8,293,71)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMatchResult{}, R} (
            X0:SortMatchResult{},
            \and{SortMatchResult{}}(LblmatchFailure'Unds'FUN-UNTYPED'Unds'MatchResult{}(),Var'Unds'Gen1:SortMatchResult{})
          ),\and{R} (
          \in{SortMatchResult{}, R} (
            X1:SortMatchResult{},
            LblmatchResult'LParUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Map{}(Var'Unds'Gen0:SortMap{})
          ),
          \top{R} ()
        ))),
    \equals{SortMatchResult{},R} (
      LblmergeMatching'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'MatchResult'Unds'MatchResult{}(X0:SortMatchResult{},X1:SortMatchResult{}),
     \and{SortMatchResult{}} (
       Var'Unds'Gen1:SortMatchResult{},
        \top{SortMatchResult{}}())))
  [UNIQUE'Unds'ID{}("0368b8d25b85b40271c399c2694182f8a776eeed85b1690e662facbf11869b43"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(293,8,293,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `mergeMatching(_,_)_FUN-UNTYPED_MatchResult_MatchResult_MatchResult`(`matchResult(_)_FUN-UNTYPED_MatchResult_Map`(M1),`matchResult(_)_FUN-UNTYPED_MatchResult_Map`(M2))=>`matchResult(_)_FUN-UNTYPED_MatchResult_Map`(`_Map_`(M1,M2)) requires `_==K_`(inj{Set,KItem}(`intersectSet(_,_)_SET_Set_Set_Set`(`keys(_)_MAP_Set_Map`(M1),`keys(_)_MAP_Set_Map`(M2))),inj{Set,KItem}(`.Set`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(2921f1507419b4909753dcbad237e4752443278c68ce8a85672f824d1f0864d5), org.kframework.attributes.Location(Location(289,8,290,55)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortSet{}, SortKItem{}}(LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(VarM1:SortMap{}),Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(VarM2:SortMap{}))),dotk{}()),kseq{}(inj{SortSet{}, SortKItem{}}(Lbl'Stop'Set{}()),dotk{}())),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortMatchResult{}, R} (
            X0:SortMatchResult{},
            LblmatchResult'LParUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Map{}(VarM1:SortMap{})
          ),\and{R} (
          \in{SortMatchResult{}, R} (
            X1:SortMatchResult{},
            LblmatchResult'LParUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Map{}(VarM2:SortMap{})
          ),
          \top{R} ()
        ))),
    \equals{SortMatchResult{},R} (
      LblmergeMatching'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'MatchResult'Unds'MatchResult{}(X0:SortMatchResult{},X1:SortMatchResult{}),
     \and{SortMatchResult{}} (
       LblmatchResult'LParUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Map{}(Lbl'Unds'Map'Unds'{}(VarM1:SortMap{},VarM2:SortMap{})),
        \top{SortMatchResult{}}())))
  [UNIQUE'Unds'ID{}("2921f1507419b4909753dcbad237e4752443278c68ce8a85672f824d1f0864d5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(289,8,290,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `mergeMatching(_,_)_FUN-UNTYPED_MatchResult_MatchResult_MatchResult`(`matchResult(_)_FUN-UNTYPED_MatchResult_Map`(_Gen0),`matchFailure_FUN-UNTYPED_MatchResult`(.KList) #as _Gen2)=>_Gen2 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1852dd914deb252e0354cfef0a33fab08aa2d9ac1602e481a4d585aeba54693a), org.kframework.attributes.Location(Location(292,8,292,71)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMatchResult{}, R} (
            X0:SortMatchResult{},
            LblmatchResult'LParUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'Map{}(Var'Unds'Gen0:SortMap{})
          ),\and{R} (
          \in{SortMatchResult{}, R} (
            X1:SortMatchResult{},
            \and{SortMatchResult{}}(LblmatchFailure'Unds'FUN-UNTYPED'Unds'MatchResult{}(),Var'Unds'Gen2:SortMatchResult{})
          ),
          \top{R} ()
        ))),
    \equals{SortMatchResult{},R} (
      LblmergeMatching'LParUndsCommUndsRParUnds'FUN-UNTYPED'Unds'MatchResult'Unds'MatchResult'Unds'MatchResult{}(X0:SortMatchResult{},X1:SortMatchResult{}),
     \and{SortMatchResult{}} (
       Var'Unds'Gen2:SortMatchResult{},
        \top{SortMatchResult{}}())))
  [UNIQUE'Unds'ID{}("1852dd914deb252e0354cfef0a33fab08aa2d9ac1602e481a4d585aeba54693a"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(292,8,292,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I1 requires `_<=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(fb09b6acc4366cb77203e07c4efe8a9cf304e1bac9fb0664deea05d3eb9a80c6), org.kframework.attributes.Location(Location(1426,8,1426,57)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       VarI1:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("fb09b6acc4366cb77203e07c4efe8a9cf304e1bac9fb0664deea05d3eb9a80c6"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1426,8,1426,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I2 requires `_>=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(e1effeabf96bb3a3beffd5b679ad5df95c4f8bbf42872b0793331e52a8470fb3), org.kframework.attributes.Location(Location(1427,8,1427,57)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       VarI2:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("e1effeabf96bb3a3beffd5b679ad5df95c4f8bbf42872b0793331e52a8470fb3"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1427,8,1427,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `names(_)_FUN-UNTYPED_Names_Bindings`(`.List{"_and__FUN-UNTYPED-COMMON_Bindings_Binding_Bindings"}_Bindings`(.KList))=>inj{Bottoms,Names}(`.List{"_,__FUN-UNTYPED-COMMON_Bottoms_Bottom_Bottoms"}_Bottoms`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b06b1bfb485f8017fe72172631df0085a34b13e8e014b941d407ce3ae3644839), org.kframework.attributes.Location(Location(257,8,257,34)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBindings{}, R} (
            X0:SortBindings{},
            Lbl'Stop'List'LBraQuotUnds'and'UndsUnds'FUN-UNTYPED-COMMON'Unds'Bindings'Unds'Binding'Unds'Bindings'QuotRBraUnds'Bindings{}()
          ),
          \top{R} ()
        )),
    \equals{SortNames{},R} (
      Lblnames'LParUndsRParUnds'FUN-UNTYPED'Unds'Names'Unds'Bindings{}(X0:SortBindings{}),
     \and{SortNames{}} (
       inj{SortBottoms{}, SortNames{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Bottoms'Unds'Bottom'Unds'Bottoms'QuotRBraUnds'Bottoms{}()),
        \top{SortNames{}}())))
  [UNIQUE'Unds'ID{}("b06b1bfb485f8017fe72172631df0085a34b13e8e014b941d407ce3ae3644839"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(257,8,257,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `names(_)_FUN-UNTYPED_Names_Bindings`(`_and__FUN-UNTYPED-COMMON_Bindings_Binding_Bindings`(`_=__FUN-UNTYPED-COMMON_Binding_Exp_Exp`(inj{Name,Exp}(X),_Gen0),Bs))=>`_,__FUN-UNTYPED-COMMON_Names_Name_Names`(X,`names(_)_FUN-UNTYPED_Names_Bindings`(Bs)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5876d29c321a951bbae858bc664682f7fd30442e852b59f5b03737ed4ba65a2a), org.kframework.attributes.Location(Location(258,8,258,54)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBindings{}, R} (
            X0:SortBindings{},
            Lbl'Unds'and'UndsUnds'FUN-UNTYPED-COMMON'Unds'Bindings'Unds'Binding'Unds'Bindings{}(Lbl'UndsEqlsUndsUnds'FUN-UNTYPED-COMMON'Unds'Binding'Unds'Exp'Unds'Exp{}(inj{SortName{}, SortExp{}}(VarX:SortName{}),Var'Unds'Gen0:SortExp{}),VarBs:SortBindings{})
          ),
          \top{R} ()
        )),
    \equals{SortNames{},R} (
      Lblnames'LParUndsRParUnds'FUN-UNTYPED'Unds'Names'Unds'Bindings{}(X0:SortBindings{}),
     \and{SortNames{}} (
       Lbl'UndsCommUndsUnds'FUN-UNTYPED-COMMON'Unds'Names'Unds'Name'Unds'Names{}(VarX:SortName{},Lblnames'LParUndsRParUnds'FUN-UNTYPED'Unds'Names'Unds'Bindings{}(VarBs:SortBindings{})),
        \top{SortNames{}}())))
  [UNIQUE'Unds'ID{}("5876d29c321a951bbae858bc664682f7fd30442e852b59f5b03737ed4ba65a2a"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(258,8,258,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `notBool_`(#token("false","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(17ebc68421572b8ebe609c068fb49cbb6cbbe3246e2142257ad8befdda38f415), org.kframework.attributes.Location(Location(1119,8,1119,29)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblnotBool'Unds'{}(X0:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("17ebc68421572b8ebe609c068fb49cbb6cbbe3246e2142257ad8befdda38f415"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1119,8,1119,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `notBool_`(#token("true","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(53fc758ece1ff16581673016dfacc556cc30fcf6b3c35b586f001d76a1f9336c), org.kframework.attributes.Location(Location(1118,8,1118,29)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblnotBool'Unds'{}(X0:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("53fc758ece1ff16581673016dfacc556cc30fcf6b3c35b586f001d76a1f9336c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1118,8,1118,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `project:#tempFile:fd`(#tempFile(K0,K1))=>K1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(adb3a6d90d2e5267333e61f4e4be032bebb5f7a513450887a845c863a2adf95d)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIOFile{}, R} (
            X0:SortIOFile{},
            Lbl'Hash'tempFile{}(VarK0:SortString{},VarK1:SortInt{})
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      Lblproject'ColnHash'tempFile'Coln'fd{}(X0:SortIOFile{}),
     \and{SortInt{}} (
       VarK1:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("adb3a6d90d2e5267333e61f4e4be032bebb5f7a513450887a845c863a2adf95d")]

// rule `project:#tempFile:path`(#tempFile(K0,K1))=>K0 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0020b2718cda89e9c9f4d05915593ca66761a24dffb111c697ccc162278da8ea)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIOFile{}, R} (
            X0:SortIOFile{},
            Lbl'Hash'tempFile{}(VarK0:SortString{},VarK1:SortInt{})
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      Lblproject'ColnHash'tempFile'Coln'path{}(X0:SortIOFile{}),
     \and{SortString{}} (
       VarK0:SortString{},
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("0020b2718cda89e9c9f4d05915593ca66761a24dffb111c697ccc162278da8ea")]

// rule `project:#unknownIOError:errno`(#unknownIOError(K0))=>K0 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a36cde36a6581696f3d54614cc0d2d0864c2da35c6c8dc8d56daaf8b24199241)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIOError{}, R} (
            X0:SortIOError{},
            Lbl'Hash'unknownIOError{}(VarK0:SortInt{})
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      Lblproject'ColnHash'unknownIOError'Coln'errno{}(X0:SortIOError{}),
     \and{SortInt{}} (
       VarK0:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("a36cde36a6581696f3d54614cc0d2d0864c2da35c6c8dc8d56daaf8b24199241")]

// rule `project:Binding`(inj{Binding,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(992846ef741c977c647cf532460bcfe4755514737ccdddfe0595f0470602519a), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBinding{}, SortKItem{}}(VarK:SortBinding{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBinding{},R} (
      Lblproject'Coln'Binding{}(X0:SortK{}),
     \and{SortBinding{}} (
       VarK:SortBinding{},
        \top{SortBinding{}}())))
  [UNIQUE'Unds'ID{}("992846ef741c977c647cf532460bcfe4755514737ccdddfe0595f0470602519a"), projection{}()]

// rule `project:Bindings`(inj{Bindings,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6b61e59ab36b134d82de3eb014b0449f63067264df2644ed35cdfab03d06b4c6), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBindings{}, SortKItem{}}(VarK:SortBindings{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBindings{},R} (
      Lblproject'Coln'Bindings{}(X0:SortK{}),
     \and{SortBindings{}} (
       VarK:SortBindings{},
        \top{SortBindings{}}())))
  [UNIQUE'Unds'ID{}("6b61e59ab36b134d82de3eb014b0449f63067264df2644ed35cdfab03d06b4c6"), projection{}()]

// rule `project:Bool`(inj{Bool,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5872f0d5b8131216db7bc41e2c3a423e55f4b8581589fcbd1bf93b2ca6862d54), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBool{}, SortKItem{}}(VarK:SortBool{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      Lblproject'Coln'Bool{}(X0:SortK{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5872f0d5b8131216db7bc41e2c3a423e55f4b8581589fcbd1bf93b2ca6862d54"), projection{}()]

// rule `project:Bottom`(inj{Bottom,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b9a82e380902458650d15cb766051f463e772955729f1035d3a7e2bca938316c), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBottom{}, SortKItem{}}(VarK:SortBottom{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBottom{},R} (
      Lblproject'Coln'Bottom{}(X0:SortK{}),
     \and{SortBottom{}} (
       VarK:SortBottom{},
        \top{SortBottom{}}())))
  [UNIQUE'Unds'ID{}("b9a82e380902458650d15cb766051f463e772955729f1035d3a7e2bca938316c"), projection{}()]

// rule `project:Bottoms`(inj{Bottoms,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(086e0f4b8f3e445aa2bb8bbfd275db3ca62714efc4e86f7e2a55d6e208a555f2), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBottoms{}, SortKItem{}}(VarK:SortBottoms{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBottoms{},R} (
      Lblproject'Coln'Bottoms{}(X0:SortK{}),
     \and{SortBottoms{}} (
       VarK:SortBottoms{},
        \top{SortBottoms{}}())))
  [UNIQUE'Unds'ID{}("086e0f4b8f3e445aa2bb8bbfd275db3ca62714efc4e86f7e2a55d6e208a555f2"), projection{}()]

// rule `project:Case`(inj{Case,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3543aa03216899676cbf971e49d94025c8d571b00e0df373d602f33f4f895fbd), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCase{}, SortKItem{}}(VarK:SortCase{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortCase{},R} (
      Lblproject'Coln'Case{}(X0:SortK{}),
     \and{SortCase{}} (
       VarK:SortCase{},
        \top{SortCase{}}())))
  [UNIQUE'Unds'ID{}("3543aa03216899676cbf971e49d94025c8d571b00e0df373d602f33f4f895fbd"), projection{}()]

// rule `project:Cases`(inj{Cases,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5da46c120682374ce77bc0ce9304594e006165bc6f56f4ae3c7666f3f3b33681), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCases{}, SortKItem{}}(VarK:SortCases{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortCases{},R} (
      Lblproject'Coln'Cases{}(X0:SortK{}),
     \and{SortCases{}} (
       VarK:SortCases{},
        \top{SortCases{}}())))
  [UNIQUE'Unds'ID{}("5da46c120682374ce77bc0ce9304594e006165bc6f56f4ae3c7666f3f3b33681"), projection{}()]

// rule `project:Cons`(inj{Cons,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(87e32976da97f38df315bb8a56fbdbac26cbee80e1d09a2bbe9e67e87d6bf13a), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCons{}, SortKItem{}}(VarK:SortCons{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortCons{},R} (
      Lblproject'Coln'Cons{}(X0:SortK{}),
     \and{SortCons{}} (
       VarK:SortCons{},
        \top{SortCons{}}())))
  [UNIQUE'Unds'ID{}("87e32976da97f38df315bb8a56fbdbac26cbee80e1d09a2bbe9e67e87d6bf13a"), projection{}()]

// rule `project:ConstructorName`(inj{ConstructorName,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(db05a8d01f5f09358cfc95106b17841aba4c5d6657f77b0140e7c74cc6aae8e2), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortConstructorName{}, SortKItem{}}(VarK:SortConstructorName{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortConstructorName{},R} (
      Lblproject'Coln'ConstructorName{}(X0:SortK{}),
     \and{SortConstructorName{}} (
       VarK:SortConstructorName{},
        \top{SortConstructorName{}}())))
  [UNIQUE'Unds'ID{}("db05a8d01f5f09358cfc95106b17841aba4c5d6657f77b0140e7c74cc6aae8e2"), projection{}()]

// rule `project:EnvCell`(inj{EnvCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b495a73a47df541669cce91cff95ac71b4384f2bb1cbf111a39169996baf1c21), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEnvCell{}, SortKItem{}}(VarK:SortEnvCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortEnvCell{},R} (
      Lblproject'Coln'EnvCell{}(X0:SortK{}),
     \and{SortEnvCell{}} (
       VarK:SortEnvCell{},
        \top{SortEnvCell{}}())))
  [UNIQUE'Unds'ID{}("b495a73a47df541669cce91cff95ac71b4384f2bb1cbf111a39169996baf1c21"), projection{}()]

// rule `project:EnvCellOpt`(inj{EnvCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7b2185a82b0e56376fb20fa807d804be6799099fe18bf708a6578fc25d98742c), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEnvCellOpt{}, SortKItem{}}(VarK:SortEnvCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortEnvCellOpt{},R} (
      Lblproject'Coln'EnvCellOpt{}(X0:SortK{}),
     \and{SortEnvCellOpt{}} (
       VarK:SortEnvCellOpt{},
        \top{SortEnvCellOpt{}}())))
  [UNIQUE'Unds'ID{}("7b2185a82b0e56376fb20fa807d804be6799099fe18bf708a6578fc25d98742c"), projection{}()]

// rule `project:Exp`(inj{Exp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9cd2bc2f2919e88b7c91858d910ebc06ec69505e24015e7346a27913f6b3d0c7), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExp{}, SortKItem{}}(VarK:SortExp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortExp{},R} (
      Lblproject'Coln'Exp{}(X0:SortK{}),
     \and{SortExp{}} (
       VarK:SortExp{},
        \top{SortExp{}}())))
  [UNIQUE'Unds'ID{}("9cd2bc2f2919e88b7c91858d910ebc06ec69505e24015e7346a27913f6b3d0c7"), projection{}()]

// rule `project:Exps`(inj{Exps,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(331fb545486ec7658a42a59c02212f98269fbac46ed5ede15648aafb72b6948a), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExps{}, SortKItem{}}(VarK:SortExps{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortExps{},R} (
      Lblproject'Coln'Exps{}(X0:SortK{}),
     \and{SortExps{}} (
       VarK:SortExps{},
        \top{SortExps{}}())))
  [UNIQUE'Unds'ID{}("331fb545486ec7658a42a59c02212f98269fbac46ed5ede15648aafb72b6948a"), projection{}()]

// rule `project:Float`(inj{Float,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ef206f477d884c0b6413273ff35b1206769cdb5a5ceba7b97d9e8e0a7b14e399), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFloat{}, SortKItem{}}(VarK:SortFloat{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortFloat{},R} (
      Lblproject'Coln'Float{}(X0:SortK{}),
     \and{SortFloat{}} (
       VarK:SortFloat{},
        \top{SortFloat{}}())))
  [UNIQUE'Unds'ID{}("ef206f477d884c0b6413273ff35b1206769cdb5a5ceba7b97d9e8e0a7b14e399"), projection{}()]

// rule `project:GeneratedCounterCell`(inj{GeneratedCounterCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(63453db9d9aa121b63bb877e2fa4998d399ef82d2a1e4b90f87a32ba55401217), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarK:SortGeneratedCounterCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedCounterCell{},R} (
      Lblproject'Coln'GeneratedCounterCell{}(X0:SortK{}),
     \and{SortGeneratedCounterCell{}} (
       VarK:SortGeneratedCounterCell{},
        \top{SortGeneratedCounterCell{}}())))
  [UNIQUE'Unds'ID{}("63453db9d9aa121b63bb877e2fa4998d399ef82d2a1e4b90f87a32ba55401217"), projection{}()]

// rule `project:GeneratedCounterCellOpt`(inj{GeneratedCounterCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9325a900267ae528f7cd09f3b44b825dd9ff344c38d38383c08fa697cc67efca), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarK:SortGeneratedCounterCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedCounterCellOpt{},R} (
      Lblproject'Coln'GeneratedCounterCellOpt{}(X0:SortK{}),
     \and{SortGeneratedCounterCellOpt{}} (
       VarK:SortGeneratedCounterCellOpt{},
        \top{SortGeneratedCounterCellOpt{}}())))
  [UNIQUE'Unds'ID{}("9325a900267ae528f7cd09f3b44b825dd9ff344c38d38383c08fa697cc67efca"), projection{}()]

// rule `project:GeneratedTopCell`(inj{GeneratedTopCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b0fabd8c7c81fe08ebd569aff59747d357e441ae1fcd05d9d594d57e38e3d55e), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarK:SortGeneratedTopCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCell{},R} (
      Lblproject'Coln'GeneratedTopCell{}(X0:SortK{}),
     \and{SortGeneratedTopCell{}} (
       VarK:SortGeneratedTopCell{},
        \top{SortGeneratedTopCell{}}())))
  [UNIQUE'Unds'ID{}("b0fabd8c7c81fe08ebd569aff59747d357e441ae1fcd05d9d594d57e38e3d55e"), projection{}()]

// rule `project:GeneratedTopCellFragment`(inj{GeneratedTopCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2084fac322aa142a07f881814b8a286bf62d5c6d05777b7aa715ccc534cf9a42), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarK:SortGeneratedTopCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCellFragment{},R} (
      Lblproject'Coln'GeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortGeneratedTopCellFragment{}} (
       VarK:SortGeneratedTopCellFragment{},
        \top{SortGeneratedTopCellFragment{}}())))
  [UNIQUE'Unds'ID{}("2084fac322aa142a07f881814b8a286bf62d5c6d05777b7aa715ccc534cf9a42"), projection{}()]

// rule `project:IOError`(inj{IOError,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7ffe32516a0c3941ee4ba99c0f779b50c13a06e7eeb613f97334efb61b50c3aa), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOError{}, SortKItem{}}(VarK:SortIOError{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIOError{},R} (
      Lblproject'Coln'IOError{}(X0:SortK{}),
     \and{SortIOError{}} (
       VarK:SortIOError{},
        \top{SortIOError{}}())))
  [UNIQUE'Unds'ID{}("7ffe32516a0c3941ee4ba99c0f779b50c13a06e7eeb613f97334efb61b50c3aa"), projection{}()]

// rule `project:IOFile`(inj{IOFile,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(09adbf7f680517f1f89e4e8c71d5bd247c4a2ea5d62e7c4aeb3153ab97239841), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOFile{}, SortKItem{}}(VarK:SortIOFile{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIOFile{},R} (
      Lblproject'Coln'IOFile{}(X0:SortK{}),
     \and{SortIOFile{}} (
       VarK:SortIOFile{},
        \top{SortIOFile{}}())))
  [UNIQUE'Unds'ID{}("09adbf7f680517f1f89e4e8c71d5bd247c4a2ea5d62e7c4aeb3153ab97239841"), projection{}()]

// rule `project:IOInt`(inj{IOInt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e39565377db8be1e421a86f0a0c31d0782a9af4aed7031245771fcb2a0152e06), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOInt{}, SortKItem{}}(VarK:SortIOInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIOInt{},R} (
      Lblproject'Coln'IOInt{}(X0:SortK{}),
     \and{SortIOInt{}} (
       VarK:SortIOInt{},
        \top{SortIOInt{}}())))
  [UNIQUE'Unds'ID{}("e39565377db8be1e421a86f0a0c31d0782a9af4aed7031245771fcb2a0152e06"), projection{}()]

// rule `project:IOString`(inj{IOString,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(76a39386f0abf23155a1642ec64113306ae7c384a59c2e7f562d3c564efcc9a4), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOString{}, SortKItem{}}(VarK:SortIOString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIOString{},R} (
      Lblproject'Coln'IOString{}(X0:SortK{}),
     \and{SortIOString{}} (
       VarK:SortIOString{},
        \top{SortIOString{}}())))
  [UNIQUE'Unds'ID{}("76a39386f0abf23155a1642ec64113306ae7c384a59c2e7f562d3c564efcc9a4"), projection{}()]

// rule `project:Id`(inj{Id,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(afcb3941b7c18d4b91d6ed8981582d58e0dc006425e9889e9891c2a7c2b93554), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortId{}, SortKItem{}}(VarK:SortId{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortId{},R} (
      Lblproject'Coln'Id{}(X0:SortK{}),
     \and{SortId{}} (
       VarK:SortId{},
        \top{SortId{}}())))
  [UNIQUE'Unds'ID{}("afcb3941b7c18d4b91d6ed8981582d58e0dc006425e9889e9891c2a7c2b93554"), projection{}()]

// rule `project:InputCell`(inj{InputCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fe21fbedec305fc7178670be3239c1a716ad2e66c2559ca094a94cfab3900bce), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInputCell{}, SortKItem{}}(VarK:SortInputCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortInputCell{},R} (
      Lblproject'Coln'InputCell{}(X0:SortK{}),
     \and{SortInputCell{}} (
       VarK:SortInputCell{},
        \top{SortInputCell{}}())))
  [UNIQUE'Unds'ID{}("fe21fbedec305fc7178670be3239c1a716ad2e66c2559ca094a94cfab3900bce"), projection{}()]

// rule `project:InputCellOpt`(inj{InputCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9f52b9682436bd7f0a21a896d695b8fce97d87eac45c6bae0759c56dd257663a), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInputCellOpt{}, SortKItem{}}(VarK:SortInputCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortInputCellOpt{},R} (
      Lblproject'Coln'InputCellOpt{}(X0:SortK{}),
     \and{SortInputCellOpt{}} (
       VarK:SortInputCellOpt{},
        \top{SortInputCellOpt{}}())))
  [UNIQUE'Unds'ID{}("9f52b9682436bd7f0a21a896d695b8fce97d87eac45c6bae0759c56dd257663a"), projection{}()]

// rule `project:Int`(inj{Int,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f316b871091516c401f1d2382cc5f66322602b782c7b01e1aeb6c2ddab50e24b), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInt{}, SortKItem{}}(VarK:SortInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      Lblproject'Coln'Int{}(X0:SortK{}),
     \and{SortInt{}} (
       VarK:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("f316b871091516c401f1d2382cc5f66322602b782c7b01e1aeb6c2ddab50e24b"), projection{}()]

// rule `project:K`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(25b529ddcefd25ef63f99a62040145ef27638e7679ea9202218fe14be98dff3a), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )),
    \equals{SortK{},R} (
      Lblproject'Coln'K{}(X0:SortK{}),
     \and{SortK{}} (
       VarK:SortK{},
        \top{SortK{}}())))
  [UNIQUE'Unds'ID{}("25b529ddcefd25ef63f99a62040145ef27638e7679ea9202218fe14be98dff3a"), projection{}()]

// rule `project:KCell`(inj{KCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(894c13c4c410f11e35bc3781505aeddde4ff400ddda1daf8b35259dbf0de9a24), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCell{}, SortKItem{}}(VarK:SortKCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKCell{},R} (
      Lblproject'Coln'KCell{}(X0:SortK{}),
     \and{SortKCell{}} (
       VarK:SortKCell{},
        \top{SortKCell{}}())))
  [UNIQUE'Unds'ID{}("894c13c4c410f11e35bc3781505aeddde4ff400ddda1daf8b35259dbf0de9a24"), projection{}()]

// rule `project:KCellOpt`(inj{KCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f684dd78d97feadf0cbcb3cbb8892e0842f137c7b29a904cb2f3fc9755b29b30), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarK:SortKCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKCellOpt{},R} (
      Lblproject'Coln'KCellOpt{}(X0:SortK{}),
     \and{SortKCellOpt{}} (
       VarK:SortKCellOpt{},
        \top{SortKCellOpt{}}())))
  [UNIQUE'Unds'ID{}("f684dd78d97feadf0cbcb3cbb8892e0842f137c7b29a904cb2f3fc9755b29b30"), projection{}()]

// rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1242e49c17638c9a66a35e3bb8c237288f7e9aa9a6499101e8cdc55be320cd29), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(VarK:SortKItem{},dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKItem{},R} (
      Lblproject'Coln'KItem{}(X0:SortK{}),
     \and{SortKItem{}} (
       VarK:SortKItem{},
        \top{SortKItem{}}())))
  [UNIQUE'Unds'ID{}("1242e49c17638c9a66a35e3bb8c237288f7e9aa9a6499101e8cdc55be320cd29"), projection{}()]

// rule `project:KResult`(inj{KResult,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(07a916f84d6294528a6d07f273fb778b316d52b4ef8204a1817b105750b2b734), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKResult{}, SortKItem{}}(VarK:SortKResult{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKResult{},R} (
      Lblproject'Coln'KResult{}(X0:SortK{}),
     \and{SortKResult{}} (
       VarK:SortKResult{},
        \top{SortKResult{}}())))
  [UNIQUE'Unds'ID{}("07a916f84d6294528a6d07f273fb778b316d52b4ef8204a1817b105750b2b734"), projection{}()]

// rule `project:List`(inj{List,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2b75eac5a59779d336e6cf9632bf9ba7d67286f322e753108b34e62f2443efe5), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortList{}, SortKItem{}}(VarK:SortList{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortList{},R} (
      Lblproject'Coln'List{}(X0:SortK{}),
     \and{SortList{}} (
       VarK:SortList{},
        \top{SortList{}}())))
  [UNIQUE'Unds'ID{}("2b75eac5a59779d336e6cf9632bf9ba7d67286f322e753108b34e62f2443efe5"), projection{}()]

// rule `project:Map`(inj{Map,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(031237d4aae58d86914d6370d37ccd15f4738378ed780333c59cc81b4f7bc598), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMap{}, SortKItem{}}(VarK:SortMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortMap{},R} (
      Lblproject'Coln'Map{}(X0:SortK{}),
     \and{SortMap{}} (
       VarK:SortMap{},
        \top{SortMap{}}())))
  [UNIQUE'Unds'ID{}("031237d4aae58d86914d6370d37ccd15f4738378ed780333c59cc81b4f7bc598"), projection{}()]

// rule `project:MatchResult`(inj{MatchResult,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(08299f9b46be616d45cca6f58193d4501083a2a148a5faf36970637dbec6a0f2), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMatchResult{}, SortKItem{}}(VarK:SortMatchResult{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortMatchResult{},R} (
      Lblproject'Coln'MatchResult{}(X0:SortK{}),
     \and{SortMatchResult{}} (
       VarK:SortMatchResult{},
        \top{SortMatchResult{}}())))
  [UNIQUE'Unds'ID{}("08299f9b46be616d45cca6f58193d4501083a2a148a5faf36970637dbec6a0f2"), projection{}()]

// rule `project:Name`(inj{Name,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b584bf962fdc7133e957f0360f6d390778ba516f4dc0cdb65b0aaccd1fdf4814), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortName{}, SortKItem{}}(VarK:SortName{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortName{},R} (
      Lblproject'Coln'Name{}(X0:SortK{}),
     \and{SortName{}} (
       VarK:SortName{},
        \top{SortName{}}())))
  [UNIQUE'Unds'ID{}("b584bf962fdc7133e957f0360f6d390778ba516f4dc0cdb65b0aaccd1fdf4814"), projection{}()]

// rule `project:Names`(inj{Names,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0a85e338a803892b6de15ce247445c398a9db6f84d8b5a22189f7b1a5d9a4fca), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNames{}, SortKItem{}}(VarK:SortNames{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortNames{},R} (
      Lblproject'Coln'Names{}(X0:SortK{}),
     \and{SortNames{}} (
       VarK:SortNames{},
        \top{SortNames{}}())))
  [UNIQUE'Unds'ID{}("0a85e338a803892b6de15ce247445c398a9db6f84d8b5a22189f7b1a5d9a4fca"), projection{}()]

// rule `project:OutputCell`(inj{OutputCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e04bb6d74887c11d7aca1a6f613a2e5d4d8dec688cfff03a8ba87aa61f710b5c), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOutputCell{}, SortKItem{}}(VarK:SortOutputCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortOutputCell{},R} (
      Lblproject'Coln'OutputCell{}(X0:SortK{}),
     \and{SortOutputCell{}} (
       VarK:SortOutputCell{},
        \top{SortOutputCell{}}())))
  [UNIQUE'Unds'ID{}("e04bb6d74887c11d7aca1a6f613a2e5d4d8dec688cfff03a8ba87aa61f710b5c"), projection{}()]

// rule `project:OutputCellOpt`(inj{OutputCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(337d0230b2a0cc261808cacb4aa739cf26890e6cb9dbcd26a60b2906a6eb33bc), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOutputCellOpt{}, SortKItem{}}(VarK:SortOutputCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortOutputCellOpt{},R} (
      Lblproject'Coln'OutputCellOpt{}(X0:SortK{}),
     \and{SortOutputCellOpt{}} (
       VarK:SortOutputCellOpt{},
        \top{SortOutputCellOpt{}}())))
  [UNIQUE'Unds'ID{}("337d0230b2a0cc261808cacb4aa739cf26890e6cb9dbcd26a60b2906a6eb33bc"), projection{}()]

// rule `project:Set`(inj{Set,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0e7f5070c993161786e314f7199d985afebac9e07b5c784f6f623780c60ce9d0), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSet{}, SortKItem{}}(VarK:SortSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortSet{},R} (
      Lblproject'Coln'Set{}(X0:SortK{}),
     \and{SortSet{}} (
       VarK:SortSet{},
        \top{SortSet{}}())))
  [UNIQUE'Unds'ID{}("0e7f5070c993161786e314f7199d985afebac9e07b5c784f6f623780c60ce9d0"), projection{}()]

// rule `project:StoreCell`(inj{StoreCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ea6339f4ec3416c0b28a7d5f724eb8c0ab774ba489fea04ff1bbe51e966da9ff), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStoreCell{}, SortKItem{}}(VarK:SortStoreCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortStoreCell{},R} (
      Lblproject'Coln'StoreCell{}(X0:SortK{}),
     \and{SortStoreCell{}} (
       VarK:SortStoreCell{},
        \top{SortStoreCell{}}())))
  [UNIQUE'Unds'ID{}("ea6339f4ec3416c0b28a7d5f724eb8c0ab774ba489fea04ff1bbe51e966da9ff"), projection{}()]

// rule `project:StoreCellOpt`(inj{StoreCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5d788267f4233745214a06930b7d15195b97e04c2d221e75ca13344767e1c2d7), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStoreCellOpt{}, SortKItem{}}(VarK:SortStoreCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortStoreCellOpt{},R} (
      Lblproject'Coln'StoreCellOpt{}(X0:SortK{}),
     \and{SortStoreCellOpt{}} (
       VarK:SortStoreCellOpt{},
        \top{SortStoreCellOpt{}}())))
  [UNIQUE'Unds'ID{}("5d788267f4233745214a06930b7d15195b97e04c2d221e75ca13344767e1c2d7"), projection{}()]

// rule `project:Stream`(inj{Stream,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bb30b432f6a3a9b73f42f0d3a54e07645be55c26bdee9d5c513f06e8009d0a77), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStream{}, SortKItem{}}(VarK:SortStream{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortStream{},R} (
      Lblproject'Coln'Stream{}(X0:SortK{}),
     \and{SortStream{}} (
       VarK:SortStream{},
        \top{SortStream{}}())))
  [UNIQUE'Unds'ID{}("bb30b432f6a3a9b73f42f0d3a54e07645be55c26bdee9d5c513f06e8009d0a77"), projection{}()]

// rule `project:String`(inj{String,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e491dad8f644d2344f08cb72af01ade1e6ce9f564010a2de7909b3b6c7e2ae85), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortString{}, SortKItem{}}(VarK:SortString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      Lblproject'Coln'String{}(X0:SortK{}),
     \and{SortString{}} (
       VarK:SortString{},
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("e491dad8f644d2344f08cb72af01ade1e6ce9f564010a2de7909b3b6c7e2ae85"), projection{}()]

// rule `project:TCell`(inj{TCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8f26b10396db28857112a7db56ab3ef6b64a5c219427baf3f17e0e1fb39ad1ba), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCell{}, SortKItem{}}(VarK:SortTCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTCell{},R} (
      Lblproject'Coln'TCell{}(X0:SortK{}),
     \and{SortTCell{}} (
       VarK:SortTCell{},
        \top{SortTCell{}}())))
  [UNIQUE'Unds'ID{}("8f26b10396db28857112a7db56ab3ef6b64a5c219427baf3f17e0e1fb39ad1ba"), projection{}()]

// rule `project:TCellFragment`(inj{TCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fcf28c9054cbb906b0631404e7190aa02f1fa3a4a09ec0d3024688ee1222c76c), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellFragment{}, SortKItem{}}(VarK:SortTCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTCellFragment{},R} (
      Lblproject'Coln'TCellFragment{}(X0:SortK{}),
     \and{SortTCellFragment{}} (
       VarK:SortTCellFragment{},
        \top{SortTCellFragment{}}())))
  [UNIQUE'Unds'ID{}("fcf28c9054cbb906b0631404e7190aa02f1fa3a4a09ec0d3024688ee1222c76c"), projection{}()]

// rule `project:TCellOpt`(inj{TCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d3df5db294a6f5330dba88e63f8fdddee2bee164f110ca7e39e65afc4cfbb85a), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellOpt{}, SortKItem{}}(VarK:SortTCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTCellOpt{},R} (
      Lblproject'Coln'TCellOpt{}(X0:SortK{}),
     \and{SortTCellOpt{}} (
       VarK:SortTCellOpt{},
        \top{SortTCellOpt{}}())))
  [UNIQUE'Unds'ID{}("d3df5db294a6f5330dba88e63f8fdddee2bee164f110ca7e39e65afc4cfbb85a"), projection{}()]

// rule `project:Type`(inj{Type,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ef9c9e8abaf2a78577b4d63d0f6c6de195a90a606f31d5a2205a26d1140c58a6), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortType{}, SortKItem{}}(VarK:SortType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortType{},R} (
      Lblproject'Coln'Type{}(X0:SortK{}),
     \and{SortType{}} (
       VarK:SortType{},
        \top{SortType{}}())))
  [UNIQUE'Unds'ID{}("ef9c9e8abaf2a78577b4d63d0f6c6de195a90a606f31d5a2205a26d1140c58a6"), projection{}()]

// rule `project:TypeCase`(inj{TypeCase,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0a0561e74091f9e1fa3e9b72c4e092952bacefcd0e97339fc4ee5d1aa9e90a6a), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypeCase{}, SortKItem{}}(VarK:SortTypeCase{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTypeCase{},R} (
      Lblproject'Coln'TypeCase{}(X0:SortK{}),
     \and{SortTypeCase{}} (
       VarK:SortTypeCase{},
        \top{SortTypeCase{}}())))
  [UNIQUE'Unds'ID{}("0a0561e74091f9e1fa3e9b72c4e092952bacefcd0e97339fc4ee5d1aa9e90a6a"), projection{}()]

// rule `project:TypeCases`(inj{TypeCases,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3035a6abef6b76e0c3a347ab21c3661e6078f7bada17777b6ebf8924b5308059), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypeCases{}, SortKItem{}}(VarK:SortTypeCases{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTypeCases{},R} (
      Lblproject'Coln'TypeCases{}(X0:SortK{}),
     \and{SortTypeCases{}} (
       VarK:SortTypeCases{},
        \top{SortTypeCases{}}())))
  [UNIQUE'Unds'ID{}("3035a6abef6b76e0c3a347ab21c3661e6078f7bada17777b6ebf8924b5308059"), projection{}()]

// rule `project:TypeName`(inj{TypeName,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4c30a5c0912199a5051d72768879d3c4f7da9946b30b0f65db515610f093d877), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypeName{}, SortKItem{}}(VarK:SortTypeName{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTypeName{},R} (
      Lblproject'Coln'TypeName{}(X0:SortK{}),
     \and{SortTypeName{}} (
       VarK:SortTypeName{},
        \top{SortTypeName{}}())))
  [UNIQUE'Unds'ID{}("4c30a5c0912199a5051d72768879d3c4f7da9946b30b0f65db515610f093d877"), projection{}()]

// rule `project:TypeVar`(inj{TypeVar,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(49568948288de89a42811a8eed79cb52c117abf107ca34afe881c622af80f4b4), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypeVar{}, SortKItem{}}(VarK:SortTypeVar{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTypeVar{},R} (
      Lblproject'Coln'TypeVar{}(X0:SortK{}),
     \and{SortTypeVar{}} (
       VarK:SortTypeVar{},
        \top{SortTypeVar{}}())))
  [UNIQUE'Unds'ID{}("49568948288de89a42811a8eed79cb52c117abf107ca34afe881c622af80f4b4"), projection{}()]

// rule `project:TypeVars`(inj{TypeVars,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9482672ffa13664bb8fdbf3e7253a84d78220403a37848121d8ee14bd142a1df), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypeVars{}, SortKItem{}}(VarK:SortTypeVars{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTypeVars{},R} (
      Lblproject'Coln'TypeVars{}(X0:SortK{}),
     \and{SortTypeVars{}} (
       VarK:SortTypeVars{},
        \top{SortTypeVars{}}())))
  [UNIQUE'Unds'ID{}("9482672ffa13664bb8fdbf3e7253a84d78220403a37848121d8ee14bd142a1df"), projection{}()]

// rule `project:Types`(inj{Types,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a8e75c8adb82425e6f16ac8c0a5a8527686d18ff295060be5a0092ccaa47a1e3), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypes{}, SortKItem{}}(VarK:SortTypes{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTypes{},R} (
      Lblproject'Coln'Types{}(X0:SortK{}),
     \and{SortTypes{}} (
       VarK:SortTypes{},
        \top{SortTypes{}}())))
  [UNIQUE'Unds'ID{}("a8e75c8adb82425e6f16ac8c0a5a8527686d18ff295060be5a0092ccaa47a1e3"), projection{}()]

// rule `project:Val`(inj{Val,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(150c95b45e4aa067c3d3df9777c501a0c0693c6b14033fddfccc142e4e37cda8), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVal{}, SortKItem{}}(VarK:SortVal{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortVal{},R} (
      Lblproject'Coln'Val{}(X0:SortK{}),
     \and{SortVal{}} (
       VarK:SortVal{},
        \top{SortVal{}}())))
  [UNIQUE'Unds'ID{}("150c95b45e4aa067c3d3df9777c501a0c0693c6b14033fddfccc142e4e37cda8"), projection{}()]

// rule `project:Vals`(inj{Vals,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9617e1fd27b97573fc4670a94913c39412e946a063e3dd4a1dac234d3a17ed02), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVals{}, SortKItem{}}(VarK:SortVals{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortVals{},R} (
      Lblproject'Coln'Vals{}(X0:SortK{}),
     \and{SortVals{}} (
       VarK:SortVals{},
        \top{SortVals{}}())))
  [UNIQUE'Unds'ID{}("9617e1fd27b97573fc4670a94913c39412e946a063e3dd4a1dac234d3a17ed02"), projection{}()]

// rule `replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,ToReplace,Replacement,Count)=>`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToReplace)),`lengthString(_)_STRING-COMMON_Int_String`(Source)),ToReplace,Replacement,`_-Int_`(Count,#token("1","Int")))) requires `_>Int_`(Count,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(311b80d2cb12d368f230eba968464e1fc926bd57e304059b282b82af4d9626d9), org.kframework.attributes.Location(Location(1884,8,1887,30)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarCount:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarReplacement:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarCount:SortInt{}
          ),
          \top{R} ()
        ))))),
    \equals{SortString{},R} (
      Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortString{},X3:SortInt{}),
     \and{SortString{}} (
       Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{})),VarToReplace:SortString{},VarReplacement:SortString{},Lbl'Unds'-Int'Unds'{}(VarCount:SortInt{},\dv{SortInt{}}("1")))),
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("311b80d2cb12d368f230eba968464e1fc926bd57e304059b282b82af4d9626d9"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1884,8,1887,30)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,_Gen0,_Gen1,#token("0","Int"))=>Source requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4367434b0f61c404f7a2e926426bd23874dd547de689c5d15089967fbab2b3d5), org.kframework.attributes.Location(Location(1888,8,1888,49)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            Var'Unds'Gen0:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            Var'Unds'Gen1:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            \dv{SortInt{}}("0")
          ),
          \top{R} ()
        ))))),
    \equals{SortString{},R} (
      Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortString{},X3:SortInt{}),
     \and{SortString{}} (
       VarSource:SortString{},
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("4367434b0f61c404f7a2e926426bd23874dd547de689c5d15089967fbab2b3d5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1888,8,1888,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `replaceAll(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,Replacement)=>`replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,ToReplace,Replacement,`countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToReplace)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(262167183c3ec2e214d12bac6e639d7ac1a9f973582e16eca6c1af1da7ecc0a5), org.kframework.attributes.Location(Location(1889,8,1889,154)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarReplacement:SortString{}
          ),
          \top{R} ()
        )))),
    \equals{SortString{},R} (
      LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{},X2:SortString{}),
     \and{SortString{}} (
       Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{},LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{})),
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("262167183c3ec2e214d12bac6e639d7ac1a9f973582e16eca6c1af1da7ecc0a5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1889,8,1889,154)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `replaceFirst(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,Replacement)=>`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToReplace)),`lengthString(_)_STRING-COMMON_Int_String`(Source))) requires `_>=Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(e290042e5b5b2f620c0ca1871e708c3713c62b63b283e317bb7568e13968fe0c), org.kframework.attributes.Location(Location(1877,8,1879,66)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarReplacement:SortString{}
          ),
          \top{R} ()
        )))),
    \equals{SortString{},R} (
      LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{},X2:SortString{}),
     \and{SortString{}} (
       Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{}))),
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("e290042e5b5b2f620c0ca1871e708c3713c62b63b283e317bb7568e13968fe0c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1877,8,1879,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `replaceFirst(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,_Gen0)=>Source requires `_<Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(8fbd1c8efb9988236eddc95fc2af4a3e74f6ec94d696ee47209543fd0826dd34), org.kframework.attributes.Location(Location(1880,8,1881,57)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            Var'Unds'Gen0:SortString{}
          ),
          \top{R} ()
        )))),
    \equals{SortString{},R} (
      LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{},X2:SortString{}),
     \and{SortString{}} (
       VarSource:SortString{},
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("8fbd1c8efb9988236eddc95fc2af4a3e74f6ec94d696ee47209543fd0826dd34"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1880,8,1881,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,S2,I)=>`maxInt(_,_)_INT-COMMON_Int_Int_Int`(`rfindString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I)) requires `_=/=String__STRING-COMMON_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(b7f740050d72a847424b022a9c8217325aba8a154a42831aa3c7a3b0727f3205), org.kframework.attributes.Location(Location(1869,8,1869,182)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{})),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("b7f740050d72a847424b022a9c8217325aba8a154a42831aa3c7a3b0727f3205"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1869,8,1869,182)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(_Gen0,#token("\"\"","String"),_Gen1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(23b9fa88124c547d94aed32124d1ccd1069732b059f4c8b430ab4617979690f6), org.kframework.attributes.Location(Location(1870,8,1870,33)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            Var'Unds'Gen0:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            \dv{SortString{}}("")
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            Var'Unds'Gen1:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       \dv{SortInt{}}("-1"),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("23b9fa88124c547d94aed32124d1ccd1069732b059f4c8b430ab4617979690f6"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1870,8,1870,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `signExtendBitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_-Int_`(`_modInt_`(`_+Int_`(`bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))),`_<<Int_`(#token("1","Int"),LEN)),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3b67f4bf2235fc46fc94b1d10e936100ea3fc4f2dbaa4e4a77593e8385f5004f), org.kframework.attributes.Location(Location(1416,8,1416,164)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarLEN:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{},X2:SortInt{}),
     \and{SortInt{}} (
       Lbl'Unds'-Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{},VarLEN:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1")))),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{})),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1")))),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("3b67f4bf2235fc46fc94b1d10e936100ea3fc4f2dbaa4e4a77593e8385f5004f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1416,8,1416,164)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

endmodule [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(143,1,298,10)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw6/q2/fun-untyped.k)")]
